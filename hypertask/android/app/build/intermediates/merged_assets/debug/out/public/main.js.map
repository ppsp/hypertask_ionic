{"version":3,"file":"main.js","mappings":"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":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/TaskCard/task-card-popover/task-card-popover.component.ts","./src/app/components/TaskCard/task-card/task-card-viewmodel.ts","./src/app/components/TaskCard/task-card/task-card.component.ts","./src/app/components/TaskCard/task-scores/task-scores.component.ts","./src/app/components/TaskCard/timer/timer.component.ts","./src/app/components/debug-log/debug-log.component.ts","./src/app/components/group-card/group-card.component.ts","./src/app/components/group-create/group-create.component.ts","./src/app/components/group-edit/group-edit.component.ts","./src/app/components/group-list/group-list.component.ts","./src/app/components/group-popover/group-popover.component.ts","./src/app/components/login/login.component.ts","./src/app/components/note-list/note-list.component.ts","./src/app/components/privacy/privacy.component.ts","./src/app/components/send-feedback/send-feedback.component.ts","./src/app/components/side-menu/side-menu.component.ts","./src/app/components/skips-popover/skips-popover.component.ts","./src/app/components/task-create/task-create.component.ts","./src/app/components/task-edit/task-edit.component.ts","./src/app/components/task-list-popover/task-list-popover.component.ts","./src/app/components/task-list/task-list.component.ts","./src/app/components/task-selection-card/task-selection-card.component.ts","./src/app/components/task-selection/task-selection.component.ts","./src/app/components/terms/terms.component.ts","./src/app/components/user-settings/user-settings.component.ts","./src/app/components/welcome/welcome.component.ts","./src/app/interfaces/i-api-provider.ts","./src/app/interfaces/i-authentication-service.ts","./src/app/interfaces/i-data-sync-local-service.ts","./src/app/interfaces/i-local-storage-service.ts","./src/app/interfaces/i-logger.ts","./src/app/interfaces/i-user-service.ts","./src/app/models/Core/bug-report-type.enum.ts","./src/app/models/Core/calendar-task.ts","./src/app/models/Core/custom-stat.enum.ts","./src/app/models/Core/day-of-week.enum.ts","./src/app/models/Core/language.enum.ts","./src/app/models/Core/release-note.ts","./src/app/models/Core/result-type.enum.ts","./src/app/models/Core/selectable-task.ts","./src/app/models/Core/task-frequency.enum.ts","./src/app/models/Core/task-group.ts","./src/app/models/Core/task-history.ts","./src/app/models/Core/task-stat.ts","./src/app/models/Core/task-timer.ts","./src/app/models/Core/user-config.ts","./src/app/models/Core/user.ts","./src/app/models/DTO/dto-bug-report.ts","./src/app/models/DTO/dto-calendar-task.ts","./src/app/models/DTO/dto-get-calendar-task-request.ts","./src/app/models/DTO/dto-task-group.ts","./src/app/models/DTO/dto-task-history.ts","./src/app/models/DTO/dto-timer.ts","./src/app/models/DTO/dto-user-config.ts","./src/app/models/DTO/dto-user.ts","./src/app/models/Exceptions/ApiHttpError.ts","./src/app/models/Exceptions/CalendarTaskNotFoundError.ts","./src/app/models/Exceptions/DatabaseLockedError.ts","./src/app/models/Exceptions/GroupNotFoundError.ts","./src/app/models/Exceptions/InvalidCalendarTaskError.ts","./src/app/models/Exceptions/InvalidTaskGroupError.ts","./src/app/models/Exceptions/TaskHistoryAlreadyExistsError.ts","./src/app/models/Exceptions/TaskHistoryNotFoundError.ts","./src/app/models/Exceptions/UnknownLanguageError.ts","./src/app/models/Exceptions/UserNotFoundError.ts","./src/app/pipes/format-dayofweek-abbr-pipe.ts","./src/app/pipes/format-dayofweek-pipe.ts","./src/app/pipes/format-timer-pipe.ts","./src/app/pipes/main-pipe.module.ts","./src/app/services/alert.service.ts","./src/app/services/api-service.ts","./src/app/services/application-insights.service.ts","./src/app/services/auth.guard.ts","./src/app/services/authentication.service.ts","./src/app/services/bug-report.service.ts","./src/app/services/calendar-task.service.ts","./src/app/services/changelog.service.ts","./src/app/services/data-sync-2.service.ts","./src/app/services/data-sync-local-service.ts","./src/app/services/data-sync-server-service.ts","./src/app/services/data-sync.service.ts","./src/app/services/date.service.ts","./src/app/services/event.service.ts","./src/app/services/fireworks.service.ts","./src/app/services/local-storage.service.ts","./src/app/services/modal.service.ts","./src/app/services/network.service.ts","./src/app/services/report.service.ts","./src/app/services/selectable-task.service.ts","./src/app/services/sqlite.service.ts","./src/app/services/task-history.service.ts","./src/app/services/task-stats.service.ts","./src/app/services/timer.service.ts","./src/app/services/user.service.ts","./src/app/services/vibration.service.ts","./src/app/shared/date-utils.ts","./src/app/shared/number-utils.ts","./src/app/shared/thread.utils.ts","./src/environments/environment.ts","./src/main.ts","./node_modules/@ionic/core/dist/esm|lazy|/^/.*/.entry/.js$/|include: /.entry/.js$/|exclude: /.system/.entry/.js$/|groupOptions: {}|namespace object","./src/app/app.component.html","./src/app/components/TaskCard/task-card-popover/task-card-popover.component.html","./src/app/components/TaskCard/task-card/task-card.component.html","./src/app/components/TaskCard/task-scores/task-scores.component.html","./src/app/components/TaskCard/timer/timer.component.html","./src/app/components/debug-log/debug-log.component.html","./src/app/components/group-card/group-card.component.html","./src/app/components/group-create/group-create.component.html","./src/app/components/group-edit/group-edit.component.html","./src/app/components/group-list/group-list.component.html","./src/app/components/group-popover/group-popover.component.html","./src/app/components/login/login.component.html","./src/app/components/note-list/note-list.component.html","./src/app/components/privacy/privacy.component.html","./src/app/components/send-feedback/send-feedback.component.html","./src/app/components/side-menu/side-menu.component.html","./src/app/components/skips-popover/skips-popover.component.html","./src/app/components/task-create/task-create.component.html","./src/app/components/task-edit/task-edit.component.html","./src/app/components/task-list-popover/task-list-popover.component.html","./src/app/components/task-list/task-list.component.html","./src/app/components/task-selection-card/task-selection-card.component.html","./src/app/components/task-selection/task-selection.component.html","./src/app/components/terms/terms.component.html","./src/app/components/user-settings/user-settings.component.html","./src/app/components/welcome/welcome.component.html","./node_modules/moment/locale|sync|/^/.*$"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { PrivacyComponent } from './components/privacy/privacy.component';\nimport { TaskListComponent } from './components/task-list/task-list.component';\nimport { TermsComponent } from './components/terms/terms.component';\nimport { AuthGuard } from './services/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'task-list',\n    pathMatch: 'full'\n  },\n  { path: 'task-list', component: TaskListComponent, canActivate: [AuthGuard] },\n  { path: 'terms', component: TermsComponent },\n  { path: 'privacy', component: PrivacyComponent },\n  { path: 'login', component: LoginComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules, relativeLinkResolution: 'legacy' })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { Platform } from '@ionic/angular';\n//import { SplashScreen } from '@capacitor/splash-screen';\n//import { StatusBar, Style } from '@capacitor/status-bar';\nimport { AppUpdate } from '@ionic-native/app-update/ngx';\nimport { environment } from 'src/environments/environment';\nimport { ChangelogService } from './services/changelog.service';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UserService } from './services/user.service';\nimport { Language } from './models/Core/language.enum';\nimport { ILogger } from './interfaces/i-logger';\nimport { UserConfig } from './models/Core/user-config';\nimport { User } from './models/Core/user';\nimport DateUtils from './shared/date-utils';\nimport { DataSyncService } from './services/data-sync.service';\nimport { DataSyncServerService } from './services/data-sync-server-service';\nimport { DataSyncService2 } from './services/data-sync-2.service';\n// import * as introJs from 'intro.js/intro.js';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private appUpdate: AppUpdate,\n    private changeLogService: ChangelogService,\n    private dataSync: DataSyncService,\n    private dataSync2: DataSyncService2,\n    private translate: TranslateService,\n    private userService: UserService,\n    private logger: ILogger) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    const dateStart = new Date();\n    this.logger.logDebug('INITIALIZE APP', dateStart.toISOString());\n    this.platform.ready().then(() => {\n      // this.logger.logDebug('Platform ready ', DateUtils.getTimeSince(dateStart));\n      //SplashScreen.hide()\n      //StatusBar.setStyle() // TODO : CAPACITOR\n      //this.statusBar.styleLightContent();\n      //this.splashScreen.hide();\n      DataSyncServerService.GetLatestRequired = true;\n      DataSyncServerService.GetLatestRequiredReason = 'Initialize App';\n      // this.dataSync.checkForSyncRepeat();\n      this.dataSync2.checkForSyncRepeat();\n\n      // this.logger.logDebug('GET User Initial ', DateUtils.getTimeSince(dateStart));\n\n      this.userService.getCurrentUser().then(user => {\n        if (user != null) {\n          this.logger.logDebug('GOT User Initial', DateUtils.getTimeSince(dateStart));\n\n          this.logger.logEvent('got user initial', {\n            key: 'user', value: JSON.stringify(user)\n          });\n          this.translate.use(User.getConfig(user, UserConfig.PreferedLanguageKey) === Language.English ?\n            'en' :\n            'fr').toPromise().then(() => {\n            // this.logger.logDebug('Checking for update', DateUtils.getTimeSince(dateStart));\n            this.checkForUpdateCordova();\n            // this.logger.logDebug('Checked for update', DateUtils.getTimeSince(dateStart));\n          });\n          if (User.getConfig(user, UserConfig.KeepPortrait) === true) {\n            try {\n              if (this.platform.is('capacitor')) {\n                screen.orientation.lock('portrait');\n              }\n            } catch (error) {\n\n            }\n          }\n        } else {\n          this.translate.use('en').toPromise().then(() => {\n            this.checkForUpdateCordova();\n          });\n        }\n      });\n    });\n  }\n\n  private checkForUpdateCordova() {\n    if (this.platform.is('cordova')) {\n      this.checkForUpdate();\n      this.changeLogService.showChangeLogsAndSetToViewed();\n      /*this.platform.backButton.subscribeWithPriority(0, () => {\n        this.logger.logEvent('minimizing app', {\n          key: 'user', value: JSON.stringify(user)\n        });\n        this.appMinimize.minimize();\n      });*/\n    }\n  }\n\n  public async checkForUpdate(): Promise<void> {\n    try {\n      const updateUrl = environment.apiUpdateXmlUrl;\n      await this.appUpdate.checkAppUpdate(updateUrl);\n    } catch (error) {\n      this.logger.logError(error);\n      // console.log('error checking for update', error);\n      // alert(this.translate.instant('login.msg-update-error') + error.msg);\n    }\n  }\n}\n","import { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SideMenuComponent } from './components/side-menu/side-menu.component';\nimport { TaskListComponent } from './components/task-list/task-list.component';\nimport { PrivacyComponent } from './components/privacy/privacy.component';\nimport { TermsComponent } from './components/terms/terms.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { TaskCardComponent } from './components/TaskCard/task-card/task-card.component';\nimport { TaskSelectionComponent } from './components/task-selection/task-selection.component';\nimport { TaskSelectionCardComponent } from './components/task-selection-card/task-selection-card.component';\nimport { SendFeedbackComponent } from './components/send-feedback/send-feedback.component';\nimport { WelcomeComponent } from './components/welcome/welcome.component';\nimport { TaskCardPopoverComponent } from './components/TaskCard/task-card-popover/task-card-popover.component';\nimport { UserSettingsComponent } from './components/user-settings/user-settings.component';\nimport { GroupCardComponent } from './components/group-card/group-card.component';\nimport { GroupPopoverComponent } from './components/group-popover/group-popover.component';\nimport { DebugLogComponent } from './components/debug-log/debug-log.component';\nimport { GroupListComponent } from './components/group-list/group-list.component';\nimport { SkipsPopoverComponent } from './components/skips-popover/skips-popover.component';\nimport { ILogger } from './interfaces/i-logger';\nimport { IAuthenticationService } from './interfaces/i-authentication-service';\nimport { AuthenticationService } from './services/authentication.service';\nimport { DataSyncServerService } from './services/data-sync-server-service';\nimport { DataSyncService } from './services/data-sync.service';\nimport { ILocalStorageService } from './interfaces/i-local-storage-service';\nimport { IDataSyncLocalService } from './interfaces/i-data-sync-local-service';\nimport { DataSyncLocalService } from './services/data-sync-local-service';\nimport { IApiProvider } from './interfaces/i-api-provider';\nimport { ChangelogService } from './services/changelog.service';\nimport { NetworkService } from './services/network.service';\nimport { AlertService } from './services/alert.service';\nimport { TaskStatsService } from './services/task-stats.service';\nimport { EventService } from './services/event.service';\nimport { BugReportService } from './services/bug-report.service';\nimport { FireworksService } from './services/fireworks.service';\nimport { ReportService } from './services/report.service';\nimport { IUserService } from './interfaces/i-user-service';\nimport { UserService } from './services/user.service';\nimport { DatePipe, LOCATION_INITIALIZED } from '@angular/common';\nimport { FormatDayOfWeekPipe } from './pipes/format-dayofweek-pipe';\nimport { FormatDayOfWeekAbbrPipe } from './pipes/format-dayofweek-abbr-pipe';\nimport { AppUpdate } from '@ionic-native/app-update/ngx';\nimport { SelectableTaskService } from './services/selectable-task.service';\nimport { DateService } from './services/date.service';\nimport { ModalService } from './services/modal.service';\nimport { TimerService } from './services/timer.service';\nimport { TranslateLoader, TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { MainPipeModule } from './pipes/main-pipe.module';\nimport { Ionic4DatepickerModule } from '@logisticinfotech/ionic4-datepicker';\nimport { ApiService } from './services/api-service';\nimport { SqliteService } from './services/sqlite.service';\nimport { SQLite } from '@ionic-native/sqlite/ngx';\nimport { IonicStorageModule } from '@ionic/storage-angular';\nimport { LocalStorageMockService } from './tests/mocks/local-storage-mock.service';\nimport { MockLogger } from './tests/mocks/logger-mock.service';\nimport { File } from '@ionic-native/file/ngx';\nimport 'firebaseui/dist/firebaseui.css'\nimport { environment } from 'src/environments/environment';\nimport { FormsModule } from '@angular/forms';\nimport { firebase, firebaseui, FirebaseUIModule } from 'firebaseui-angular';\nimport { AngularFireModule } from \"@angular/fire/compat\";\nimport { AngularFireAuthModule, USE_EMULATOR as USE_AUTH_EMULATOR } from \"@angular/fire/compat/auth\";\nimport { LocalStorageService } from './services/local-storage.service';\nimport { Drivers } from '@ionic/storage';\nimport { TimerComponent } from './components/TaskCard/timer/timer.component';\nimport { TaskScoresComponent } from './components/TaskCard/task-scores/task-scores.component';\nimport { TaskCreateComponent } from './components/task-create/task-create.component';\nimport { ApplicationInsightsService } from './services/application-insights.service';\nimport { TaskListPopoverComponent } from './components/task-list-popover/task-list-popover.component';\nimport { NoteListComponent } from './components/note-list/note-list.component';\nimport { TaskEditComponent } from './components/task-edit/task-edit.component';\nimport { GroupCreateComponent } from './components/group-create/group-create.component';\nimport { GroupEditComponent } from './components/group-edit/group-edit.component';\n\n//import { SplashScreen } from '@ionic-native/splash-screen/ngx';\n//import { AppVersion } from '@ionic-native/app-version/ngx';\n//import { BackgroundMode } from '@ionic-native/background-mode/ngx';\n//import { Network } from '@ionic-native/network/ngx';\n//import { AppMinimize } from '@ionic-native/app-minimize/ngx';\n\n// AoT requires an exported function for factories\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\nconst firebaseUiAuthConfig: firebaseui.auth.Config = {\n  signInOptions: [\n    // EMAIL\n    {\n      requireDisplayName: false,\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    }\n  ],\n  tosUrl: '/terms',\n  privacyPolicyUrl: '/privacy',\n  credentialHelper: firebaseui.auth.CredentialHelper.NONE,\n};\n\nexport function appInitializerFactory(translate: TranslateService, injector: Injector) {\n  return () => new Promise<any>((resolve: any) => {\n    const locationInitialized = injector.get(LOCATION_INITIALIZED, Promise.resolve(null));\n    locationInitialized.then(() => {\n      const langToSet = 'en'; // TODO : Use user language\n      translate.setDefaultLang(langToSet);\n      translate.use(langToSet).subscribe(() => {\n      }, err => {\n        console.error(`Problem with '${langToSet}' language initialization.'`);\n      }, () => {\n        resolve(null);\n      });\n    });\n  });\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TaskListComponent,\n    PrivacyComponent,\n    TermsComponent,\n    LoginComponent,\n    TaskCardComponent,\n    TaskListComponent,\n    TaskCardComponent,\n    SideMenuComponent,\n    TaskCardComponent,\n    TermsComponent,\n    TaskSelectionComponent,\n    TaskSelectionCardComponent,\n    SendFeedbackComponent,\n    WelcomeComponent,\n    TaskCardPopoverComponent,\n    SkipsPopoverComponent,\n    UserSettingsComponent,\n    GroupCardComponent,\n    GroupPopoverComponent,\n    DebugLogComponent,\n    TaskListComponent,\n    GroupListComponent,\n    TaskListPopoverComponent,\n    GroupCardComponent,\n    NoteListComponent,\n    TaskCardPopoverComponent,\n    TimerComponent,\n    TaskCreateComponent,\n    TaskEditComponent,\n    TaskScoresComponent,\n    GroupCreateComponent,\n    GroupEditComponent\n  ],\n  entryComponents: [],\n  imports: [\n    BrowserModule, \n    IonicModule.forRoot(), \n    AppRoutingModule,\n    HttpClientModule,\n    MainPipeModule,\n    Ionic4DatepickerModule,\n    IonicStorageModule.forRoot({\n        name: 'tasksDb',\n        driverOrder: [Drivers.IndexedDB, Drivers.LocalStorage]\n    }),\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    FirebaseUIModule.forRoot(firebaseUiAuthConfig),\n    TranslateModule.forRoot({\n      loader: {\n          provide: TranslateLoader,\n          useFactory: (createTranslateLoader),\n          deps: [HttpClient],\n      },\n  }),\n  ],\n  providers: [\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    //StatusBar, TODO CAPACITOR\n    //SplashScreen,\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    { provide: ILogger, useClass: ApplicationInsightsService },\n    //{ provide: ILogger, useClass: MockLogger },\n    { provide: IAuthenticationService, useClass: AuthenticationService },\n    DataSyncServerService,\n    DataSyncService,\n    { provide: ILocalStorageService, useClass: LocalStorageService },\n    //{ provide: ILocalStorageService, useClass: SqliteService },\n    { provide: IDataSyncLocalService, useClass: DataSyncLocalService },\n    { provide: IApiProvider, useClass: ApiService },\n    //AppMinimize, TODO CAPACITOR\n    ChangelogService,\n    NetworkService,\n    AlertService,\n    TaskStatsService,\n    SqliteService,\n    SQLite,\n    File,\n    EventService,\n    BugReportService,\n    FireworksService,\n    ReportService,\n    { provide: IUserService, useClass: UserService },\n    //Network,\n    DatePipe,\n    FormatDayOfWeekPipe,\n    FormatDayOfWeekAbbrPipe,\n    //BackgroundMode,\n    AppUpdate,\n    //Vibration,\n    //AppVersion,\n    SelectableTaskService,\n    DateService,\n    //LocalNotifications,\n    //NotificationService,\n    //VibrationService, TODO CAPACITOR\n    //Storage,\n    ModalService,\n    TimerService,\n    {\n        provide: APP_INITIALIZER,\n        useFactory: appInitializerFactory,\n        deps: [TranslateService, Injector],\n        multi: true\n    },\n    //Auth\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CalendarTask } from 'src/app/models/Core/calendar-task';\r\nimport { PopoverController, ModalController, AlertController, Platform } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TaskEditComponent } from '../../task-edit/task-edit.component';\r\nimport { Ionic4DatepickerModalComponent } from '@logisticinfotech/ionic4-datepicker';\r\nimport { DateService } from 'src/app/services/date.service';\r\nimport DateUtils from 'src/app/shared/date-utils';\r\nimport { CalendarTaskService } from 'src/app/services/calendar-task.service';\r\nimport { ILogger } from 'src/app/interfaces/i-logger';\r\nimport { AlertOptions } from '@ionic/core';\r\nimport { TaskCardViewModel } from '../task-card/task-card-viewmodel';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { TaskHistory } from 'src/app/models/Core/task-history';\r\nimport { TaskHistoryService } from 'src/app/services/task-history.service';\r\nimport { EventService, EventData } from 'src/app/services/event.service';\r\nimport { VibrationService } from 'src/app/services/vibration.service';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-task-card-popover',\r\n  templateUrl: './task-card-popover.component.html',\r\n  styleUrls: ['./task-card-popover.component.scss'],\r\n})\r\nexport class TaskCardPopoverComponent implements OnInit {\r\n\r\n  @Input() currentTask: CalendarTask;\r\n  @Input() viewModel: TaskCardViewModel;\r\n\r\n  public btnShowStatsShown: boolean = true;\r\n  public btnAddNoteShown: boolean = true;\r\n  public btnVoidResultShown: boolean = true;\r\n  public btnResumeTimerShown: boolean = true;\r\n\r\n  private datePickerObj: any = {};\r\n\r\n  constructor(private popoverController: PopoverController,\r\n              private modalController: ModalController,\r\n              private dateService: DateService,\r\n              private calendarTaskService: CalendarTaskService,\r\n              private logger: ILogger,\r\n              private translate: TranslateService,\r\n              private alertController: AlertController,\r\n              private alertService: AlertService,\r\n              private taskHistoryService: TaskHistoryService,\r\n              private eventService: EventService,\r\n              private vibrationService: VibrationService,\r\n              private modalService: ModalService,\r\n              private platform: Platform) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  public async btnEditTaskClick() {\r\n    await this.modalService.showEditTaskModal(TaskEditComponent, this.currentTask);\r\n    await this.popoverController.dismiss();\r\n  }\r\n\r\n  // TODO : Extract this from here, it's duplicate\r\n  public async btnPostponeClick() {\r\n    const datePickerModal = await this.modalController.create({\r\n      component: Ionic4DatepickerModalComponent,\r\n      cssClass: 'li-ionic4-datePicker',\r\n      componentProps: {\r\n         objConfig: this.datePickerObj,\r\n         selectedDate: DateUtils.AddDays(this.dateService.currentWorkDate, 1)\r\n      }\r\n    });\r\n    await datePickerModal.present();\r\n\r\n    const data = await datePickerModal.onDidDismiss();\r\n\r\n    const selectedDate = new Date(data.data.date);\r\n\r\n    if (!DateUtils.isValidDate(selectedDate)) { // standard cancel\r\n      await this.popoverController.dismiss();\r\n      return;\r\n    }\r\n\r\n    this.currentTask.SkipUntil = selectedDate;\r\n\r\n    const result = await this.calendarTaskService.updateCalendarTask(this.currentTask);\r\n    if (result) {\r\n      this.viewModel.reset();\r\n      this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, null));\r\n    } else {\r\n      this.logger.logError(new Error('Unable to save skip until'));\r\n      alert(this.translate.instant('btnPostponeClick-card.error-saving-skip-until'));\r\n    }\r\n    await this.popoverController.dismiss();\r\n  }\r\n\r\n  public async btnShowStatsClick() {\r\n    this.eventService.emit(new EventData(EventService.EventIds.ShowStats + this.currentTask.CalendarTaskId, true));\r\n    await this.popoverController.dismiss();\r\n  }\r\n\r\n  public async btnAddNoteClick() {\r\n    const handler: (alertData: any) => void = (alertData) => {\r\n      this.saveNote(alertData).then(() => {\r\n        this.viewModel.showNote = true;\r\n        this.viewModel.currentNote = this.viewModel.getTaskNote();\r\n      });\r\n    };\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getNoteAlertOptions(handler);\r\n    const alert = await this.alertController.create(alertOptions);\r\n    await alert.present();\r\n\r\n    const firstInput: any = document.querySelector('ion-alert input');\r\n    await this.popoverController.dismiss();\r\n    firstInput.focus();\r\n\r\n    const subscription = this.platform.backButton.subscribe(async () => {\r\n      await alert.dismiss();\r\n    });\r\n    await alert.onDidDismiss();\r\n    subscription.unsubscribe();\r\n  }\r\n\r\n  private async saveNote(alertData: any) {\r\n    // Disable data over 1000 characters\r\n    if (alertData.Value.length > 2000) {\r\n      alertData.Value = alertData.Value.substring(0, 2000);\r\n    }\r\n\r\n    const history: TaskHistory = this.calendarTaskService.getTaskHistoryNoVoid(this.viewModel.currentTask,\r\n                                                                               this.dateService.currentWorkDate);\r\n    // console.log('saveNote', history);\r\n    history.Comment = alertData.Value;\r\n    await this.taskHistoryService.updateTaskHistory(history);\r\n    this.eventService.emit(new EventData(EventService.EventIds.CardReset + this.currentTask.CalendarTaskId, true));\r\n  }\r\n\r\n  public async btnVoidResultClick() {\r\n    const handler: (alertData: any) => void = (alertData) => {\r\n      this.voidResult();\r\n    };\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getVoidAlertOptions(handler);\r\n    const alert = await this.alertController.create(alertOptions);\r\n    await alert.present();\r\n    await this.popoverController.dismiss();\r\n\r\n    const subscription = this.platform.backButton.subscribe(async () => {\r\n      await alert.dismiss();\r\n    });\r\n    await alert.onDidDismiss();\r\n    subscription.unsubscribe();\r\n  }\r\n\r\n  private async voidResult(): Promise<void> {\r\n    // this.isSelected = false;\r\n    const calendarTaskHistory = this.calendarTaskService.getTaskHistoryNoVoid(this.viewModel.currentTask,\r\n                                                                              this.dateService.currentWorkDate);\r\n    calendarTaskHistory.Void = true;\r\n    const success = await this.taskHistoryService.updateTaskHistory(calendarTaskHistory);\r\n    if (success) { // TODO: Test error\r\n      if (success === true) {\r\n        this.viewModel.voidResult();\r\n      } else {\r\n        this.logger.logError(new Error('Unable to void TaskHistory, result is false'));\r\n        alert(this.translate.instant('task-card.msg-saving-error'));\r\n      }\r\n    } else {\r\n    this.logger.logError(new Error('Unable to void TaskHistory : '));\r\n    }\r\n    return;\r\n  }\r\n\r\n  public async btnResumeTimerClick() {\r\n    this.vibrationService.vibrate(5);\r\n    this.eventService.emit(new EventData(EventService.EventIds.TimerResume + this.currentTask.CalendarTaskId, true));\r\n    await this.popoverController.dismiss();\r\n  }\r\n}\r\n","import { CalendarTask } from 'src/app/models/Core/calendar-task';\r\nimport { Subject } from 'rxjs';\r\nimport { TaskStats } from 'src/app/models/Core/task-stat';\r\nimport DateUtils from 'src/app/shared/date-utils';\r\nimport { TaskFrequency } from 'src/app/models/Core/task-frequency.enum';\r\nimport { CalendarTaskService } from 'src/app/services/calendar-task.service';\r\nimport { ILogger } from 'src/app/interfaces/i-logger';\r\nimport { StatType } from 'src/app/models/Core/custom-stat.enum';\r\nimport { TaskStatsService } from 'src/app/services/task-stats.service';\r\nimport { DateService } from 'src/app/services/date.service';\r\nimport { TimerService } from 'src/app/services/timer.service';\r\nimport { EventService, EventData } from 'src/app/services/event.service';\r\n\r\nexport class TaskCardViewModel {\r\n\r\n  public statsLoaded: boolean;\r\n\r\n  public showBtnStart: boolean;\r\n  public showBtnPause: boolean;\r\n  public showBtnResume: boolean;\r\n  public showBtnCancelTimer: boolean;\r\n  public showBtnEnterTime: boolean;\r\n  public showBtnEnterDuration: boolean;\r\n  public showBtnEnterValue: boolean;\r\n  public showBtnDone: boolean;\r\n  public showBtnSkip: boolean;\r\n  public showBtnVoid: boolean;\r\n  public showBtnDelete: boolean;\r\n  public showTaskResult: boolean;\r\n  public showMainTaskButtons: boolean;\r\n  public showCheckedBox: boolean;\r\n  public showText: boolean;\r\n  public showBrokenHeart: boolean;\r\n  public showBtnNote: boolean;\r\n  public showNote: boolean;\r\n  public showBtnStats: boolean;\r\n  public showPostponeBtn: boolean;\r\n  public showBtnMenu: boolean;\r\n  public hideTimer: boolean;\r\n  public hideStats: boolean;\r\n  public showBtnResumeTimer: boolean;\r\n  public isShown: boolean;\r\n  public isBodyShown: boolean;\r\n  public taskResult: string;\r\n  public currentNote: string;\r\n  public hourValues: number[];\r\n  public minuteValues: number[];\r\n  public enableDragAndDrop: boolean = false;\r\n\r\n  public eventLoadStats: Subject<void> = new Subject<void>();\r\n\r\n  public timePicked: any;\r\n  public btnStartStopText: string;\r\n\r\n  public taskStats: TaskStats[] = [];\r\n\r\n  public currentTask: CalendarTask;\r\n  public timerComponent: any;\r\n\r\n  constructor(task: CalendarTask,\r\n              private calendarTaskService: CalendarTaskService,\r\n              private logger: ILogger,\r\n              private statsService: TaskStatsService,\r\n              private dateService: DateService,\r\n              private timerService: TimerService,\r\n              private eventService: EventService) {\r\n    this.currentTask = task;\r\n\r\n    // TODO: does not belong here\r\n    if (this.currentTask.Histories == null) {\r\n      this.currentTask.Histories = [];\r\n    }\r\n\r\n    this.reset();\r\n  }\r\n\r\n  public async showTimerIfExists() {\r\n    // TODO: Optimize with Map\r\n    const timerObject = await this.timerService.getTimer(this.dateService.currentWorkDate, this.currentTask.CalendarTaskId);\r\n\r\n    if (timerObject == null) {\r\n      return;\r\n    }\r\n\r\n    if (timerObject.CalendarTaskId != null &&\r\n        timerObject.isDone === false &&\r\n        timerObject.isStarted === true) {\r\n      if (this.showTaskResult === true) {\r\n        console.log('TRYING TO SHOW TIMER BUT IT SHOULD NOT', timerObject, this.currentTask);\r\n        this.logger.logError(new Error('TRYING TO SHOW TIMER BUT IT SHOULD NOT'),\r\n                             { key: 'unSentHistories', value: JSON.stringify(timerObject.CalendarTaskId)});\r\n      } else {\r\n        this.logger.logDebug('Showing timer ' + timerObject.CalendarTaskId);\r\n        this.showTimer();\r\n        if (timerObject.isPaused === true &&\r\n            timerObject.isDone === false) {\r\n          this.showResumeButton();\r\n          this.showCancelTimerButton();\r\n        } else if (timerObject.isPaused === false &&\r\n                    timerObject.isDone === false) {\r\n          this.showPauseButton();\r\n          this.showCancelTimerButton();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This function does not show timer if exists\r\n   */\r\n  public reset() {\r\n    // console.log('RESETTING ' + this.currentTask.Name);\r\n    this.isShown = this.calendarTaskService.isShown(this.currentTask,\r\n                                                    this.dateService.currentWorkDate.getDay(),\r\n                                                    this.dateService.currentWorkDate);\r\n    this.currentTask.IsShown = this.isShown;\r\n    if (!this.isShown) {\r\n      return;\r\n    }\r\n\r\n    this.enableDragAndDrop = this.calendarTaskService.enableDragAndDrop;\r\n    // console.log('RESETTING2 ' + this.currentTask.Name, this.enableDragAndDrop);\r\n    this.taskResult = this.calendarTaskService.getTaskResult(this.currentTask, this.dateService.currentWorkDate);\r\n\r\n    // console.log('[AFTER GETRESULT] ', this.currentTask.Name, this.taskResult);\r\n\r\n    this.isBodyShown = false;\r\n    this.currentNote = this.getTaskNote();\r\n\r\n    if (this.currentNote != null && this.currentNote.length > 0) {\r\n      this.isBodyShown = true;\r\n    }\r\n\r\n    // console.log('[AFTER GETNOTE] ', this.currentTask.Name, DateUtils.getTimeSince(startDate));\r\n\r\n    if (this.taskStats.length === 0) {\r\n      this.loadStats(0); // need component to be initialized or else on change event doesnt work first time\r\n    }\r\n\r\n    // Many subsequent functions need this, so only get it once\r\n    const taskHistoryNoVoid = this.calendarTaskService.getTaskHistoryNoVoid(this.currentTask, this.dateService.currentWorkDate);\r\n\r\n    // console.log('[AFTER LOADSTATS] ', this.currentTask.Name, DateUtils.getTimeSince(startDate));\r\n\r\n    this.showBtnStats = (this.currentTask.Frequency !== TaskFrequency.Once &&\r\n                        this.currentTask.Frequency !== TaskFrequency.UntilDone);\r\n\r\n    this.showBtnCancelTimer = false;\r\n    this.showBtnResume = false;\r\n    this.showBtnPause = false;\r\n    this.showBtnDelete = false;\r\n    this.showPostponeBtn = false;\r\n    this.showBtnMenu = true;\r\n\r\n    this.showCheckedBox = this.calendarTaskService.isDoneAtDate(this.currentTask, this.dateService.currentWorkDate, taskHistoryNoVoid) &&\r\n                          this.currentTask.isBinary();\r\n\r\n    if (!this.showCheckedBox) {\r\n      this.showBrokenHeart = this.calendarTaskService.isSkipped(taskHistoryNoVoid);\r\n      // console.log('[IS SKIPPED ?] ', this.currentTask.Name, this.showBrokenHeart, taskHistoryNoVoid);\r\n    } else {\r\n      this.showBrokenHeart = false;\r\n    }\r\n\r\n    this.showText = this.calendarTaskService.isDone(this.currentTask, taskHistoryNoVoid) === true &&\r\n                    this.currentTask.isBinary() === false;\r\n    this.showBtnVoid = this.calendarTaskService.isDoneAtDate(this.currentTask,\r\n                                                             this.dateService.currentWorkDate,\r\n                                                             taskHistoryNoVoid) === true ||\r\n                        this.calendarTaskService.isSkipped(taskHistoryNoVoid) === true;\r\n    this.showTaskResult = this.calendarTaskService.isDoneAtDate(this.currentTask,\r\n                                                                this.dateService.currentWorkDate,\r\n                                                                taskHistoryNoVoid) === true ||\r\n                            this.calendarTaskService.isSkipped(taskHistoryNoVoid) === true;\r\n    this.showMainTaskButtons = !this.showTaskResult;\r\n\r\n    this.showBtnSkip = true;\r\n\r\n    this.showNote = this.calendarTaskService.hasNote(this.currentTask, this.dateService.currentWorkDate);\r\n\r\n    this.timePicked = DateUtils.getLocalMysqlTimeFloored(new Date()).substring(0, 5);\r\n\r\n    // console.log('timepicked', this.timePicked);\r\n    // TODO : Optimize between AFTER STATS and HERE, it takes 5-10 ms it should take 1\r\n    // console.log('[AFTER ALL BASE RESET CHECKS] ', this.currentTask.Name, DateUtils.getTimeSince(startDate));\r\n\r\n    // Future\r\n    if (this.dateService.currentWorkDate > DateUtils.RemoveHours(new Date())) {\r\n      this.showBtnDone = false;\r\n      this.showBtnStart = false;\r\n      this.showBtnPause = false;\r\n      this.showBtnEnterDuration = false;\r\n      this.showBtnEnterTime = false;\r\n      this.showBtnEnterValue = false;\r\n      this.showBtnSkip = false;\r\n      this.hideTimer = true;\r\n\r\n      /*if (this.currentTask.Name === 'Reading') {\r\n        console.log('HIDING TIMER READING FUTURE', this.timerComponent);\r\n      }*/\r\n    } else { // Present and past\r\n      this.showBtnStart = this.currentTask.isDuration();\r\n      this.showBtnEnterTime = this.currentTask.isTime();\r\n      this.showBtnEnterDuration = this.currentTask.isDuration();\r\n      this.showBtnEnterValue = this.currentTask.isDecimal();\r\n      this.showBtnDone = this.currentTask.isBinary();\r\n\r\n      this.hideTimer = true;\r\n\r\n      /*if (this.currentTask.Name === 'Reading') {\r\n        console.log('HIDING TIMER READING PRESENT PAST', this.timerComponent);\r\n      }*/\r\n\r\n      this.hideStats = true;\r\n      this.showBtnNote = this.showBtnVoid && (taskHistoryNoVoid.Comment == null || taskHistoryNoVoid.Comment.length === 0);\r\n      if (this.showTaskResult &&\r\n          this.currentTask.isDuration() &&\r\n          this.calendarTaskService.isSkipped(taskHistoryNoVoid) === false) {\r\n        this.showBtnResumeTimer = true;\r\n      } else {\r\n        this.showBtnResumeTimer = false;\r\n      }\r\n    }\r\n\r\n      // console.log('[AFTER FUTURE VS PRESENT CHECK] ', this.currentTask.Name, DateUtils.getTimeSince(startDate));\r\n\r\n    // console.log('[RESET END] ', this.currentTask.Name, new Date().toISOString());\r\n    // console.log('[RESET END] ', this.currentTask.Name, DateUtils.getTimeSince(startDate));\r\n\r\n    this.showTimerIfExists();\r\n\r\n    if (this.enableDragAndDrop === true && this.hideTimer === true) {\r\n      this.showBtnDone = false;\r\n      this.showBtnStart = false;\r\n      this.showBtnEnterDuration = false;\r\n      this.showBtnEnterTime = false;\r\n      this.showBtnEnterValue = false;\r\n      this.showBtnDelete = true;\r\n      if (this.currentTask.Frequency === TaskFrequency.UntilDone &&\r\n          !this.calendarTaskService.isDone(this.currentTask, taskHistoryNoVoid)) {\r\n        this.showPostponeBtn = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  public async toggleStats(): Promise<void> {\r\n    this.hideStats = !this.hideStats;\r\n\r\n    if (!this.hideStats) {\r\n      this.eventLoadStats.next();\r\n    }\r\n  }\r\n\r\n  public voidResult(): void {\r\n    this.reset();\r\n    this.statsLoaded = false;\r\n    this.eventService.emit(new EventData(EventService.EventIds.TimerCancel + this.currentTask.CalendarTaskId, null));\r\n    this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, null));\r\n  }\r\n\r\n  public showPauseButton(): void {\r\n    this.showBtnStart = false;\r\n    this.showBtnPause = true;\r\n  }\r\n\r\n  public showTimer(): void {\r\n    // console.log('SHOWING TIMER');\r\n    this.isBodyShown = true;\r\n    this.hideTimer = false;\r\n    this.showBtnEnterDuration = false;\r\n    this.showBtnDone = true;\r\n    this.showBtnResume = false;\r\n    this.showBtnSkip = false;\r\n    this.showBtnStart = false;\r\n  }\r\n\r\n  public showResumeButton(): void {\r\n    this.showBtnPause = false;\r\n    this.showBtnResume = true;\r\n    this.showBtnStart = false;\r\n  }\r\n\r\n  public showCancelTimerButton(): void {\r\n    this.showBtnCancelTimer = true;\r\n  }\r\n\r\n  public getTaskNote(): string {\r\n    // console.log('Origin GetTaskNote');\r\n    const history = this.calendarTaskService.getTaskHistoryNoVoid(this.currentTask, this.dateService.currentWorkDate);\r\n    if (history != null && history.Comment != null && history.Comment.length > 0) {\r\n      return history.Comment;\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public loadStats(weeksBehind: number) {\r\n\r\n    const defaultStats = this.statsService.getTaskStats(this.currentTask.CalendarTaskId, this.dateService.currentWorkDate, weeksBehind);\r\n    if (this.currentTask.StatType != null) {\r\n      // console.log('SETTING STATTYPE : ', this.currentTask.StatType);\r\n      defaultStats.StatType = this.currentTask.StatType;\r\n    }\r\n    if (defaultStats != null) {\r\n      this.insertUpdateStats(defaultStats);\r\n    }\r\n\r\n    if (this.currentTask.StatType === StatType.TimeUp ||\r\n      this.currentTask.StatType === StatType.TimeSleep) {\r\n      const sleepStats = this.statsService.getSleepDurationStats(this.dateService.currentWorkDate, weeksBehind);\r\n      if (sleepStats != null) {\r\n        this.insertUpdateStats(sleepStats);\r\n      }\r\n    }\r\n    if (this.currentTask.StatType === StatType.TimeNonWaterStart ||\r\n      this.currentTask.StatType === StatType.TimeNonWaterStop) {\r\n      const nonWaterStats = this.statsService.getTimeRestrictedDurationStats(this.dateService.currentWorkDate, weeksBehind);\r\n      if (nonWaterStats != null) {\r\n        this.insertUpdateStats(nonWaterStats);\r\n      }\r\n    }\r\n    if (this.currentTask.StatType === StatType.TimeEatStart ||\r\n      this.currentTask.StatType === StatType.TimeEatStop) {\r\n\r\n      const eatingStats = this.statsService.getFastingDurationStats(this.dateService.currentWorkDate, weeksBehind);\r\n      if (eatingStats != null) {\r\n        this.insertUpdateStats(eatingStats);\r\n      }\r\n    }\r\n  }\r\n\r\n  private insertUpdateStats(stats: TaskStats) {\r\n    const existingTaskIndex = this.taskStats.findIndex(p => p.Name === stats.Name);\r\n    if (existingTaskIndex === -1) {\r\n      this.taskStats.push(stats);\r\n    } else {\r\n      const existingTask = this.taskStats[existingTaskIndex];\r\n      existingTask.MinusWeeksArray = stats.MinusWeeksArray;\r\n      existingTask.StartingMinusDays = stats.StartingMinusDays;\r\n      existingTask.TaskInsertWorkDate = stats.TaskInsertWorkDate;\r\n      existingTask.doneDays = stats.doneDays;\r\n      existingTask.results = stats.results;\r\n      existingTask.skippedDays = stats.skippedDays;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, ViewChildren, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { CalendarTask } from 'src/app/models/Core/calendar-task';\r\nimport { TaskHistory } from 'src/app/models/Core/task-history';\r\nimport { AlertController, PickerController, PopoverController, ModalController, Platform } from '@ionic/angular';\r\nimport { TaskHistoryService } from 'src/app/services/task-history.service';\r\nimport { MainPipeModule } from 'src/app/pipes/main-pipe.module';\r\nimport DateUtils from 'src/app/shared/date-utils';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { AlertOptions } from '@ionic/core';\r\nimport { ILogger } from 'src/app/interfaces/i-logger';\r\nimport { TaskStatsService } from 'src/app/services/task-stats.service';\r\nimport { StatType } from 'src/app/models/Core/custom-stat.enum';\r\nimport { TaskCardViewModel } from './task-card-viewmodel';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CalendarTaskService } from 'src/app/services/calendar-task.service';\r\nimport { IUserService } from 'src/app/interfaces/i-user-service';\r\nimport { UserConfig } from 'src/app/models/Core/user-config';\r\nimport { TaskCardPopoverComponent } from '../task-card-popover/task-card-popover.component';\r\nimport { DateService } from 'src/app/services/date.service';\r\nimport { EventService, EventData } from 'src/app/services/event.service';\r\nimport { TimerService } from 'src/app/services/timer.service';\r\nimport { SkipsPopoverComponent } from '../../skips-popover/skips-popover.component';\r\nimport { Ionic4DatepickerModalComponent } from '@logisticinfotech/ionic4-datepicker';\r\nimport { VibrationService } from 'src/app/services/vibration.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-task-card',\r\n  templateUrl: './task-card.component.html',\r\n  styleUrls: ['./task-card.component.scss'],\r\n})\r\nexport class TaskCardComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  @Input() currentTask: CalendarTask;\r\n  @ViewChildren('htmlTimer') timerComponent: any; // This is to enable access to the child component from this file\r\n  @ViewChildren('currentcard') currentCardComponent: any;\r\n  @ViewChildren('picker') datePicker;\r\n\r\n  public viewModel: TaskCardViewModel;\r\n  public devMode: boolean = false;\r\n  private datePickerObj: any = {};\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(\r\n    private alertController: AlertController,\r\n    private taskHistoryService: TaskHistoryService,\r\n    public mainPipe: MainPipeModule,\r\n    private logger: ILogger,\r\n    private alertService: AlertService,\r\n    private taskStatsService: TaskStatsService,\r\n    private translate: TranslateService,\r\n    private calendarTaskService: CalendarTaskService,\r\n    private userService: IUserService,\r\n    private pickerCtrl: PickerController,\r\n    private popoverController: PopoverController,\r\n    private dateService: DateService,\r\n    private eventService: EventService,\r\n    private timerService: TimerService,\r\n    private modalController: ModalController,\r\n    private vibrationService: VibrationService,\r\n    private platform: Platform) { }\r\n\r\n  async ngOnInit() {\r\n    // const startDate = new Date();\r\n    // this.logger.logDebug('[0] TASK ' + this.currentTask.Name + ' INIT STARTED', new Date().toISOString());\r\n    // this.changeDetector.detach();\r\n\r\n    // this.logger.logDebug('[0.1] TASK ' + this.currentTask.Name + ' LOADING VIEW MODEL', DateUtils.getTimeSince(startDate));\r\n\r\n    try {\r\n      this.viewModel = new TaskCardViewModel(this.currentTask,\r\n        this.calendarTaskService,\r\n        this.logger,\r\n        this.taskStatsService,\r\n        this.dateService,\r\n        this.timerService,\r\n        this.eventService);\r\n    } catch (error) {\r\n      // console.error('ERROR LOADING VIEWMODEL', error);\r\n      this.logger.logError(error);\r\n      alert('Error loading viewModel');\r\n    }\r\n\r\n    // this.logger.logDebug('[0.2] TASK ' + this.currentTask.Name + ' View Model loaded', DateUtils.getTimeSince(startDate));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.DateChanged, () => {\r\n      this.viewModel.reset();\r\n    }));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.CardReset + this.currentTask.CalendarTaskId, () => {\r\n      this.viewModel.reset();\r\n    }));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.TimerResume + this.currentTask.CalendarTaskId, async () => {\r\n      await this.voidResultAndResumeTimer();\r\n    }));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.ShowStats + this.currentTask.CalendarTaskId, async () => {\r\n      await this.btnMoreStatsClick();\r\n    }));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.HideStats + this.currentTask.CalendarTaskId, async () => {\r\n      this.viewModel.reset();\r\n    }));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.SkipTask + this.currentTask.CalendarTaskId, async () => {\r\n      await this.skip();\r\n    }));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.DeleteTask + this.currentTask.CalendarTaskId, async () => {\r\n      await this.btnDeleteClick(null);\r\n    }));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.PostponeTask + this.currentTask.CalendarTaskId, async () => {\r\n      await this.btnPostponeClick(null);\r\n    }));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.ToggleDragAndDrop, async (enable: boolean) => {\r\n      this.viewModel.enableDragAndDrop = enable;\r\n      this.viewModel.reset();\r\n    }));\r\n\r\n    // this.logger.logDebug('[0.3] TASK ' + this.currentTask.Name + ' Subscribed date change ', DateUtils.getTimeSince(startDate));\r\n\r\n    const user = await this.userService.getCurrentUser();\r\n\r\n    // this.logger.logDebug('[0.4] TASK ' + this.currentTask.Name + ' Got Current User ', DateUtils.getTimeSince(startDate));\r\n\r\n    this.viewModel.hourValues = UserConfig.getHourValues(user.Config);\r\n    this.viewModel.minuteValues = UserConfig.getMinutesValues();\r\n    // if (user.UserId === 'NSm32K4BF6Y7NFc2kwqWeGmy6KG2') {\r\n    this.devMode = true;\r\n    // }\r\n\r\n    // this.logger.logDebug('[0.5] TASK ' + this.currentTask.Name + 'Got values, Reattaching', DateUtils.getTimeSince(startDate));\r\n    // this.changeDetector.reattach();\r\n    // this.logger.logDebug('[0.6] TASK ' + this.currentTask.Name + ' Reattached', DateUtils.getTimeSince(startDate));\r\n\r\n\r\n    /*const lastGroup = this.calendarTaskService.allGroups[this.calendarTaskService.allGroups.length - 1];\r\n    if (lastGroup.Tasks.length > 0) {\r\n      console.log('LAST TASK GROUP', this.currentTask.Name);\r\n      const laskTask = lastGroup.Tasks[lastGroup.Tasks.length - 1];\r\n      if (laskTask.CalendarTaskId === this.currentTask.CalendarTaskId) {\r\n        this.logger.logDebug('LAST ITEM LOADED', DateUtils.getTimeSince(startDate));\r\n        // alert('LAST ITEM LOADED');\r\n      } else {\r\n        console.log('NOT LAST TASK', this.currentTask.Name);\r\n      }\r\n    } else {\r\n      console.log('NOT LAST GROUP', this.currentTask.Name, lastGroup.Tasks);\r\n    }*/\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const sub of this.subscriptions) {\r\n      sub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private async voidResultAndResumeTimer() {\r\n    const history = this.calendarTaskService.getTaskHistoryNoVoid(this.viewModel.currentTask,\r\n                                                                  this.dateService.currentWorkDate);\r\n    await this.voidResult();\r\n    const seconds = Number(history.TaskResult);\r\n    // this.timerComponent.first.currentTimerObject.currentTimerSeconds = history.TaskResult;\r\n    await this.startTimer(seconds);\r\n  }\r\n\r\n  async ngAfterViewInit(): Promise<void> {\r\n    // if (this.currentTask.Name === 'Side Hustle') {\r\n    // console.log('ngAfterViewInit', this.currentTask.Name, new Date().toISOString());\r\n    // this.logger.logEvent('ngAfterViewInit', this.currentTask.Name);\r\n    // console.log('after init', new Date().toISOString());\r\n    // }\r\n\r\n    // console.log('YYYYYYYYYYYYYY NG AFTER VIEW INIT', this.currentTask.Name);\r\n    this.viewModel.timerComponent = this.timerComponent;\r\n\r\n    /*if (this.currentTask.Name === 'Reading') {\r\n      console.log('xxxxxxxxxxx CHECK IF EXISTS IN INIT');\r\n    }*/\r\n    // this.viewModel.showTimerIfExists();\r\n    // this.logger.logDebug('[2] TASK ' + this.currentTask.Name + ' AFTER VIEW INIT', new Date().toISOString());\r\n  }\r\n\r\n  public async btnSkipClick(event): Promise<void> {\r\n    this.vibrationService.vibrate(5);\r\n\r\n    this.logger.logEvent('btnSkipClick started', { key: 'date', value: JSON.stringify(new Date().toISOString())});\r\n    if (event != null) {\r\n      event.stopPropagation();\r\n    }\r\n\r\n    // Add this feature later\r\n    /*const daysBehindModulo = 7; // this is also the threshold of how many skips in a row triggers a popup\r\n\r\n    let skipsInARow = 0;\r\n    let dateIterator: Date;\r\n\r\n    // console.log('no doneworkdate lul', this.currentTask.Histories.filter(p => p.DoneWorkDate == null));\r\n\r\n    // Need to sort histories\r\n    this.currentTask.Histories.sort((a, b) => {\r\n      return a.DoneWorkDate.getTime() - b.DoneWorkDate.getTime();\r\n    });\r\n\r\n    // Traverse array backwards to find how many skips in a row we did\r\n    for (let i = this.currentTask.Histories.length - 1 ; i > 0 ; i--) {\r\n      dateIterator = DateUtils.AddDays(DateUtils.Today(), - skipsInARow - 1);\r\n      // console.log('dateIterator : ', dateIterator);\r\n\r\n      if (this.currentTask.Histories[i].DoneWorkDate == null) {\r\n        // console.log('DONEDATE IS NULL', this.currentTask.Histories[i]);\r\n        continue;\r\n      }\r\n\r\n      if (DateUtils.datesAreEqual(this.currentTask.Histories[i].DoneWorkDate, dateIterator) &&\r\n          this.currentTask.Histories[i].TaskSkipped === true &&\r\n          this.currentTask.Histories[i].Void !== true) {\r\n        skipsInARow++;\r\n        // console.log('skipsInARow : ', skipsInARow);\r\n      }\r\n    }\r\n\r\n    if (skipsInARow > 0 && skipsInARow % daysBehindModulo === 0) {\r\n      console.log('TOO MANY SKIPS, POPOVER', skipsInARow);\r\n      // console.log('TASK : ', this.currentTask);\r\n      const popover = await this.popoverController.create({\r\n        component: SkipsPopoverComponent,\r\n        cssClass: 'group-popover',\r\n        componentProps: {\r\n          currentTask: this.currentTask,\r\n          viewModel: this.viewModel,\r\n          daysInARow: skipsInARow\r\n        },\r\n        event,\r\n        translucent: false,\r\n        animated: true,\r\n        showBackdrop: true,\r\n      });\r\n      return await popover.present();\r\n    } else {\r\n      console.log('Not too many skips, no popover', skipsInARow);\r\n    }*/\r\n\r\n    await this.skip();\r\n  }\r\n\r\n  public async skip(): Promise<void> {\r\n    // this.logger.logEvent('skip started', { key: 'date', value: JSON.stringify(new Date().toISOString())});\r\n    const calendarTaskHistory: TaskHistory = await this.createNewHistory(null, false, true);\r\n    await this.saveTaskHistory(calendarTaskHistory);\r\n    this.viewModel.showTaskResult = true;\r\n    this.viewModel.showMainTaskButtons = false;\r\n    // this.logger.logEvent('skip ended', { key: 'date', value: JSON.stringify(new Date().toISOString())});\r\n  }\r\n\r\n  public async btnEnterTimeClick(): Promise<void> {\r\n    event.stopPropagation();\r\n    await this.getTimeValueFromPicker();\r\n  }\r\n\r\n  public btnStartClick(event): void {\r\n    this.vibrationService.vibrate(5);\r\n    event.stopPropagation();\r\n    this.startTimer(0);\r\n  }\r\n\r\n  public btnPauseClick(event): void {\r\n    this.vibrationService.vibrate(5);\r\n    event.stopPropagation();\r\n    this.pauseTimer();\r\n  }\r\n\r\n  public btnUnpauseClick(event): void {\r\n    this.vibrationService.vibrate(5);\r\n    event.stopPropagation();\r\n    this.UnpauseTimer();\r\n  }\r\n\r\n  public async btnDoneClick(event): Promise<void> {\r\n    this.vibrationService.vibrate(5);\r\n    this.logger.logEvent('btnDoneClick started', { key: 'date', value: JSON.stringify(new Date().toISOString())});\r\n    event.stopPropagation();\r\n    this.eventService.emit(new EventData(EventService.EventIds.TimerComplete + this.currentTask.CalendarTaskId, null));\r\n    if (this.viewModel.currentTask.isBinary()) {\r\n      await this.saveDoneTaskHistory();\r\n    } else if (this.viewModel.currentTask.isDuration()) {\r\n      await this.saveDurationTaskHistory();\r\n    }\r\n    this.logger.logEvent('btnDoneClick ended', { key: 'date', value: JSON.stringify(new Date().toISOString())});\r\n  }\r\n\r\n  public async btnEnterValueClick(event: any): Promise<void> {\r\n    event.stopPropagation();\r\n    await this.getDecimalValueFromAlert();\r\n  }\r\n\r\n  public async btnEnterDurationClick(event: any): Promise<void> {\r\n    event.stopPropagation();\r\n    await this.getDurationValueFromAlert(0, 0, 0);\r\n  }\r\n\r\n  public async btnMoreStatsClick() {\r\n    // console.log('showstats', this.currentTask.Name);\r\n    if (!this.viewModel.statsLoaded)  {\r\n      // console.log('loading stats');\r\n      this.viewModel.loadStats(52);\r\n      // console.log('stats loaded');\r\n      this.viewModel.statsLoaded = true;\r\n    }\r\n\r\n    // console.log('click1');\r\n    this.viewModel.isBodyShown = true;\r\n    await this.viewModel.toggleStats();\r\n    // console.log('click2');\r\n  }\r\n\r\n  public async btnResumeTimerClick(event): Promise<void> {\r\n    event.stopPropagation();\r\n    const history = this.calendarTaskService.getTaskHistoryNoVoid(this.viewModel.currentTask,\r\n                                                                  this.dateService.currentWorkDate);\r\n    await this.voidResult();\r\n    const seconds = Number(history.TaskResult);\r\n    // this.timerComponent.first.currentTimerObject.currentTimerSeconds = history.TaskResult;\r\n    this.startTimer(seconds);\r\n  }\r\n\r\n  public async btnCancelTimerClick(event: any): Promise<void> {\r\n    if (event != null) {\r\n      event.stopPropagation();\r\n    }\r\n    const handler: (alertData: any) => void = (alertData) => {\r\n      this.cancelTimer();\r\n    };\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getCancelTimerAlertOptions(handler);\r\n    const alert = await this.alertController.create(alertOptions);\r\n\r\n    await alert.present();\r\n\r\n    const subscription = this.platform.backButton.subscribe(async () => {\r\n      await alert.dismiss();\r\n    });\r\n\r\n    await alert.onDidDismiss();\r\n    subscription.unsubscribe();\r\n  }\r\n\r\n  // TODO : Extract this ? it's duplicated\r\n  public async btnPostponeClick(event: any) {\r\n    if (event != null) {\r\n      event.stopPropagation();\r\n    }\r\n\r\n    const datePickerModal = await this.modalController.create({\r\n      component: Ionic4DatepickerModalComponent,\r\n      cssClass: 'li-ionic4-datePicker',\r\n      componentProps: {\r\n         objConfig: this.datePickerObj,\r\n         selectedDate: DateUtils.AddDays(this.dateService.currentWorkDate, 1)\r\n      }\r\n    });\r\n    await datePickerModal.present();\r\n\r\n    const subscription = this.platform.backButton.subscribe(async () => {\r\n      await datePickerModal.dismiss();\r\n    });\r\n\r\n    const data = await datePickerModal.onDidDismiss();\r\n\r\n    subscription.unsubscribe();\r\n\r\n    const selectedDate = new Date(data.data.date);\r\n\r\n    if (!DateUtils.isValidDate(selectedDate)) { // standard cancel\r\n      return;\r\n    }\r\n\r\n    await this.postponeTask(selectedDate);\r\n\r\n    this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, null));\r\n  }\r\n\r\n  // This is accessed by group-card\r\n  public async postponeTask(selectedDate: Date) {\r\n    this.currentTask.SkipUntil = selectedDate;\r\n    const result = await this.calendarTaskService.updateCalendarTask(this.currentTask);\r\n    if (result) {\r\n      this.viewModel.reset();\r\n    } else {\r\n      this.logger.logError(new Error('Unable to save skip until'));\r\n      alert(this.translate.instant('btnPostponeClick-card.error-saving-skip-until'));\r\n    }\r\n  }\r\n\r\n  // TODO : Extract this ? it's duplicated\r\n  public async btnDeleteClick(event: any) {\r\n    if (event != null) {\r\n      event.stopPropagation();\r\n    }\r\n\r\n    const handler: (alertData: any) => void = (alertData) => {\r\n      this.deleteTask();\r\n    };\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getDeleteTaskAlertOptions(handler);\r\n    const alert = await this.alertController.create(alertOptions);\r\n    await alert.present();\r\n\r\n    const subscription = this.platform.backButton.subscribe(async () => {\r\n      await alert.dismiss();\r\n    });\r\n\r\n    await alert.onDidDismiss();\r\n\r\n    subscription.unsubscribe();\r\n  }\r\n\r\n  private async deleteTask(): Promise<void> {\r\n    /*const loading = await this.loadingController.create({\r\n      message: this.translate.instant('edit-task.msg-deleting-task'),\r\n    });\r\n    loading.present();*/\r\n    console.log('deleting started', new Date().toISOString(), this.currentTask);\r\n    this.currentTask.Void = true;\r\n    this.currentTask.UserId = await this.userService.getCurrentUserId();\r\n    const result = await this.calendarTaskService.updateCalendarTask(this.currentTask);\r\n    try {\r\n      // loading.dismiss();\r\n      if (result === true) {\r\n        this.eventService.emit(new EventData(EventService.EventIds.CardReset + this.currentTask.CalendarTaskId, true));\r\n        this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, true));\r\n        this.eventService.emit(new EventData(EventService.EventIds.NotificationSyncedFalse, null));\r\n      } else {\r\n        this.logger.logError(new Error('Unable to delete this task, result is false'));\r\n      }\r\n      return;\r\n    } catch (error) {\r\n      // loading.dismiss();\r\n      this.logger.logError(new Error('Unable to delete this task : ' + error.message));\r\n      alert('Unable to delete this task');\r\n      return;\r\n    }\r\n  }\r\n\r\n  public async onCardClick(event: any): Promise<void> {\r\n    const dateStart = new Date();\r\n    this.logger.logDebug('CARD CLICK', dateStart.toISOString());\r\n    const popover = await this.popoverController.create({\r\n      component: TaskCardPopoverComponent,\r\n      cssClass: 'group-popover',\r\n      componentProps: {\r\n        currentTask: this.currentTask,\r\n        viewModel: this.viewModel,\r\n      },\r\n      event,\r\n      translucent: false,\r\n      animated: false,\r\n      showBackdrop: false,\r\n    });\r\n    // this.logger.logDebug('CARD CLICK POPOVER CREATED ', DateUtils.getTimeSince(dateStart));\r\n    await popover.present();\r\n    // this.logger.logDebug('CARD CLICK POPOVER PRESENTED ', DateUtils.getTimeSince(dateStart));\r\n  }\r\n\r\n  public async timeEntered(): Promise<void> {\r\n    // console.log('EVENT TIMEENTERED', this.viewModel.timePicked);\r\n    // console.log('EVENT TIMEENTERED2', event);\r\n    if (this.viewModel.timePicked == null) {\r\n      return;\r\n    }\r\n\r\n    // this.isSelected = false; // This probably does nothing, to be tested\r\n\r\n    if (this.currentTask.StatType !== StatType.Regular) { // TODO : Make it optionnal\r\n      const isBetweenAllowedHours = this.getIsBetweenAllowedHours();\r\n\r\n      if (!isBetweenAllowedHours) {\r\n        this.validateTimeEntered();\r\n      } else {\r\n        await this.saveTimeEntered();\r\n      }\r\n    } else {\r\n      await this.saveTimeEntered();\r\n    }\r\n  }\r\n\r\n  private getIsBetweenAllowedHours() {\r\n    let resultHours = Number(this.viewModel.timePicked.substring(0, 2));\r\n    const maximumEarlySleepHours = 12;\r\n    const maximumPreviousDayHour = 12;\r\n    let endOfDayHour = Number(this.userService.getConfig(UserConfig.EndOfDayTimeKey).substring(0, 2));\r\n    if (endOfDayHour < maximumPreviousDayHour) {\r\n      endOfDayHour = 24 + endOfDayHour;\r\n    }\r\n    if (resultHours < maximumPreviousDayHour) {\r\n      resultHours = resultHours + 24;\r\n    }\r\n\r\n    if (this.currentTask.StatType === StatType.TimeEatStop ||\r\n        this.currentTask.StatType === StatType.TimeNonWaterStop ||\r\n        this.currentTask.StatType === StatType.TimeSleep) {\r\n      const min = endOfDayHour - maximumEarlySleepHours;\r\n      const max = endOfDayHour;\r\n      const isBetweenAllowedHours = min <= resultHours && resultHours <= max;\r\n      return isBetweenAllowedHours;\r\n    } else {\r\n      const min = endOfDayHour;\r\n      const max = endOfDayHour + maximumEarlySleepHours;\r\n      const isBetweenAllowedHours = min <= resultHours && resultHours <= max;\r\n      return isBetweenAllowedHours;\r\n    }\r\n  }\r\n\r\n  private validateTimeEntered() {\r\n    const handlerYes: (alertData: any) => Promise<boolean> = async (alertData2) => {\r\n      this.logger.logEvent('time started', { key: 'date', value: JSON.stringify(new Date().toISOString()) });\r\n      await this.saveTimeEntered();\r\n      this.logger.logEvent('time ended', { key: 'date', value: JSON.stringify(new Date().toISOString()) });\r\n      return true;\r\n    };\r\n    const handlerNo: (alertData: any) => boolean = (alertData2) => {\r\n      this.viewModel.timePicked = null;\r\n      return false;\r\n    };\r\n    const alertOptions2: AlertOptions = this.alertService.getConfirmationAlertOptions(\r\n      this.translate.instant('task-card.msg-confirmation') + ' ' + this.viewModel.timePicked,\r\n      handlerYes,\r\n      handlerNo);\r\n    this.alertController.create(alertOptions2).then(alert2 => {\r\n      alert2.present();\r\n    });\r\n  }\r\n\r\n  private async saveTimeEntered() {\r\n    const endOfDayHour = Number((await this.userService.getConfig(UserConfig.EndOfDayTimeKey).substring(0, 2)));\r\n    const hourEntered = Number(this.viewModel.timePicked.substring(0, 2));\r\n\r\n    // let resultString = this.currentWorkDate.toISOString().substring(0, 10) + ' ' + this.viewModel.timePicked.substring(11, 16) + ':00';\r\n    let resultString = this.dateService.currentWorkDate.toISOString().substring(0, 10) + ' ' + this.viewModel.timePicked + ':00';\r\n\r\n    if (hourEntered <= endOfDayHour && endOfDayHour < 12) {\r\n      resultString = DateUtils.AddDays(this.dateService.currentWorkDate, 1)\r\n                              .toISOString().substring(0, 10) + ' ' + this.viewModel.timePicked + ':00';\r\n    }\r\n\r\n    // console.log('resultString', resultString);\r\n\r\n    const resultDate = new Date(resultString);\r\n\r\n    // console.log('resultDate', resultDate);\r\n\r\n    const calendarTaskHistory: TaskHistory = await this.createNewHistory(resultDate, true, false);\r\n\r\n    // console.log('SAVE TIME ENTERED 1 ', calendarTaskHistory);\r\n    await this.saveTaskHistory(calendarTaskHistory);\r\n    // this.viewModel.reset();\r\n  }\r\n\r\n  public timerIsStarted(): boolean {\r\n    return this.timerComponent.first.currentTimerObject.isDone === true;\r\n  }\r\n\r\n  private async createNewHistory(taskResult: any,\r\n                                 taskCompleted: boolean,\r\n                                 taskSkipped: boolean): Promise<TaskHistory> {\r\n    const calendarTaskHistory: TaskHistory = await TaskHistory.createNew(taskResult,\r\n                                                                         taskCompleted,\r\n                                                                         taskSkipped,\r\n                                                                         new Date(),\r\n                                                                         this.dateService.currentWorkDate,\r\n                                                                         this.viewModel.currentTask.CalendarTaskId,\r\n                                                                         UserService.currentUserId);\r\n\r\n    return calendarTaskHistory;\r\n  }\r\n\r\n  private async saveTaskHistory(calendarTaskHistory: TaskHistory): Promise<void> {\r\n    // console.log('SAVING TASK HISTORY', calendarTaskHistory, this.viewModel.currentTask);\r\n    /*const loading = await this.loadingController.create({\r\n      message: this.translate.instant('task-card.loading-update-calendartask'),\r\n    });*/\r\n    try {\r\n      /*if (LocalStorageService.currentlyUsed === true) {\r\n        loading.present();\r\n      }*/\r\n\r\n      const success = await this.taskHistoryService.insertTaskHistory(calendarTaskHistory);\r\n      if (success === true) {\r\n        // console.log('SUCCESS, here are the histories ', this.viewModel.currentTask.Histories);\r\n        // this.viewModel.currentTask.Histories.push(calendarTaskHistory);\r\n        // console.log('added again to task', this.viewModel.currentTask.Histories);\r\n        // console.log(' SAVE SUCCESSFULT, EMITTING');\r\n        this.viewModel.reset();\r\n        this.viewModel.statsLoaded = false;\r\n        this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, null));\r\n        return;\r\n      } else {\r\n        this.logger.logError(new Error('Unable to save taskHistory, historyId is null'));\r\n        alert(this.translate.instant('task-card.msg-saving-error'));\r\n        return;\r\n      }\r\n    } catch (error) {\r\n      // console.log('Unable to save taskHistory : ', error);\r\n      this.logger.logError(new Error('Unable to save taskHistory : ' + error.message));\r\n      alert('Unable to save task history');\r\n      return;\r\n    } finally {\r\n      // await loading.dismiss();\r\n    }\r\n  }\r\n\r\n  private async voidCurrentTaskHistory(): Promise<void> {\r\n    const calendarTaskHistory = this.calendarTaskService.getTaskHistoryNoVoid(this.viewModel.currentTask,\r\n                                                                              this.dateService.currentWorkDate);\r\n    calendarTaskHistory.Void = true;\r\n    const success = await this.taskHistoryService.updateTaskHistory(calendarTaskHistory);\r\n    if (success) { // TODO: Test error\r\n      if (success === true) {\r\n        this.viewModel.reset();\r\n        this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, null));\r\n      } else {\r\n        this.logger.logError(new Error('Unable to void TaskHistory, result is false'));\r\n        alert(this.translate.instant('task-card.msg-saving-error'));\r\n      }\r\n    } else {\r\n      this.logger.logError(new Error('Unable to void TaskHistory : '));\r\n    }\r\n  }\r\n\r\n  private async saveDoneTaskHistory(): Promise<void> {\r\n    // console.log('saveDoneTaskHistory started');\r\n    // this.isSelected = false;\r\n    const calendarTaskHistory: TaskHistory = await this.createNewHistory(true, true, false);\r\n    // console.log('Saving task history :', calendarTaskHistory);\r\n    await this.saveTaskHistory(calendarTaskHistory);\r\n    // console.log('saveDoneTaskHistory ended');\r\n    return;\r\n  }\r\n\r\n  private async saveDurationTaskHistory(): Promise<void> {\r\n    // this.isSelected = false;\r\n    let seconds = 0;\r\n    if (this.timerComponent.first != null) {\r\n      seconds = Math.round(this.timerComponent.first.currentTimerObject.currentTimerSeconds);\r\n      // console.log('CURRENT TIMER SECONDS SAVED', seconds);\r\n    }\r\n    const calendarTaskHistory: TaskHistory = await this.createNewHistory(seconds, true, false);\r\n    await this.saveTaskHistory(calendarTaskHistory);\r\n    return;\r\n  }\r\n\r\n  private async getDecimalValueFromAlert(): Promise<void> {\r\n    const handler: (alertData: any) => void = async (alertData) => {\r\n      // if string is empty don't save\r\n      if (String(alertData.Value).length === 0) {\r\n        return;\r\n      }\r\n\r\n      await this.saveDecimalValue(alertData);\r\n      this.logger.logEvent('decimal ended', { key: 'date', value: JSON.stringify(new Date().toISOString())});\r\n    };\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getDecimalAlertOptions(handler);\r\n    const alert = await this.alertController.create(alertOptions);\r\n\r\n    await alert.present();\r\n\r\n    const firstInput: any = document.querySelector('ion-alert input');\r\n    firstInput.focus();\r\n\r\n    const subscription = this.platform.backButton.subscribe(async () => {\r\n      await alert.dismiss();\r\n    });\r\n    await alert.onDidDismiss();\r\n    subscription.unsubscribe();\r\n  }\r\n\r\n  private async getDurationValueFromAlert(hours: number,\r\n                                          minutes: number,\r\n                                          seconds: number): Promise<void> {\r\n    const handler: (alertData: any) => void = async (alertData) => {\r\n      const resultHours = Number(alertData.Hours);\r\n      const resultMinutes = Number(alertData.Minutes);\r\n      const resultSeconds = Number(alertData.Seconds);\r\n      if (resultHours < 0 || resultHours > 24 ||\r\n          resultMinutes < 0 || resultMinutes > 60 ||\r\n          resultSeconds < 0 || resultSeconds > 60) {\r\n        this.logger.logEvent('invalid times', { key: 'resultHours', value: JSON.stringify(resultHours)});\r\n        return;\r\n      }\r\n\r\n      this.logger.logEvent('duration started', { key: 'date', value: JSON.stringify(new Date().toISOString())});\r\n      await this.saveDuration(resultMinutes, resultHours, resultSeconds);\r\n      this.logger.logEvent('duration ended', { key: 'date', value: JSON.stringify(new Date().toISOString())});\r\n    };\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getDurationAlertOptions(handler,\r\n                                                                                 hours,\r\n                                                                                 minutes,\r\n                                                                                 seconds);\r\n\r\n    const alert = await this.alertController.create(alertOptions);\r\n    await alert.present();\r\n\r\n    const subscription = this.platform.backButton.subscribe(async () => {\r\n      await alert.dismiss();\r\n    });\r\n    await alert.onDidDismiss();\r\n    subscription.unsubscribe();\r\n  }\r\n\r\n  private async getTimeValueFromPicker() {\r\n\r\n    const picker = await this.pickerCtrl.create({\r\n      columns: this.getColumns(),\r\n      cssClass: 'time-picker',\r\n      animated: false,\r\n      backdropDismiss: false,\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-cancel'),\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-ok'),\r\n          handler: (value) => {\r\n            // console.log('HOUR', value.Hours.value);\r\n            // console.log('MINUTES', value.Minutes.value);\r\n\r\n            const hourString = Number(value.Hours.value) > 9 ?\r\n                                 value.Hours.value :\r\n                                 '0' + value.Hours.value;\r\n\r\n            const minutesString = Number(value.Minutes.value) > 9 ?\r\n                                 value.Minutes.value :\r\n                                 '0' + value.Minutes.value;\r\n\r\n            this.viewModel.timePicked = hourString + ':' + minutesString;\r\n            this.timeEntered();\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await picker.present();\r\n\r\n    const subscription = this.platform.backButton.subscribe(async () => {\r\n      await picker.dismiss();\r\n    });\r\n    await picker.onDidDismiss();\r\n    subscription.unsubscribe();\r\n  }\r\n\r\n  private getColumnOptions1() {\r\n    const options = [];\r\n    for (const hourValue of this.viewModel.hourValues) {\r\n      options.push({\r\n        text: hourValue,\r\n        value: Number(hourValue)\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  private getColumnOptions2() {\r\n    const options = [];\r\n    for (const minuteValue of this.viewModel.minuteValues) {\r\n      options.push({\r\n        text: minuteValue,\r\n        value: Number(minuteValue)\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  private getColumns() {\r\n\r\n    const currentSelection = DateUtils.getLocalMysqlTimeFloored(new Date()).substring(0, 5);\r\n    const currentHour = Number(currentSelection.substring(0, 2));\r\n    const currentMinutes = Number(currentSelection.substring(3, 3 + 2));\r\n    const HourIndex = this.viewModel.hourValues.findIndex(p => p === currentHour);\r\n    const MinuteIndex = this.viewModel.minuteValues.findIndex(p => p === currentMinutes);\r\n\r\n    const columns = [];\r\n\r\n    columns.push({\r\n      name: 'Hours',\r\n      selectedIndex: HourIndex,\r\n      options: this.getColumnOptions1(),\r\n    });\r\n\r\n    columns.push({\r\n      name: 'Minutes',\r\n      selectedIndex: MinuteIndex,\r\n      options: this.getColumnOptions2()\r\n    });\r\n\r\n    // console.log('columns');\r\n\r\n    return columns;\r\n  }\r\n\r\n  private startTimer(initialSeconds: number) {\r\n    // console.log('starting timer');\r\n    this.viewModel.showPauseButton();\r\n    this.viewModel.showCancelTimerButton();\r\n    this.showTimer();\r\n    this.eventService.emit(new EventData(EventService.EventIds.TimerStart + this.currentTask.CalendarTaskId, initialSeconds));\r\n    this.eventService.emit(new EventData(EventService.EventIds.NotificationSyncedFalse, null));\r\n  }\r\n\r\n  private UnpauseTimer() {\r\n    // this.viewModel.voidResult();\r\n    // console.log('<<<<<<<<< RESUME TIMER', this.currentTask.Name);\r\n    this.eventService.emit(new EventData(EventService.EventIds.TimerUnpause + this.currentTask.CalendarTaskId, null));\r\n    this.viewModel.showTimer();\r\n    this.viewModel.showPauseButton();\r\n    this.viewModel.showCancelTimerButton();\r\n  }\r\n\r\n  private pauseTimer() {\r\n    this.eventService.emit(new EventData(EventService.EventIds.TimerPause + this.currentTask.CalendarTaskId, null));\r\n    this.viewModel.showResumeButton();\r\n  }\r\n\r\n  private cancelTimer() {\r\n    this.eventService.emit(new EventData(EventService.EventIds.TimerCancel + this.currentTask.CalendarTaskId, null));\r\n    this.viewModel.reset();\r\n  }\r\n\r\n  private showTimer() {\r\n    this.viewModel.showTimer();\r\n  }\r\n\r\n  private async voidResult(): Promise<void> {\r\n    // this.isSelected = false;\r\n    await this.voidCurrentTaskHistory();\r\n    return;\r\n  }\r\n\r\n  private async saveNote(alertData: any) {\r\n    // Disable data over 1000 characters\r\n    if (alertData.Value.length > 2000) {\r\n      alertData.Value = alertData.Value.substring(0, 2000);\r\n    }\r\n\r\n    const history: TaskHistory = this.calendarTaskService.getTaskHistoryNoVoid(this.viewModel.currentTask,\r\n                                                                               this.dateService.currentWorkDate);\r\n    // console.log('saveNote', history);\r\n    history.Comment = alertData.Value;\r\n    await this.taskHistoryService.updateTaskHistory(history);\r\n    this.viewModel.showNote = true;\r\n  }\r\n\r\n  private async saveDuration(minutes: number, hours: number, seconds: number): Promise<void> {\r\n    // this.isSelected = false;\r\n    const durationSeconds = minutes * 60 + hours * 60 * 60 + seconds;\r\n    const calendarTaskHistory: TaskHistory = await this.createNewHistory(durationSeconds, true, false);\r\n    await this.saveTaskHistory(calendarTaskHistory);\r\n    return;\r\n  }\r\n\r\n  private async saveDecimalValue(alertData: any): Promise<void> {\r\n    // this.isSelected = false;\r\n    const calendarTaskHistory: TaskHistory = await this.createNewHistory(alertData.Value, true, false);\r\n    await this.saveTaskHistory(calendarTaskHistory);\r\n    return;\r\n  }\r\n}\r\n","import { Component, OnInit, Input, ViewChild, OnDestroy } from '@angular/core';\r\nimport NumberUtils from 'src/app/shared/number-utils';\r\nimport { Chart } from 'chart.js';\r\nimport { ResultType } from 'src/app/models/Core/result-type.enum';\r\nimport { TaskStats } from 'src/app/models/Core/task-stat';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport DateUtils from 'src/app/shared/date-utils';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { DateService } from 'src/app/services/date.service';\r\nimport { StatType } from 'src/app/models/Core/custom-stat.enum';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { UserConfig } from 'src/app/models/Core/user-config';\r\nimport { ILogger } from 'src/app/interfaces/i-logger';\r\nimport { EventData, EventService } from 'src/app/services/event.service';\r\n\r\nexport class ChartPoint {\r\n  X: string;\r\n  Y: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-task-scores',\r\n  templateUrl: './task-scores.component.html',\r\n  styleUrls: ['./task-scores.component.scss'],\r\n})\r\nexport class TaskScoresComponent implements OnInit, OnDestroy {\r\n\r\n  private loadSubscription: Subscription;\r\n  private loaded: boolean = false;\r\n\r\n  @Input() calendarTaskId: number;\r\n  @Input() taskStats: TaskStats;\r\n  @Input() loadEvent: Observable<void>;\r\n\r\n  @ViewChild('lineChart') lineChart;\r\n\r\n  public lines: any;\r\n  public colorArray: any;\r\n\r\n  public minusDaysArray: number [] = [6, 5, 4, 3, 2, 1, 0];\r\n  public minusWeeksArray: number [] = [];\r\n  public cardsMinusWeeksArray: number [] = [];\r\n  public showChart: boolean;\r\n  public showDetails: boolean;\r\n  public show1AButton: boolean;\r\n  public showAverage: boolean;\r\n  public showTotal: boolean;\r\n  public showMax: boolean;\r\n  public showCharVsDetails: boolean;\r\n  public showCompletionRate: boolean;\r\n  public txtMaximum: string;\r\n  public txtAverage: string;\r\n  public txtTotal: string;\r\n  public txtCompletionRate: string;\r\n\r\n  constructor(private translate: TranslateService,\r\n              public dateService: DateService,\r\n              private userService: UserService,\r\n              private logger: ILogger,\r\n              private eventService: EventService) { }\r\n\r\n  ngOnInit() {\r\n    // console.log('[3] SCORES ' + this.taskStats.Name + ' INIT STARTED', new Date().toISOString());\r\n    this.loadSubscription = this.loadEvent.subscribe(() => this.loadStats());\r\n    this.showCharVsDetails = this.taskStats.resultType !== ResultType.Binary;\r\n    this.showChart = this.taskStats.resultType !== ResultType.Binary;\r\n    this.show1AButton = this.taskStats.resultType !== ResultType.Binary;\r\n    this.showAverage = this.taskStats.resultType !== ResultType.Binary;\r\n    this.showTotal = this.taskStats.resultType !== ResultType.Binary &&\r\n                    this.taskStats.resultType !== ResultType.TimeOfDay;\r\n    this.showMax = this.taskStats.resultType !== ResultType.Binary &&\r\n                  this.taskStats.resultType !== ResultType.TimeOfDay;\r\n    this.showDetails = this.taskStats.resultType === ResultType.Binary;\r\n    this.showCompletionRate = true;\r\n\r\n    /*if (this.taskStats.Name === 'Wim Hof 3') {\r\n      console.log('{}{}{} STATS', this.taskStats);\r\n    }*/\r\n    // this.logger.logDebug('[4] SCORES ' + this.taskStats.Name + ' INIT ENDED', new Date().toISOString());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loadSubscription.unsubscribe();\r\n  }\r\n\r\n  private loadStats(): void {\r\n    // console.log('loadstats3');\r\n    if (this.loaded) {\r\n      return;\r\n    }\r\n\r\n    // console.log('loading stats', new Date().toISOString());\r\n    this.btnStatsClick(7);\r\n    this.loaded = true;\r\n    // console.log('stats loaded', new Date().toISOString());\r\n  }\r\n\r\n  public showSkipped(minusDays): boolean {\r\n    // console.log('showSkipped', this.previousDaySkipped(minusDays));\r\n    return this.previousDaySkipped(minusDays);\r\n  }\r\n\r\n  public showCheckbox(minusDays): boolean {\r\n    // console.log('showcheckbox');\r\n    return this.taskStats.resultType === ResultType.Binary &&\r\n           this.previousDayDone(minusDays);\r\n  }\r\n\r\n  public btnCloseStatsClick() {\r\n    this.eventService.emit(new EventData(EventService.EventIds.HideStats + this.calendarTaskId, true));\r\n  }\r\n\r\n  public showTime(minusDays): boolean {\r\n    // console.log('showTime');\r\n    return this.taskStats.resultType === ResultType.TimeOfDay &&\r\n            this.previousDayDone(minusDays);\r\n  }\r\n\r\n  public showDuration(minusDays): boolean {\r\n    // console.log('SHOW DURATION MINUSDAYS', minusDays);\r\n\r\n    // const showit = this.taskStats.resultType === ResultType.Duration && this.previousDayDone(minusDays);\r\n    // console.log('showduration', showit);\r\n    return this.taskStats.resultType === ResultType.Duration && this.previousDayDone(minusDays);\r\n  }\r\n\r\n  public showDecimal(minusDays): boolean {\r\n    // console.log('showdecimal');\r\n    return this.taskStats.resultType === ResultType.Decimal && this.previousDayDone(minusDays);\r\n  }\r\n\r\n  public btnStatsClick(daysBehind: number): void {\r\n    // console.log('btnStatsClick', daysBehind, this.taskStats);\r\n    this.minusWeeksArray = [];\r\n    this.cardsMinusWeeksArray = [];\r\n\r\n    // console.log('STATS INSERT DATE', this.taskStats.TaskInsertWorkDate);\r\n    const maximumDaysBehind = -1 * DateUtils.daysBetween(this.dateService.currentWorkDate, this.taskStats.TaskInsertWorkDate);\r\n    // console.log('MAXIMUM DAYS BEHIND', maximumDaysBehind, daysBehind);\r\n    if (daysBehind > maximumDaysBehind) {\r\n      // console.log('REDUCE DAYSBEHIND TO ', maximumDaysBehind);\r\n      daysBehind = maximumDaysBehind;\r\n    }\r\n\r\n    let weeksBehind: number = Math.floor(daysBehind / 7);\r\n    if (weeksBehind === 0) {\r\n      weeksBehind = 1;\r\n    }\r\n    // console.log('weeksbehind', weeksBehind);\r\n    // console.log('minusWeeksArray', this.minusWeeksArray);\r\n\r\n    if (weeksBehind < this.taskStats.MinusWeeksArray.length) {\r\n      // console.log('weeksBehind smaller than this.taskStats.MinusWeeksArray.length');\r\n      for (let i = 0; i < weeksBehind; i++) {\r\n        this.minusWeeksArray.push(weeksBehind - i - 1);\r\n        if (this.taskStats.resultType === ResultType.Binary || i < 12) {\r\n          if (this.taskStats.resultType !== ResultType.Binary) {\r\n            const maxWeeksbehind = Math.min(12, weeksBehind);\r\n            this.cardsMinusWeeksArray.push(maxWeeksbehind - i - 1);\r\n            // this.cardsMinusWeeksArray.push(11 - i);\r\n          } else {\r\n            this.cardsMinusWeeksArray.push(weeksBehind - i - 1);\r\n          }\r\n        }\r\n      }\r\n\r\n      // console.log('this.minusWeeksArray', this.minusWeeksArray);\r\n      // console.log('this.cardsMinusWeeksArray', this.cardsMinusWeeksArray);\r\n    } else {\r\n      // console.log('weeksBehind NOT smaller than this.taskStats.MinusWeeksArray.length');\r\n\r\n      this.minusWeeksArray = this.taskStats.MinusWeeksArray;\r\n      daysBehind = this.taskStats.MinusWeeksArray.length * 7;\r\n      this.cardsMinusWeeksArray = this.minusWeeksArray.filter(p => p < 12);\r\n\r\n      // console.log('this.cardsMinusWeeksArray2', this.cardsMinusWeeksArray);\r\n      // console.log('this.minusWeeksArray', this.minusWeeksArray);\r\n    }\r\n\r\n    // We want the first date of stats to be the task insert date\r\n\r\n    if (this.taskStats.resultType === ResultType.Decimal) {\r\n      this.createDecimalChart(daysBehind);\r\n    } else if (this.taskStats.resultType === ResultType.Duration) {\r\n      this.createDurationChart(daysBehind);\r\n    } else if (this.taskStats.resultType === ResultType.TimeOfDay) {\r\n      this.createTimeChart(daysBehind);\r\n    } else if (this.taskStats.resultType === ResultType.Binary) {\r\n      this.createBinaryChart(daysBehind);\r\n    }\r\n  }\r\n\r\n  public getPreviousDayResult(minusDays: number): string {\r\n    const result = this.taskStats.results[this.taskStats.results.length - minusDays - 1];\r\n\r\n    if (result != null) {\r\n        return String(result);\r\n    } else {\r\n      return ' n/a ';\r\n    }\r\n  }\r\n\r\n  public getPreviousDayDuration(minusDays: number): string {\r\n    const result = this.taskStats.results[this.taskStats.results.length - minusDays - 1];\r\n\r\n    // console.log('previousdayduration = ', result, this.taskStats.results);\r\n\r\n    if (result != null && Number(result) > 0) {\r\n        return this.getShortDurationString(Number(result));\r\n    } else {\r\n      return ' n/a ';\r\n    }\r\n  }\r\n\r\n  public getPreviousDayDone(minusDays: number): boolean {\r\n    const result = this.taskStats.doneDays[this.taskStats.doneDays.length - minusDays - 1];\r\n\r\n    if (result != null) {\r\n        return result;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public getShortDurationString(totalSeconds: number): string {\r\n    if (totalSeconds != null) {\r\n      const hours = DateUtils.getHoursFromSeconds(totalSeconds);\r\n      const minutes = DateUtils.getMinutesFromSeconds(totalSeconds);\r\n      const seconds = totalSeconds - DateUtils.SecondsInMinute * minutes - hours * DateUtils.SecondsInHour;\r\n      const secondsString = seconds > 10 ? String(seconds) : '0' + seconds;\r\n      const minutesString = minutes > 10 ? String(minutes) : '0' + minutes;\r\n\r\n      if (hours === 0 && minutes < 1) {\r\n        return '00:' + secondsString;\r\n      } else if (hours === 0) {\r\n        return minutes + ':' + secondsString;\r\n      } else {\r\n        return hours + ':' + minutesString;\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public chartChanged(event: any) {\r\n    if (event.detail.value === 'Chart') {\r\n      this.showChart = true;\r\n      this.showDetails = false;\r\n    } else {\r\n      this.showChart = false;\r\n      this.showDetails = true;\r\n    }\r\n  }\r\n\r\n  private previousDaySkipped(minusDays: number): boolean {\r\n    if (this.taskStats.skippedDays.length < minusDays + 1) {\r\n      // throw Error('minusDays is too big ' + minusDays);\r\n      return false;\r\n    }\r\n\r\n    // console.log('previousDaySkipped: MinusDays', this.taskStats.skippedDays);\r\n    const result = this.taskStats.skippedDays[this.taskStats.skippedDays.length - minusDays - 1];\r\n    return result;\r\n  }\r\n\r\n  private previousDayDone(minusDays: number): boolean {\r\n    if (this.taskStats.doneDays.length < minusDays + 1) {\r\n      // throw Error('minusDays is too big ' + minusDays);\r\n      return false;\r\n    }\r\n\r\n    const result = this.taskStats.doneDays[this.taskStats.doneDays.length - minusDays - 1];\r\n    return result;\r\n  }\r\n\r\n  private getPreviousDayTimeResultHours(minusDays: number): number {\r\n    // console.log('getPreviousDayTimeResultHours: MinusDays', minusDays);\r\n    const result = this.taskStats.results[this.taskStats.results.length - minusDays - 1];\r\n\r\n    if (result != null) {\r\n      let hours = Number(result.substring(0, 2));\r\n      const minutes = Number(result.substring(3));\r\n\r\n      if (this.taskStats.StatType === StatType.TimeSleep) {\r\n        const endOfDayTime = this.userService.getConfig(UserConfig.EndOfDayTimeKey);\r\n        const endOfDayHours = Number(endOfDayTime.substring(0, 2));\r\n        if (hours < endOfDayHours) {\r\n          hours += 24;\r\n        }\r\n      }\r\n\r\n      return hours + (minutes / 60);\r\n    } else {\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  private createDecimalChart(minusDays: number) {\r\n    const chartPoints: ChartPoint[] = this.getDecimalChartPoints(minusDays);\r\n\r\n    this.lines = new Chart(this.lineChart.nativeElement, {\r\n      type: 'line',\r\n      data: {\r\n        labels: chartPoints.map(p => p.X),\r\n        datasets: [{\r\n          data: chartPoints.map(p => p.Y),\r\n          fill: false,\r\n          backgroundColor: 'rgb(255, 255, 255)',\r\n          borderColor: 'rgb(0, 0, 0)',\r\n          borderWidth: 1\r\n        }]\r\n      },\r\n      options: {\r\n        /*scales: {\r\n          yAxes: [{\r\n            ticks: {\r\n              beginAtZero: true\r\n            }\r\n          }]\r\n        },\r\n        legend: {\r\n          display: false\r\n        },*/\r\n      }\r\n    });\r\n  }\r\n\r\n  private createDurationChart(minusDays: number) {\r\n    const chartPoints: ChartPoint[] = this.getDurationChartPoints(minusDays);\r\n    // console.log('chartpoints');\r\n\r\n    const maxTime = Math.max(...chartPoints.map(p => p.Y));\r\n    let myLabel = this.translate.instant('task-scores.lbl-minutes');\r\n    if (maxTime > 60) {\r\n      myLabel = this.translate.instant('task-scores.lbl-hours');\r\n      chartPoints.forEach(p => p.Y = p.Y / 60);\r\n    }\r\n\r\n    this.lines = new Chart(this.lineChart.nativeElement, {\r\n      type: 'line',\r\n      data: {\r\n        labels: chartPoints.map(p => p.X),\r\n        datasets: [{\r\n          data: chartPoints.map(p => p.Y),\r\n          fill: false,\r\n          backgroundColor: 'rgb(255, 255, 255)',\r\n          borderColor: 'rgb(0, 0, 0)',\r\n          borderWidth: 1\r\n        }]\r\n      },\r\n      options: {\r\n        /*title: {\r\n          display: true,\r\n          text: myLabel,\r\n        },\r\n        legend: {\r\n          display: false\r\n        },*/\r\n      }\r\n    });\r\n  }\r\n\r\n  private createTimeChart(minusDays: number) {\r\n    const chartPoints: ChartPoint[] = this.getTimeChartPoints(minusDays);\r\n    this.lines = new Chart(this.lineChart.nativeElement, {\r\n      type: 'line',\r\n      data: {\r\n        labels: chartPoints.map(p => p.X),\r\n        datasets: [{\r\n          data: chartPoints.map(p => p.Y),\r\n          fill: false,\r\n          backgroundColor: 'rgb(255, 255, 255)',\r\n          borderColor: 'rgb(0, 0, 0)',\r\n          borderWidth: 1\r\n        }]\r\n      },\r\n      options: {\r\n        /*title: {\r\n          display: true,\r\n          text: this.translate.instant('task-scores.lbl-time'),\r\n        },\r\n        legend: {\r\n          display: false\r\n        },*/\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  private createBinaryChart(minusDays: number) {\r\n    // console.log('createBinaryChart', minusDays);\r\n    const chartPoints: ChartPoint[] = this.getBinaryChartPoints(minusDays);\r\n    // console.log('chartpoints', chartPoints);\r\n\r\n    const completed = chartPoints.filter(p => p.Y > 0).length;\r\n    // console.log('completed', chartPoints.filter(p => p.Y > 0));\r\n\r\n    if (chartPoints.length > 0) {\r\n      const percentage = ' (' + (100.0 * completed / chartPoints.length).toFixed(1) + '%)';\r\n\r\n      this.txtCompletionRate = completed.toString() + '/' + chartPoints.length.toString() + percentage;\r\n      // console.log('txtCompletionRate', this.txtCompletionRate);\r\n    } else {\r\n      this.txtCompletionRate = '';\r\n    }\r\n  }\r\n\r\n  private getDecimalChartPoints(minusDays: number): ChartPoint[] {\r\n    // console.log('getDecimalChartPoints', this.currentWorkDate);\r\n    const chartPoints: ChartPoint[] = [];\r\n\r\n    for (const plusDay of NumberUtils.Range(-minusDays, 0, 1)) {\r\n      const chartPoint = this.getDecimalChartPoint(plusDay);\r\n      chartPoints.push(chartPoint);\r\n    }\r\n\r\n    this.setStatsStringsDecimal(chartPoints);\r\n\r\n    return chartPoints;\r\n  }\r\n\r\n  private setStatsStringsDecimal(chartPoints: ChartPoint[]) {\r\n    // Max\r\n    const yValues = chartPoints.map(p => Number(p.Y))\r\n      .filter(p => p > 0);\r\n    // console.log('numbers', numbers);\r\n    // console.log('max', Math.max.apply(Math, numbers));\r\n    if (yValues.length > 0) {\r\n      this.txtMaximum = String(Math.max.apply(Math, yValues));\r\n    } else {\r\n      this.txtMaximum = '0';\r\n    }\r\n\r\n    // Total\r\n    const sum = yValues.reduce((a, b) => a + b, 0);\r\n    // console.log('sum', sum.toFixed(1));\r\n    this.txtTotal = sum.toFixed(1);\r\n    // Average\r\n    const avg = (sum / yValues.length) || 0;\r\n    this.txtAverage = avg.toFixed(1);\r\n\r\n    const completed = yValues.filter(p => p > 0).length;\r\n    // console.log('completed', yValues.filter(p => p > 0));\r\n\r\n    if (yValues.length > 0) {\r\n      const percentage = ' (' + (100.0 * completed / chartPoints.length).toFixed(1) + '%)';\r\n\r\n      this.txtCompletionRate = completed.toString() + '/' + chartPoints.length.toString() + percentage;\r\n      // console.log('chartPoints.length', chartPoints.length);\r\n      // console.log('txtCompletionRate', this.txtCompletionRate);\r\n    } else {\r\n      this.txtCompletionRate = '';\r\n    }\r\n  }\r\n\r\n  private getDurationChartPoints(minusDays: number): ChartPoint[] {\r\n    // console.log('getDurationChartPoints', this.currentWorkDate);\r\n    const chartPoints: ChartPoint[] = [];\r\n\r\n    for (const plusDay of NumberUtils.Range(-minusDays, 0, 1)) {\r\n      const chartPoint = this.getDurationChartPoint(plusDay);\r\n      chartPoints.push(chartPoint);\r\n    }\r\n\r\n    this.setStatsStringsDuration(chartPoints);\r\n\r\n    return chartPoints;\r\n  }\r\n\r\n  private setStatsStringsDuration(chartPoints: ChartPoint[]) {\r\n    // Max\r\n    const numbers = chartPoints.map(p => Number(p.Y / 60))\r\n      .filter(p => p > 0);\r\n    // console.log('numbers', numbers);\r\n    // console.log('chartPoints', chartPoints);\r\n    if (numbers.length > 0) {\r\n      this.txtMaximum = Math.max.apply(Math, numbers).toFixed(2) + ' ' +\r\n                        this.translate.instant('task-scores.lbl-hours');\r\n    } else {\r\n      this.txtMaximum = 0 + ' ' + this.translate.instant('task-scores.lbl-hours');\r\n    }\r\n\r\n    // Total\r\n    const sum = numbers.reduce((a, b) => a + b, 0);\r\n    this.txtTotal = sum.toFixed(1) + ' ' + this.translate.instant('task-scores.lbl-hours');\r\n    // Average\r\n    const avg = (sum / numbers.length) || 0;\r\n    this.txtAverage = avg.toFixed(1) + ' ' + this.translate.instant('task-scores.lbl-hours');\r\n\r\n    const completed = chartPoints.filter(p => p.Y > 0).length;\r\n    // console.log('completed', chartPoints.filter(p => p.Y > 0));\r\n\r\n    if (chartPoints.length > 0) {\r\n      const percentage = ' (' + (100.0 * completed / chartPoints.length).toFixed(1) + '%)';\r\n\r\n      this.txtCompletionRate = completed.toString() + '/' + chartPoints.length.toString() + percentage;\r\n      // console.log('txtCompletionRate', this.txtCompletionRate);\r\n    } else {\r\n      this.txtCompletionRate = '';\r\n    }\r\n  }\r\n\r\n  private getTimeChartPoints(minusDays: number): ChartPoint[] {\r\n    // console.log('getTimeChartPoints', this.currentWorkDate);\r\n    const chartPoints: ChartPoint[] = [];\r\n\r\n    // console.log('before range minusdays', minusDays);\r\n    // console.log('before range start', -minusDays);\r\n    // console.log('range=', NumberUtils.Range(-minusDays, 0, 1));\r\n\r\n    for (const plusDay of NumberUtils.Range(-minusDays, 0, 1)) {\r\n      const chartPoint = this.getTimeChartPoint(plusDay);\r\n      chartPoints.push(chartPoint);\r\n    }\r\n\r\n    this.setStatsStringsTime(chartPoints);\r\n\r\n    return chartPoints;\r\n  }\r\n\r\n  private getBinaryChartPoints(minusDays: number): ChartPoint[] {\r\n    const chartPoints: ChartPoint[] = [];\r\n\r\n    // console.log('before range minusdays', minusDays);\r\n    // console.log('before range start', -minusDays);\r\n    // console.log('range=', NumberUtils.Range(-minusDays, 0, 1));\r\n\r\n    for (const plusDay of NumberUtils.Range(-minusDays, 0, 1)) {\r\n      const chartPoint = this.getBinaryChartPoint(plusDay);\r\n      chartPoints.push(chartPoint);\r\n    }\r\n\r\n    // console.log('points pushed');\r\n\r\n    this.setStatsStringsDecimal(chartPoints);\r\n\r\n    return chartPoints;\r\n  }\r\n\r\n  private setStatsStringsTime(chartPoints: ChartPoint[]) {\r\n    // Max\r\n    const numbers = chartPoints.map(p => Number(p.Y))\r\n      .filter(p => p > 0);\r\n    if (numbers.length > 0) {\r\n      this.txtMaximum = Math.max.apply(Math, numbers).toFixed(2);\r\n    } else {\r\n      this.txtMaximum = '';\r\n    }\r\n\r\n    // Total\r\n    const sum = numbers.reduce((a, b) => a + b, 0);\r\n    this.txtTotal = sum.toFixed(1);\r\n    // Average\r\n    const avg = (sum / numbers.length) || 0;\r\n    this.txtAverage = avg.toFixed(1);\r\n\r\n    const completed = chartPoints.filter(p => p.Y > 0).length;\r\n    // console.log('completed', chartPoints.filter(p => p.Y > 0));\r\n\r\n    if (chartPoints.length > 0) {\r\n      const percentage = ' (' + (100.0 * completed / chartPoints.length).toFixed(1) + '%)';\r\n\r\n      this.txtCompletionRate = completed.toString() + '/' + chartPoints.length.toString() + percentage;\r\n      // console.log('txtCompletionRate', this.txtCompletionRate);\r\n    } else {\r\n      this.txtCompletionRate = '';\r\n    }\r\n  }\r\n\r\n  private getTimeChartPoint(plusDay: number) {\r\n    const chartPoint = new ChartPoint();\r\n    chartPoint.X = this.dateService.GetmmddFromMinusDays(-plusDay, this.dateService.currentWorkDate);\r\n    const result = this.getPreviousDayTimeResultHours(-plusDay);\r\n    if (result != null && result > 0) {\r\n      chartPoint.Y = result;\r\n    } else {\r\n      chartPoint.Y = null;\r\n    }\r\n    return chartPoint;\r\n  }\r\n\r\n  private getDurationChartPoint(plusDay: number) {\r\n    // console.log('getting durationchartpoint');\r\n    const chartPoint = new ChartPoint();\r\n    chartPoint.X = this.dateService.GetmmddFromMinusDays(-plusDay, this.dateService.currentWorkDate);\r\n    const result = this.getPreviousDayResult(-plusDay);\r\n    if (result != null && Number(result) > 0) {\r\n      chartPoint.Y = Number(result) / 60;\r\n    } else {\r\n      chartPoint.Y = 0;\r\n    }\r\n    return chartPoint;\r\n  }\r\n\r\n  private getDecimalChartPoint(plusDay: number) {\r\n    const chartPoint = new ChartPoint();\r\n    chartPoint.X = this.dateService.GetmmddFromMinusDays(-plusDay, this.dateService.currentWorkDate);\r\n    const result = Number(this.getPreviousDayResult(-plusDay));\r\n    if (result != null && result > 0) {\r\n      chartPoint.Y = result;\r\n    } else {\r\n      chartPoint.Y = null;\r\n    }\r\n    return chartPoint;\r\n  }\r\n\r\n  private getBinaryChartPoint(plusDay: number) {\r\n    const chartPoint = new ChartPoint();\r\n    chartPoint.X = this.dateService.GetmmddFromMinusDays(-plusDay, this.dateService.currentWorkDate);\r\n    const result = this.getPreviousDayDone(-plusDay);\r\n    if (result != null && result === true) {\r\n      chartPoint.Y = 1;\r\n    } else {\r\n      chartPoint.Y = null;\r\n    }\r\n    return chartPoint;\r\n  }\r\n}\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { TimerService } from 'src/app/services/timer.service';\r\nimport { TaskTimer } from 'src/app/models/Core/task-timer';\r\nimport { ILogger } from 'src/app/interfaces/i-logger';\r\nimport { EventData, EventService } from 'src/app/services/event.service';\r\nimport { DateService } from 'src/app/services/date.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-timer',\r\n  templateUrl: './timer.component.html',\r\n  styleUrls: ['./timer.component.scss'],\r\n})\r\nexport class TimerComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() currentTaskId: string;\r\n\r\n  public currentTimerObject: TaskTimer;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor(private timerService: TimerService,\r\n              private eventService: EventService,\r\n              private dateService: DateService,\r\n              private logger: ILogger) { }\r\n\r\n  async ngOnInit() {\r\n    // console.log('INIT TIMER',  this.startEvent);\r\n    // this.logger.logDebug('[6] TIMER ' + this.currentTaskId + ' INIT STARTED', new Date().toISOString());\r\n\r\n    this.currentTimerObject = new TaskTimer(this.currentTaskId, this.dateService.currentWorkDate);\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.TimerStart + this.currentTaskId, (seconds) => {\r\n      this.startTimer(seconds);\r\n    }));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.TimerPause + this.currentTaskId, async () => {\r\n      await this.pauseTimer();\r\n    }));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.TimerUnpause + this.currentTaskId, async () => {\r\n      await this.resumeTimer();\r\n    }));\r\n\r\n    // Resume timer is handled in the card component\r\n    /*this.eventService.on(EventService.EventIds.TimerResume + this.currentTaskId, async () => {\r\n      await this.resumeTimer();\r\n    });*/\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.TimerComplete + this.currentTaskId, async () => {\r\n      await this.completeTimer();\r\n    }));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.TimerCancel + this.currentTaskId, async () => {\r\n      await this.cancelTimer();\r\n    }));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.DateChanged, async (date: Date) => {\r\n      await this.getTimer(date);\r\n    }));\r\n\r\n    // this.logger.logDebug('[7] TIMER ' + this.currentTaskId + ' INIT DONE', new Date().toISOString());\r\n\r\n    await this.getTimer(this.dateService.currentWorkDate);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const sub of this.subscriptions) {\r\n      sub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private async getTimer(date: Date): Promise<void> {\r\n    // console.log('GET TIMER');\r\n    const timer = await this.timerService.getTimer(date, this.currentTaskId);\r\n    // console.log('GOT TIMER', timer);\r\n    if (timer != null) {\r\n      this.logger.logDebug('GOT TIMER');\r\n      // this.logger.logDebug('GOT TIMER ', JSON.stringify(timer));\r\n      // console.log('TIMER RETRIEVED ' + this.currentTaskId, timer);\r\n\r\n      this.currentTimerObject = timer;\r\n    } else {\r\n      // console.log('TIMER NOT RETRIEVED ' + this.currentTaskId);\r\n      // We still have to initialize an empty timer object or else it doesnt work\r\n      this.currentTimerObject = new TaskTimer(this.currentTaskId, date);\r\n    }\r\n  }\r\n\r\n  private async startTimer(initialSeconds: number): Promise<void> {\r\n    // console.log('STARTING TIMER', initialSeconds);\r\n    this.logger.logDebug('START TIMER ' + this.currentTaskId);\r\n    this.currentTimerObject = new TaskTimer(this.currentTaskId, this.dateService.currentWorkDate);\r\n    this.currentTimerObject.currentTimerSeconds = initialSeconds;\r\n    this.currentTimerObject.start();\r\n    await this.timerService.addTimer(this.currentTimerObject);\r\n    this.eventService.emit(new EventData(EventService.EventIds.SyncRequired, null));\r\n    // console.log('currenttimer2', this.currentTimerObject);\r\n  }\r\n\r\n  private async resumeTimer() {\r\n    // console.log('RESUME TIMER');\r\n    this.logger.logDebug('RESUME TIMER ' + this.currentTaskId);\r\n    // console.log('Resumed timer', this.currentTimerObject);\r\n    this.currentTimerObject.resume();\r\n    await this.timerService.updateTimer(this.currentTimerObject);\r\n    // console.log('currenttimer2', this.currentTimerObject);\r\n  }\r\n\r\n  private async pauseTimer() {\r\n    // console.log('PAUSE TIMER');\r\n    this.logger.logDebug('PAUSE TIMER ' + this.currentTaskId);\r\n    this.currentTimerObject.pause();\r\n    await this.timerService.updateTimer(this.currentTimerObject);\r\n    // console.log('currenttimer2', this.currentTimerObject);\r\n  }\r\n\r\n  private async completeTimer() {\r\n    // console.log('STOP TIMER');\r\n    this.logger.logDebug('STOP TIMER ' + this.currentTaskId);\r\n    this.currentTimerObject.complete();\r\n    await this.timerService.updateTimer(this.currentTimerObject);\r\n    // console.log('currenttimer2', this.currentTimerObject);\r\n  }\r\n\r\n  private async cancelTimer() {\r\n    // console.log('CANCEL TIMER');\r\n    this.logger.logDebug('CANCEL TIMER ' + this.currentTaskId);\r\n    // console.log('currenttimer1', this.currentTimerObject);\r\n    this.currentTimerObject.cancel();\r\n    await this.timerService.voidTimer(this.currentTimerObject);\r\n    // console.log('currenttimer2', this.currentTimerObject);\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ILogger } from 'src/app/interfaces/i-logger';\r\nimport { ModalController, Platform } from '@ionic/angular';\r\nimport { Subscription } from 'rxjs';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-debug-log',\r\n  templateUrl: './debug-log.component.html',\r\n  styleUrls: ['./debug-log.component.scss'],\r\n})\r\nexport class DebugLogComponent implements OnInit, OnDestroy {\r\n\r\n  public currentLogs: string[];\r\n  private backButtonSubscription: Subscription;\r\n\r\n  constructor(private logger: ILogger,\r\n              private modal: ModalController,\r\n              private platform: Platform) { }\r\n\r\n  ngOnInit() {\r\n    this.currentLogs = this.logger.getDebugLogs();\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await this.closePopup();\r\n    });\r\n  }\r\n\r\n  public async closePopup() {\r\n    return await this.modal.dismiss(null, null, ModalService.ModalIds.Logs);\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.backButtonSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, ViewChildren, OnDestroy } from '@angular/core';\r\nimport { TaskGroup } from 'src/app/models/Core/task-group';\r\nimport { PopoverController, Platform, IonReorderGroup, ModalController } from '@ionic/angular';\r\nimport { GroupPopoverComponent } from '../group-popover/group-popover.component';\r\nimport { EventService, EventData } from 'src/app/services/event.service';\r\nimport { TaskCardComponent } from '../TaskCard/task-card/task-card.component';\r\nimport { CalendarTaskService } from 'src/app/services/calendar-task.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { Ionic4DatepickerModalComponent } from '@logisticinfotech/ionic4-datepicker';\r\nimport DateUtils from 'src/app/shared/date-utils';\r\nimport { DateService } from 'src/app/services/date.service';\r\nimport { TaskFrequency } from 'src/app/models/Core/task-frequency.enum';\r\n\r\n@Component({\r\n  selector: 'app-group-card',\r\n  templateUrl: './group-card.component.html',\r\n  styleUrls: ['./group-card.component.scss'],\r\n})\r\nexport class GroupCardComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() currentGroup: TaskGroup;\r\n\r\n  @ViewChildren('taskcard') currentCards: any;\r\n  @ViewChildren('reorderGroup') reorderGroup: IonReorderGroup;\r\n\r\n  public disableDragAndDrop: boolean = true;\r\n  private subscriptions: Subscription[] = [];\r\n  private datePickerObj: any = {};\r\n\r\n  constructor(private popoverController: PopoverController,\r\n              private eventService: EventService,\r\n              private platform: Platform,\r\n              private taskService: CalendarTaskService,\r\n              private dateService: DateService,\r\n              private modalController: ModalController) { }\r\n\r\n  async ngOnInit() {\r\n\r\n    await this.platform.ready();\r\n\r\n    // Show timers retrieved from persistance\r\n    /*for (const card of this.currentCards as TaskCardComponent[]) {\r\n      card.viewModel.showTimerIfExists();\r\n    }*/\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.SkipAllGroup + this.currentGroup.GroupId, async () => {\r\n      await this.skipAll();\r\n      this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, null));\r\n    }));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.PostponeAllGroup + this.currentGroup.GroupId, async () => {\r\n      await this.postponeAll();\r\n    }));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.SkipAll, async () => {\r\n      await this.skipAll();\r\n    }));\r\n\r\n    this.subscriptions.push(this.eventService.on(EventService.EventIds.ToggleDragAndDrop, async (enable: boolean) => {\r\n      this.disableDragAndDrop = !enable;\r\n    }));\r\n\r\n    this.disableDragAndDrop = !this.taskService.enableDragAndDrop;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const sub of this.subscriptions) {\r\n      sub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  async doReorder(ev: any) {\r\n    // Before complete is called with the items they will remain in the\r\n    // order before the drag\r\n    // console.log('EVENT', ev);\r\n    // console.log('FROM, TO', ev.detail.from, ev.detail.to);\r\n    // console.log('Before complete', this.currentGroup.Tasks);\r\n\r\n    const from = Number(ev.detail.from);\r\n    const to = Number(ev.detail.to);\r\n\r\n    if (from < 0) {\r\n      return;\r\n    }\r\n    if (to > this.currentGroup.Tasks.length - 1) {\r\n      ev.detail.complete();\r\n      return;\r\n    }\r\n    const fromTask = this.currentGroup.Tasks[from];\r\n    const toTask = this.currentGroup.Tasks[to];\r\n\r\n    // console.log('FROM ABSOLUTE', fromTask.AbsolutePosition);\r\n    // console.log('TO ABSOLUTE', toTask.AbsolutePosition);\r\n\r\n    fromTask.AbsolutePosition = toTask.AbsolutePosition;\r\n\r\n    await this.taskService.updateCalendarTask(fromTask);\r\n    ev.detail.complete();\r\n\r\n    // Finish the reorder and position the item in the DOM based on\r\n    // where the gesture ended. Update the items variable to the\r\n    // new order of items\r\n    // this.currentGroup.Tasks = ev.detail.complete(this.currentGroup.Tasks);\r\n\r\n    // After complete is called the items will be in the new order\r\n    // console.log('After complete', this.currentGroup.Tasks);\r\n  }\r\n\r\n  private async skipAll() {\r\n    for (const card of this.currentCards as TaskCardComponent[]) {\r\n      if (card.viewModel.isShown === true &&\r\n          card.viewModel.showMainTaskButtons === true &&\r\n          card.viewModel.showBtnSkip === true) {\r\n        // console.log('SKIPPING', card.currentTask.Name);\r\n        // console.log('skipping', card.viewModel.currentTask.Name);\r\n        await card.skip();\r\n        card.viewModel.reset();\r\n      }\r\n    }\r\n\r\n    // console.log('EMITTING PROGRESSBAR');\r\n    this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, null));\r\n  }\r\n\r\n  private async postponeAll() {\r\n    const datePickerModal = await this.modalController.create({\r\n      component: Ionic4DatepickerModalComponent,\r\n      cssClass: 'li-ionic4-datePicker',\r\n      componentProps: {\r\n         objConfig: this.datePickerObj,\r\n         selectedDate: DateUtils.AddDays(this.dateService.currentWorkDate, 1)\r\n      }\r\n    });\r\n    await datePickerModal.present();\r\n\r\n    const subscription = this.platform.backButton.subscribe(async () => {\r\n      await datePickerModal.dismiss();\r\n    });\r\n\r\n    const data = await datePickerModal.onDidDismiss();\r\n\r\n    subscription.unsubscribe();\r\n\r\n    const selectedDate = new Date(data.data.date);\r\n\r\n    if (!DateUtils.isValidDate(selectedDate)) { // standard cancel\r\n      return;\r\n    }\r\n\r\n    for (const card of this.currentCards as TaskCardComponent[]) {\r\n      if (card.viewModel.isShown === true &&\r\n          card.viewModel.showMainTaskButtons === true &&\r\n          card.viewModel.showBtnSkip === true &&\r\n          (card.currentTask.Frequency === TaskFrequency.UntilDone ||\r\n           card.currentTask.Frequency === TaskFrequency.Once)) {\r\n        // console.log('SKIPPING', card.currentTask.Name);\r\n        // console.log('postponing ', card.viewModel.currentTask.Name);\r\n        await card.postponeTask(selectedDate);\r\n        card.viewModel.reset();\r\n      }\r\n    }\r\n\r\n    // console.log('EMITTING PROGRESSBAR');\r\n    this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, null));\r\n  }\r\n\r\n  public toggleGroup() {\r\n    this.currentGroup.isExpanded = !this.currentGroup.isExpanded;\r\n  }\r\n\r\n  public async groupMenuClick(event: any) {\r\n    event.stopPropagation();\r\n    const popover = await this.popoverController.create({\r\n      component: GroupPopoverComponent,\r\n      cssClass: 'group-popover',\r\n      componentProps: {\r\n        group: this.currentGroup,\r\n      },\r\n      event,\r\n      translucent: false,\r\n      animated: false,\r\n      showBackdrop: false,\r\n    });\r\n    return await popover.present();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Platform, ModalController, LoadingController, AlertController } from '@ionic/angular';\r\nimport { TaskGroup } from 'src/app/models/Core/task-group';\r\nimport { CalendarTaskService } from 'src/app/services/calendar-task.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ILogger } from 'src/app/interfaces/i-logger';\r\nimport { InvalidTaskGroupError } from 'src/app/models/Exceptions/InvalidTaskGroupError';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { AlertOptions } from '@ionic/core';\r\nimport NumberUtils from 'src/app/shared/number-utils';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-group-create',\r\n  templateUrl: './group-create.component.html',\r\n  styleUrls: ['./group-create.component.scss'],\r\n})\r\nexport class GroupCreateComponent implements OnInit, OnDestroy {\r\n\r\n  private backButtonSubscription: Subscription;\r\n\r\n  public currentGroup: TaskGroup;\r\n  public selectableTasks: TaskSelectionViewModel[] = [];\r\n  public selectedAfterGroup: GroupPositionViewModel;\r\n  public allOtherGroups: GroupPositionViewModel[] = [];\r\n  public selectAllChecked: boolean;\r\n  public taskTypeValue: string = 'Once';\r\n\r\n  constructor(private platform: Platform,\r\n              private modalController: ModalController,\r\n              private calendarTaskService: CalendarTaskService,\r\n              private loadingController: LoadingController,\r\n              private translate: TranslateService,\r\n              private logger: ILogger,\r\n              private alertCtrl: AlertController,\r\n              private alertService: AlertService,\r\n              private userService: UserService) { }\r\n\r\n  async ngOnInit() {\r\n    this.resetBackButton();\r\n\r\n    const otherGroups = this.calendarTaskService.allGroups\r\n                                                .filter(p => p.Void !== true)\r\n                                                .sort((x, y) => x.Position > y.Position ? 1 : -1);\r\n\r\n    this.currentGroup = new TaskGroup();\r\n    this.currentGroup.GroupId = NumberUtils.getRandomId();\r\n    this.currentGroup.InsertDate = new Date();\r\n    this.currentGroup.UserId = await this.userService.getCurrentUserId();\r\n\r\n    // First task position 1\r\n    if (!otherGroups.some(p => p.GroupId !== CalendarTaskService.UnassignedId)) {\r\n      this.currentGroup.Position = 1;\r\n      this.currentGroup.InitialPosition = 500;\r\n    } else {\r\n      this.currentGroup.Position = Math.max(...otherGroups.map(p => p.Position)) + 1;\r\n      this.currentGroup.InitialPosition = 500;\r\n    }\r\n\r\n    // FILL UNASSIGNED\r\n    // TODO: we could call GetAllPresentTasks instead but for now we show all tasks\r\n    for (const task of this.calendarTaskService.getAllPresentTasks()) {\r\n      // TODO: Remove this later, same for edit/create\r\n      if (task.GroupId == null || task.GroupId.length === 0) {\r\n        task.GroupId = CalendarTaskService.UnassignedId;\r\n        //console.log('FILLED UNASSIGNED : ', task.GroupId);\r\n      }\r\n\r\n      if (task.GroupId === CalendarTaskService.UnassignedId) {\r\n        const selectableTask = new TaskSelectionViewModel();\r\n        selectableTask.calendarTaskId = task.CalendarTaskId;\r\n        selectableTask.Name = task.Name;\r\n        selectableTask.isChecked = false;\r\n        this.selectableTasks.push(selectableTask);\r\n      }\r\n    }\r\n\r\n    this.selectAllChecked = false;\r\n\r\n    // Set all other groups\r\n    for (const group of otherGroups) {\r\n      const groupViewModel = new GroupPositionViewModel();\r\n      groupViewModel.Name = group.Name;\r\n      groupViewModel.groupId = group.GroupId;\r\n      groupViewModel.isSelected = false;\r\n      groupViewModel.Position = group.Position;\r\n      this.allOtherGroups.push(groupViewModel);\r\n    }\r\n\r\n    // Set After Group\r\n    const maxPosition = Math.max(...this.allOtherGroups.map(p => p.Position));\r\n    const index = this.allOtherGroups.findIndex(p => p.Position === maxPosition);\r\n    this.selectedAfterGroup = this.allOtherGroups[index];\r\n    this.selectedAfterGroup.isSelected = true;\r\n\r\n    this.currentGroup.Position = maxPosition + 1;\r\n  }\r\n\r\n  public async closePopup(): Promise<void> {\r\n    await this.modalController.dismiss(false, null, ModalService.ModalIds.CreateGroup);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.backButtonSubscription.unsubscribe();\r\n  }\r\n\r\n  public checkAllClick(): void {\r\n    const result = !this.selectAllChecked;\r\n\r\n    for (const task of this.selectableTasks) {\r\n      task.isChecked = result;\r\n    }\r\n  }\r\n\r\n  public async btnSaveClick(): Promise<void> {\r\n    try {\r\n      this.currentGroup.validate(this.translate);\r\n    } catch (error) {\r\n      if (error instanceof InvalidTaskGroupError) {\r\n        // console.log('error04');\r\n        this.logger.logError(new Error('invalidtaskgrouperror'), { key: 'error', value: JSON.stringify(error)});\r\n        alert(error.message);\r\n        return;\r\n      }\r\n    }\r\n\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('group-create.msg-saving'),\r\n    });\r\n    loading.present();\r\n\r\n    try {\r\n\r\n      // Save all GroupIds // TODO: Move into insertGroup ?\r\n      // const selectedTasks: CalendarTask[] = [];\r\n      for (const taskViewModel of this.selectableTasks) {\r\n        if (taskViewModel.isChecked) {\r\n          const task = this.calendarTaskService.getTask(taskViewModel.calendarTaskId);\r\n          task.Synced = false;\r\n          task.GroupId = this.currentGroup.GroupId;\r\n          this.currentGroup.Tasks.push(task);\r\n        }\r\n      }\r\n\r\n      // Save Group\r\n      await this.calendarTaskService.insertGroup(this.currentGroup);\r\n\r\n      await this.modalController.dismiss(true, null, ModalService.ModalIds.CreateGroup);\r\n\r\n      // Refresh TaskList\r\n      // Handle Errors\r\n    } catch (error) {\r\n      this.logger.logError(error);\r\n      // console.log('ERROR SAVING GROUP', error);\r\n      alert('error saving group');\r\n    } finally {\r\n      loading.dismiss();\r\n    }\r\n  }\r\n\r\n  public async btnEditPositionClick() {\r\n    const handlerOk: (alertData: any) => void = (alertData) => {\r\n      this.selectedAfterGroup = this.allOtherGroups.filter(p => p.Name === alertData)[0];\r\n      this.absolutePositionChange(this.selectedAfterGroup.Position);\r\n    };\r\n\r\n    const handlerCancel: (alertData: any) => void = (alertData) => {\r\n      return;\r\n    };\r\n\r\n    const handlerSetAsFirst: (alertData: any) => void = (alertData) => {\r\n      this.setToFirst();\r\n    };\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getChangeGroupPositionAlertOptions(handlerOk,\r\n                                                                                            handlerCancel,\r\n                                                                                            handlerSetAsFirst,\r\n                                                                                            this.allOtherGroups.map(p => p.Name),\r\n                                                                                            this.selectedAfterGroup.Name);\r\n    const alert = await this.alertCtrl.create(alertOptions);\r\n\r\n    await alert.present();\r\n\r\n    this.setBackButtonAlert(alert);\r\n    await alert.onDidDismiss();\r\n    this.resetBackButton();\r\n  }\r\n\r\n  private setBackButtonAlert(alert: HTMLIonAlertElement) {\r\n    this.backButtonSubscription.unsubscribe();\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await alert.dismiss();\r\n    });\r\n  }\r\n\r\n  private resetBackButton() {\r\n    if (this.backButtonSubscription != null) {\r\n      this.backButtonSubscription.unsubscribe();\r\n    }\r\n\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await this.closePopup();\r\n    });\r\n  }\r\n\r\n  public setToFirst(): void {\r\n    this.currentGroup.Position = 1;\r\n    this.selectedAfterGroup = null;\r\n  }\r\n\r\n  public absolutePositionChange(absolutePosition: number) {\r\n    this.currentGroup.Position = absolutePosition + 1;\r\n  }\r\n\r\n  public async taskTypeChanged(event: any) {\r\n    if (event.detail.value === 'Once') {\r\n      this.currentGroup.RecurringDefault = false;\r\n    } else {\r\n      this.currentGroup.RecurringDefault = true;\r\n    }\r\n  }\r\n}\r\n\r\nexport class TaskSelectionViewModel {\r\n  public calendarTaskId: string;\r\n  public Name: string;\r\n  public isChecked: boolean;\r\n}\r\n\r\nexport class GroupPositionViewModel {\r\n  public groupId: string;\r\n  public Name: string;\r\n  public Position: number;\r\n  public isSelected: boolean;\r\n}\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ModalController, Platform, LoadingController, AlertController } from '@ionic/angular';\r\nimport { TaskGroup } from 'src/app/models/Core/task-group';\r\nimport { CalendarTaskService } from 'src/app/services/calendar-task.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ILogger } from 'src/app/interfaces/i-logger';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { AlertOptions } from '@ionic/core';\r\nimport { IDataSyncLocalService } from 'src/app/interfaces/i-data-sync-local-service';\r\nimport { TaskSelectionViewModel, GroupPositionViewModel } from '../group-create/group-create.component';\r\nimport { InvalidTaskGroupError } from 'src/app/models/Exceptions/InvalidTaskGroupError';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-group-edit',\r\n  templateUrl: './group-edit.component.html',\r\n  styleUrls: ['./group-edit.component.scss'],\r\n})\r\nexport class GroupEditComponent implements OnInit, OnDestroy {\r\n\r\n  private backButtonSubscription: Subscription;\r\n\r\n  @Input() currentGroup: TaskGroup;\r\n  public selectableTasks: TaskSelectionViewModel[] = [];\r\n  public selectedAfterGroup: GroupPositionViewModel;\r\n  public allOtherGroups: GroupPositionViewModel[] = [];\r\n  public selectAllChecked: boolean;\r\n  public taskTypeValue: string = 'Once';\r\n\r\n  constructor(private modalController: ModalController,\r\n              private platform: Platform,\r\n              private calendarTaskService: CalendarTaskService,\r\n              private translate: TranslateService,\r\n              private logger: ILogger,\r\n              private loadingController: LoadingController,\r\n              private localDataSync: IDataSyncLocalService,\r\n              private alertCtrl: AlertController,\r\n              private alertService: AlertService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetBackButton();\r\n\r\n    // FILL UNASSIGNED\r\n    // TODO: we could call GetAllPresentTasks instead but for now we show all tasks\r\n    for (const task of this.calendarTaskService.getAllPresentTasks()) {\r\n      // TODO: Remove this later, same for edit/create\r\n      if (task.GroupId == null || task.GroupId.length === 0) {\r\n        task.GroupId = CalendarTaskService.UnassignedId;\r\n      }\r\n\r\n      if (task.GroupId === CalendarTaskService.UnassignedId ||\r\n          task.GroupId === this.currentGroup.GroupId) {\r\n\r\n        const selectableTask = new TaskSelectionViewModel();\r\n        selectableTask.calendarTaskId = task.CalendarTaskId;\r\n        selectableTask.Name = task.Name;\r\n        selectableTask.isChecked = task.GroupId === this.currentGroup.GroupId;\r\n        this.selectableTasks.push(selectableTask);\r\n      }\r\n    }\r\n\r\n    this.selectAllChecked = false;\r\n\r\n    const otherGroups = this.calendarTaskService.allGroups\r\n                                                .filter(p => p.GroupId !== this.currentGroup.GroupId &&\r\n                                                              p.Void !== true)\r\n                                                .sort((x, y) => x.Position > y.Position ? 1 : -1);\r\n\r\n    // Set all other groups\r\n    for (const group of otherGroups) {\r\n      const groupViewModel = new GroupPositionViewModel();\r\n      groupViewModel.Name = group.Name;\r\n      groupViewModel.groupId = group.GroupId;\r\n      groupViewModel.isSelected = false;\r\n      groupViewModel.Position = group.Position;\r\n      this.allOtherGroups.push(groupViewModel);\r\n    }\r\n\r\n    // Set After Group\r\n    const afterGroups = this.allOtherGroups.filter(p => p.Position < this.currentGroup.Position);\r\n\r\n    if (afterGroups.length > 0) {\r\n      this.selectedAfterGroup = afterGroups[afterGroups.length - 1];\r\n      this.selectedAfterGroup.isSelected = true;\r\n    }\r\n\r\n    if (this.currentGroup.Position === 0) {\r\n      this.currentGroup.Position = 1;\r\n    }\r\n\r\n    this.taskTypeValue = this.currentGroup.RecurringDefault === false ? 'Once' : 'Recurring';\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.backButtonSubscription.unsubscribe();\r\n  }\r\n\r\n  public async closePopup(): Promise<void> {\r\n    await this.modalController.dismiss(false, null, ModalService.ModalIds.EditGroup);\r\n  }\r\n\r\n  public checkAllClick(): void {\r\n    const result = !this.selectAllChecked;\r\n\r\n    for (const task of this.selectableTasks) {\r\n      task.isChecked = result;\r\n    }\r\n  }\r\n\r\n  public async btnSaveClick(): Promise<void> {\r\n    try {\r\n      this.currentGroup.validate(this.translate);\r\n    } catch (error) {\r\n      if (error instanceof InvalidTaskGroupError) {\r\n        // console.log('error04');\r\n        this.logger.logError(new Error('invalidtaskgrouperror'), { key: 'error', value: JSON.stringify(error)});\r\n        alert(error.message);\r\n        return;\r\n      }\r\n    }\r\n\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('group-create.msg-saving'),\r\n    });\r\n    loading.present();\r\n\r\n    try {\r\n      // Save Group\r\n      this.currentGroup.UpdateDate = new Date();\r\n\r\n      // Verify all tasks in list, if they changed, update it\r\n      // const selectedTasks: CalendarTask[] = [];\r\n      for (const selectableTask of this.selectableTasks) {\r\n        const task = this.calendarTaskService.getTask(selectableTask.calendarTaskId);\r\n\r\n        if (selectableTask.isChecked && task.GroupId !== this.currentGroup.GroupId) {\r\n          task.Synced = false;\r\n          task.GroupId = this.currentGroup.GroupId;\r\n          this.currentGroup.Tasks.push(this.calendarTaskService.getTask(selectableTask.calendarTaskId));\r\n          await this.localDataSync.queueUpdateCalendarTask(task.toDTO(), false);\r\n\r\n          // First add, make it visible\r\n          if (this.currentGroup.Tasks.length === 1) {\r\n            this.currentGroup.isVisible = true;\r\n          }\r\n\r\n          // selectedTasks.push(this.calendarTaskService.getTask(selectableTask.calendarTaskId));\r\n        } else if (!selectableTask.isChecked && task.GroupId === this.currentGroup.GroupId) {\r\n          task.Synced = false;\r\n          task.GroupId = CalendarTaskService.UnassignedId;\r\n          await this.localDataSync.queueUpdateCalendarTask(task.toDTO(), false);\r\n          const index = this.currentGroup.Tasks.findIndex(p => p.CalendarTaskId === selectableTask.calendarTaskId);\r\n          this.currentGroup.Tasks.splice(index, 1);\r\n\r\n          // Last Remove, make it invisible\r\n          if (this.currentGroup.Tasks.length === 0) {\r\n            this.currentGroup.isVisible = false;\r\n          }\r\n        }\r\n      }\r\n\r\n      // TODO : This await might be removable\r\n      await this.calendarTaskService.updateGroup(this.currentGroup);\r\n      await this.modalController.dismiss(true, null, ModalService.ModalIds.EditGroup);\r\n\r\n      // Refresh TaskList\r\n      // Handle Errors\r\n    } catch (error) {\r\n      // console.log('ERROR SAVING GROUP', error);\r\n      alert('error saving group');\r\n    } finally {\r\n      loading.dismiss();\r\n    }\r\n  }\r\n\r\n  public async btnEditPositionClick() {\r\n    //console.log('EDITBUTTON CLICK');\r\n\r\n    const handlerOk: (alertData: any) => void = (alertData) => {\r\n      this.selectedAfterGroup = this.allOtherGroups.filter(p => p.Name === alertData)[0];\r\n      this.absolutePositionChange(this.selectedAfterGroup.Position);\r\n    };\r\n\r\n    const handlerCancel: (alertData: any) => void = (alertData) => {\r\n      return;\r\n    };\r\n\r\n    const handlerSetAsFirst: (alertData: any) => void = (alertData) => {\r\n      this.setToFirst();\r\n    };\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getChangeGroupPositionAlertOptions(handlerOk,\r\n                                                                                            handlerCancel,\r\n                                                                                            handlerSetAsFirst,\r\n                                                                                            this.allOtherGroups.map(p => p.Name),\r\n                                                                                            this.selectedAfterGroup == null ?\r\n                                                                                              null :\r\n                                                                                              this.selectedAfterGroup.Name);\r\n    const alert = await this.alertCtrl.create(alertOptions);\r\n    await alert.present();\r\n\r\n    this.setBackButtonAlert(alert);\r\n\r\n    await alert.onDidDismiss();\r\n\r\n    this.resetBackButton();\r\n  }\r\n\r\n  public async btnDeleteClick() {\r\n    const handler: (alertData: any) => void = (alertData) => {\r\n      this.deleteGroup();\r\n    };\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getDeleteGroupAlertOptions(handler);\r\n    const alert = await this.alertCtrl.create(alertOptions);\r\n    await alert.present();\r\n\r\n    this.setBackButtonAlert(alert);\r\n    await alert.onDidDismiss();\r\n    this.resetBackButton();\r\n  }\r\n\r\n  private async deleteGroup(): Promise<void> {\r\n    /*const loading = await this.loadingController.create({\r\n      message: this.translate.instant('edit-task.msg-deleting-task'),\r\n    });\r\n    loading.present();*/\r\n    // console.log('deleting started', new Date().toISOString());\r\n    this.currentGroup.Void = true;\r\n    this.currentGroup.VoidDate = new Date();\r\n    this.currentGroup.isVisible = false;\r\n    const result = await this.calendarTaskService.updateGroup(this.currentGroup);\r\n    try {\r\n      // loading.dismiss();\r\n      if (result === true) {\r\n        await this.modalController.dismiss(true, null, ModalService.ModalIds.EditGroup);\r\n      } else {\r\n        this.logger.logError(new Error('Unable to delete this task, result is false'));\r\n      }\r\n      return;\r\n    } catch (error) {\r\n      // loading.dismiss();\r\n      this.logger.logError(new Error('Unable to delete this task : ' + error.message));\r\n      alert('Unable to delete this task');\r\n      return;\r\n    }\r\n  }\r\n\r\n  private setBackButtonAlert(alert: HTMLIonAlertElement) {\r\n    this.backButtonSubscription.unsubscribe();\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await alert.dismiss();\r\n    });\r\n  }\r\n\r\n  private resetBackButton() {\r\n    if (this.backButtonSubscription != null) {\r\n      this.backButtonSubscription.unsubscribe();\r\n    }\r\n\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await this.closePopup();\r\n    });\r\n  }\r\n\r\n  public setToFirst(): void {\r\n    this.currentGroup.Position = 1;\r\n    this.selectedAfterGroup = null;\r\n  }\r\n\r\n  public absolutePositionChange(absolutePosition: number) {\r\n    this.currentGroup.Position = absolutePosition + 1;\r\n  }\r\n  \r\n  public async taskTypeChanged(event: any) {\r\n    if (event.detail.value === 'Once') {\r\n      this.currentGroup.RecurringDefault = false;\r\n    } else {\r\n      this.currentGroup.RecurringDefault = true;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Platform, ModalController } from '@ionic/angular';\r\nimport { TaskGroup } from 'src/app/models/Core/task-group';\r\nimport { CalendarTaskService } from 'src/app/services/calendar-task.service';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\nimport { GroupCreateComponent } from '../group-create/group-create.component';\r\nimport { GroupEditComponent } from '../group-edit/group-edit.component';\r\n\r\n@Component({\r\n  selector: 'app-group-list',\r\n  templateUrl: './group-list.component.html',\r\n  styleUrls: ['./group-list.component.scss'],\r\n})\r\nexport class GroupListComponent implements OnInit, OnDestroy {\r\n\r\n  private backButtonSubscription: Subscription;\r\n\r\n  constructor(private platform: Platform,\r\n              private modalController: ModalController,\r\n              public calendarTaskService: CalendarTaskService,\r\n              private modalService: ModalService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetBackButton();\r\n\r\n    this.refreshGroupList();\r\n  }\r\n\r\n  private refreshGroupList() {\r\n    this.calendarTaskService.reorderAllRamGroups();\r\n  }\r\n\r\n  public async closePopup(): Promise<void> {\r\n    await this.modalController.dismiss(false, null, ModalService.ModalIds.Groups);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.backButtonSubscription.unsubscribe();\r\n  }\r\n\r\n  public async addGroupButtonClick() {\r\n    this.backButtonSubscription.unsubscribe();\r\n    const result = await this.modalService.showCreateGroupModal(GroupCreateComponent);\r\n    this.resetBackButton();\r\n    if (result === true) {\r\n      this.refreshGroupList();\r\n    }\r\n  }\r\n\r\n  public async btnGroupHeaderClick(group: TaskGroup) {\r\n    const result = await this.modalService.showEditGroupModal(GroupEditComponent, group);\r\n    if (result === true) {\r\n      this.refreshGroupList();\r\n    }\r\n  }\r\n\r\n  private setBackButtonModal(picker: HTMLIonPickerElement) {\r\n    this.backButtonSubscription.unsubscribe();\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await picker.dismiss();\r\n    });\r\n  }\r\n\r\n  private resetBackButton() {\r\n    if (this.backButtonSubscription != null) {\r\n      this.backButtonSubscription.unsubscribe();\r\n    }\r\n\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await this.closePopup();\r\n    });\r\n  }\r\n}\r\n\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { TaskGroup } from 'src/app/models/Core/task-group';\r\nimport { EventService, EventData } from 'src/app/services/event.service';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\nimport { GroupEditComponent } from '../group-edit/group-edit.component';\r\nimport { TaskCreateComponent } from '../task-create/task-create.component';\r\n\r\n@Component({\r\n  selector: 'app-group-popover',\r\n  templateUrl: './group-popover.component.html',\r\n  styleUrls: ['./group-popover.component.scss'],\r\n})\r\nexport class GroupPopoverComponent implements OnInit {\r\n\r\n  @Input() group: TaskGroup;\r\n\r\n  public skipAllBtnShown: boolean = true;\r\n  public postponeAllBtnShown: boolean = true;\r\n\r\n  constructor(private popoverController: PopoverController,\r\n              private eventService: EventService,\r\n              private modalService: ModalService) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  public async btnCreateTaskClick() {\r\n    await this.popoverController.dismiss();\r\n    await this.modalService.showCreateTaskModal(TaskCreateComponent, this.group.GroupId);\r\n  }\r\n\r\n  public async btnEditGroupClick() {\r\n    const result = await this.modalService.showEditGroupModal(GroupEditComponent, this.group);\r\n    if (result === true) {\r\n      await this.popoverController.dismiss();\r\n    }\r\n  }\r\n\r\n  public async btnSkipAllClick() {\r\n    this.eventService.emit(new EventData(EventService.EventIds.SkipAllGroup + this.group.GroupId, null));\r\n    await this.popoverController.dismiss();\r\n  }\r\n\r\n  public async btnPostponeAllClick() {\r\n    this.eventService.emit(new EventData(EventService.EventIds.PostponeAllGroup + this.group.GroupId, null));\r\n    await this.popoverController.dismiss();\r\n  }\r\n}\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { FirebaseUISignInSuccessWithAuthResult, FirebaseUISignInFailure } from 'firebaseui-angular';\r\nimport { Router } from '@angular/router';\r\nimport { IAuthenticationService } from 'src/app/interfaces/i-authentication-service';\r\nimport { Language } from 'src/app/models/Core/language.enum';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ILogger } from 'src/app/interfaces/i-logger';\r\nimport { IUserService } from 'src/app/interfaces/i-user-service';\r\nimport { UserConfig } from 'src/app/models/Core/user-config';\r\nimport { User } from 'src/app/models/Core/user';\r\nimport { MenuController, Platform } from '@ionic/angular';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { DataSyncServerService } from 'src/app/services/data-sync-server-service';\r\nimport ThreadUtils from 'src/app/shared/thread.utils';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit, AfterViewInit {\r\n\r\n  public showLogin: boolean;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private auth: IAuthenticationService,\r\n    private userService: IUserService,\r\n    private translate: TranslateService,\r\n    private logger: ILogger,\r\n    private menuCtrl: MenuController,\r\n    private platform: Platform) {\r\n  }\r\n\r\n  async ngOnInit() {\r\n    this.menuCtrl.enable(false);\r\n    this.showLogin = true;\r\n    if (await this.auth.currentUserIsAuthenticated() === true) {\r\n      this.redirectToTaskList();\r\n    } else {\r\n      //console.log('logging out1');\r\n      await this.userService.logout();\r\n    }\r\n  }\r\n\r\n  async ngAfterViewInit(): Promise<void> {\r\n    // Select first input\r\n    try {\r\n      await ThreadUtils.sleep(500);\r\n      const firstInput: any = document.querySelector('#ui-sign-in-email-input');\r\n      // console.log('firstinput', firstInput);\r\n      firstInput.focus();\r\n    } catch (error) {\r\n      // console.log('error', error);\r\n      this.logger.logError(error);\r\n    }\r\n  }\r\n\r\n  public async successCallback(signInSuccessData: FirebaseUISignInSuccessWithAuthResult): Promise<void> { // TODO : Capacitor\r\n    //console.log('successcallback');\r\n    this.menuCtrl.enable(true);\r\n    this.logger.logDebug('~ Success Signin Callback', JSON.stringify(signInSuccessData), new Date().toISOString());\r\n    this.showLogin = false;\r\n    await this.auth.setLoginPersistance();\r\n    //console.log('persistance set');\r\n    this.logger.logDebug('~ Login persistance set', new Date().toISOString());\r\n    this.userService.getUserForLogin().then(user => {\r\n      this.logger.logDebug('~ Got Current User, setting language', new Date().toISOString());\r\n\r\n      if (user == null) {\r\n        this.logger.logDebug('user is null, redirecting to tasklist for FirstTime()');\r\n        this.redirectToTaskList();\r\n        return;\r\n      }\r\n\r\n      UserService.currentUser = user;\r\n      UserService.currentUserId = user.UserId;\r\n      DataSyncServerService.GetLatestRequired = true;\r\n      DataSyncServerService.GetLatestRequiredReason = 'Login success';\r\n      // console.log('got user', user);\r\n      if (User.getConfig(user, UserConfig.PreferedLanguageKey) === Language.French) {\r\n        this.logger.logDebug('~ Use Fr', new Date().toISOString());\r\n        this.translate.use('fr');\r\n        this.logger.logDebug('~ Fr Used', new Date().toISOString());\r\n      } else {\r\n        this.logger.logDebug('~ Use En', new Date().toISOString());\r\n        this.translate.use('en');\r\n        this.logger.logDebug('~ En Used', new Date().toISOString());\r\n      }\r\n      if (User.getConfig(user, UserConfig.KeepPortrait) === true) {\r\n        try {\r\n          if (this.platform.is('capacitor')) {\r\n            screen.orientation.lock('portrait');\r\n          }\r\n        } catch (error) {\r\n\r\n        }\r\n      }\r\n      this.redirectToTaskList();\r\n    }).catch(error => {\r\n      // console.log('Error get user for login', error);\r\n      alert('Unable to get user from server, please try again later');\r\n      this.redirectToLogin();\r\n    });\r\n  }\r\n\r\n  public errorCallback(errorData: FirebaseUISignInFailure): void {\r\n    this.logger.logEvent('login failed', { key: 'errorDate', value: JSON.stringify(errorData) });\r\n  }\r\n\r\n  private redirectToTaskList(): void {\r\n    this.logger.logDebug('~ Redirecting to task list', new Date().toISOString());\r\n    this.router.navigate(['/task-list']);\r\n  }\r\n\r\n  private async redirectToLogin(): Promise<void> {\r\n    this.logger.logDebug('~ Redirecting to login', new Date().toISOString());\r\n    await this.userService.logout();\r\n    location.reload();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Platform, ModalController, LoadingController, AlertController } from '@ionic/angular';\r\nimport { CalendarTaskService } from 'src/app/services/calendar-task.service';\r\nimport DateUtils from 'src/app/shared/date-utils';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { AlertOptions } from '@ionic/core';\r\nimport { TaskHistoryService } from 'src/app/services/task-history.service';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-note-list',\r\n  templateUrl: './note-list.component.html',\r\n  styleUrls: ['./note-list.component.scss'],\r\n})\r\nexport class NoteListComponent implements OnInit, OnDestroy {\r\n\r\n  private backButtonSubscription: Subscription;\r\n  public taskFilters: TaskFilterViewModel[] = [];\r\n  public allNotes: NoteViewModel[] = [];\r\n  public filteredNotes: NoteViewModel[] = [];\r\n  public startDateText: string;\r\n  public endDateText: string;\r\n  public startDate: Date;\r\n  public endDate: Date;\r\n  public keywordSearch: string = '';\r\n\r\n  constructor(private platform: Platform,\r\n              private modalController: ModalController,\r\n              private calendarTaskService: CalendarTaskService,\r\n              private translate: TranslateService,\r\n              private loadingController: LoadingController,\r\n              private alertCtrl: AlertController,\r\n              private alertService: AlertService,\r\n              private historyService: TaskHistoryService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetBackButton();\r\n\r\n    this.startDate = DateUtils.AddDays(DateUtils.Today(), -365);\r\n    this.endDate = DateUtils.Today();\r\n    this.startDateText = DateUtils.getLocalMysqlDateString(this.startDate);\r\n    this.endDateText = DateUtils.getLocalMysqlDateString(this.endDate);\r\n    this.initializeFilters();\r\n    this.initializeAllNotes();\r\n    this.setFilteredNotes();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.backButtonSubscription.unsubscribe();\r\n  }\r\n\r\n  public async checkboxChanged(): Promise<void> {\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('note-list.loading-filters'),\r\n    });\r\n    await loading.present();\r\n\r\n    await this.setFilteredNotes();\r\n\r\n    await loading.dismiss();\r\n  }\r\n\r\n  public async btnDeleteCommentClick(note: NoteViewModel): Promise<void> {\r\n    const handler: (alertData: any) => void = async (alertData) => {\r\n      // console.log('DELETING NOTE', note);\r\n\r\n      const index = this.filteredNotes.findIndex(p => p.historyId === note.historyId);\r\n      this.filteredNotes.splice(index, 1);\r\n      const index2 = this.allNotes.findIndex(p => p.historyId === note.historyId);\r\n      this.allNotes.splice(index2, 1);\r\n\r\n      const task = this.calendarTaskService.getTask(note.calendarTaskId);\r\n      const taskHistoryIndex = task.Histories.findIndex(p => p.TaskHistoryId === note.historyId);\r\n      const history = task.Histories[taskHistoryIndex];\r\n\r\n      history.Comment = '';\r\n      history.UpdateDate = new Date();\r\n\r\n      await this.historyService.updateTaskHistory(history);\r\n    };\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getDeleteNoteAlertOptions(handler);\r\n    const alert = await this.alertCtrl.create(alertOptions);\r\n\r\n    await alert.present();\r\n\r\n    this.setBackButtonAlert(alert);\r\n    await alert.onDidDismiss();\r\n    this.resetBackButton();\r\n  }\r\n\r\n  public async keywordChanged(): Promise<void> {\r\n    if (this.keywordSearch.length > 1) {\r\n      await this.setFilteredNotes();\r\n    }\r\n  }\r\n\r\n  public async textClick(note: NoteViewModel) {\r\n    const handler: (alertData: any) => void = async (alertData) => {\r\n      // console.log('UPDATE NOTE', alertData.Note);\r\n\r\n      // Update NoteViewModel\r\n      const index = this.filteredNotes.findIndex(p => p.historyId === note.historyId);\r\n      this.filteredNotes[index].text = alertData.Note;\r\n\r\n      // Update Note\r\n      const task = this.calendarTaskService.getTask(note.calendarTaskId);\r\n      const taskHistoryIndex = task.Histories.findIndex(p => p.TaskHistoryId === note.historyId);\r\n      const history = task.Histories[taskHistoryIndex];\r\n\r\n      history.Comment = alertData.Note;\r\n      history.UpdateDate = new Date();\r\n\r\n      await this.historyService.updateTaskHistory(history);\r\n\r\n      // console.log('NOTE UPDATED', JSON.stringify(history));\r\n\r\n      // TODO : We need to update the cardViewModels that changed\r\n    };\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getEditNoteAlertOptions(handler, note.text);\r\n    const alert = await this.alertCtrl.create(alertOptions);\r\n\r\n    await alert.present();\r\n\r\n    this.setBackButtonAlert(alert);\r\n    await alert.onDidDismiss();\r\n    this.resetBackButton();\r\n  }\r\n\r\n  public async closePopup(): Promise<void> {\r\n    await this.modalController.dismiss(false, null, ModalService.ModalIds.Notes);\r\n  }\r\n\r\n  public initializeFilters() {\r\n    for (const task of this.calendarTaskService.getAllTasks()) {\r\n      for (const history of task.Histories) {\r\n        if (history.Comment != null) {\r\n          const filter = new TaskFilterViewModel();\r\n          filter.calendarTaskId = task.CalendarTaskId;\r\n          filter.isChecked = false;\r\n          filter.Name = task.Name;\r\n          this.taskFilters.push(filter);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public initializeAllNotes() {\r\n    this.allNotes = [];\r\n\r\n    for (const task of this.calendarTaskService.getAllTasks()) { // TODO : Might need to sort ?\r\n      for (const history of task.Histories) {\r\n        if (history.Comment != null) {\r\n          const note = new NoteViewModel();\r\n          if (history.DoneWorkDate == null) {\r\n            // console.log('+++++++ workdatedone is null');\r\n            continue;\r\n          }\r\n          note.date = history.DoneWorkDate;\r\n          note.dateText = DateUtils.getLocalMysqlDateString(history.DoneWorkDate); // TODO: Use Datepipe instead ?\r\n          note.historyId = history.TaskHistoryId;\r\n          note.taskName = task.Name;\r\n          note.calendarTaskId = task.CalendarTaskId;\r\n          note.text = history.Comment;\r\n          note.result = this.calendarTaskService.getTaskResultFromHistory(task, history);\r\n          note.showCheckedBox = this.calendarTaskService.isDoneAtDate(task, note.date, history) &&\r\n                                task.isBinary();\r\n\r\n          if (!note.showCheckedBox) {\r\n            note.showBrokenHeart = this.calendarTaskService.isSkipped(history);\r\n          } else {\r\n            note.showBrokenHeart = false;\r\n          }\r\n\r\n          note.showText = this.calendarTaskService.isDone(task, history) &&\r\n                          !task.isBinary();\r\n\r\n          this.allNotes.push(note);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public async setFilteredNotes(): Promise<void> {\r\n    /*const loading = await this.loadingController.create({\r\n      message: this.translate.instant('note-list.loading-filters'),\r\n    });\r\n    loading.present();*/\r\n\r\n    const startTime = this.startDate.getTime();\r\n    const endTime = this.endDate.getTime();\r\n\r\n    // console.log('SETTING FILTERED NOTES', this.startDate, this.endDate);\r\n\r\n    const calendarTaskIdsSelected: string[] = [];\r\n\r\n    for (const taskFilter of this.taskFilters) {\r\n      if (taskFilter.isChecked) {\r\n        calendarTaskIdsSelected.push(taskFilter.calendarTaskId);\r\n      }\r\n    }\r\n\r\n    if (this.keywordSearch.length > 0) {\r\n      if (calendarTaskIdsSelected.length > 0) { // Keyword and tasks selected\r\n        this.filteredNotes = this.allNotes.filter(p => p.date.getTime() >= startTime &&\r\n                                                       p.date.getTime() <= endTime &&\r\n                                                       calendarTaskIdsSelected.some(t => t === p.calendarTaskId) &&\r\n                                                       p.text.includes(this.keywordSearch));\r\n      } else { // Keyword and no task selected\r\n        this.filteredNotes = this.allNotes.filter(p => p.date.getTime() >= startTime &&\r\n                                                     p.date.getTime() <= endTime &&\r\n                                                     p.text.includes(this.keywordSearch));\r\n      }\r\n    } else { // No keyword selected\r\n      this.filteredNotes = this.allNotes.filter(p => p.date.getTime() >= startTime &&\r\n                                                       p.date.getTime() <= endTime &&\r\n                                                       calendarTaskIdsSelected.some(t => t === p.calendarTaskId));\r\n    }\r\n\r\n    // loading.dismiss();\r\n\r\n    // console.log('FILTERED NOTES : ', this.filteredNotes);\r\n  }\r\n\r\n  private setBackButtonAlert(alert: HTMLIonAlertElement) {\r\n    this.backButtonSubscription.unsubscribe();\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await alert.dismiss();\r\n    });\r\n  }\r\n\r\n  private resetBackButton() {\r\n    if (this.backButtonSubscription != null) {\r\n      this.backButtonSubscription.unsubscribe();\r\n    }\r\n\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await this.closePopup();\r\n    });\r\n  }\r\n}\r\n\r\nexport class NoteViewModel {\r\n  public historyId: string;\r\n  public text: string;\r\n  public dateText: string;\r\n  public date: Date;\r\n  public taskName: string;\r\n  public calendarTaskId: string;\r\n  public result: string;\r\n  public showBrokenHeart: boolean;\r\n  public showText: boolean;\r\n  public showCheckedBox: boolean;\r\n}\r\n\r\nexport class TaskFilterViewModel {\r\n  public calendarTaskId: string;\r\n  public Name: string;\r\n  public isChecked: boolean;\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ModalController, Platform } from '@ionic/angular';\r\nimport { Subscription } from 'rxjs';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-privacy',\r\n  templateUrl: './privacy.component.html',\r\n  styleUrls: ['./privacy.component.scss'],\r\n})\r\nexport class PrivacyComponent implements OnInit, OnDestroy {\r\n\r\n  private backButtonSubscription: Subscription;\r\n\r\n  constructor(private modalController: ModalController,\r\n              private platform: Platform) { }\r\n\r\n  ngOnInit() {\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await this.closePopup();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.backButtonSubscription.unsubscribe();\r\n  }\r\n\r\n  public async closePopup(): Promise<void> {\r\n    await this.modalController.dismiss(null, null, ModalService.ModalIds.Privacy);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ModalController, LoadingController, Platform } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DTOBugReport } from 'src/app/models/DTO/dto-bug-report';\r\nimport { BugReportType } from 'src/app/models/Core/bug-report-type.enum';\r\nimport { BugReportService } from 'src/app/services/bug-report.service';\r\nimport { ILogger } from 'src/app/interfaces/i-logger';\r\nimport { Subscription } from 'rxjs';\r\nimport { IUserService } from 'src/app/interfaces/i-user-service';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\nimport ThreadUtils from 'src/app/shared/thread.utils';\r\nimport { timeout } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'app-send-feedback',\r\n  templateUrl: './send-feedback.component.html',\r\n  styleUrls: ['./send-feedback.component.scss'],\r\n})\r\nexport class SendFeedbackComponent implements OnInit, OnDestroy {\r\n\r\n  constructor(private modalController: ModalController,\r\n              private loadingController: LoadingController,\r\n              private translate: TranslateService,\r\n              private bugReportService: BugReportService,\r\n              private userService: IUserService,\r\n              private logger: ILogger,\r\n              private platform: Platform) { }\r\n\r\n  public bugReport: DTOBugReport;\r\n  public showBugsTab: boolean;\r\n  public showSurveyTab: boolean;\r\n  public showSupportTab: boolean;\r\n\r\n  private backButtonSubscription: Subscription;\r\n\r\n  ngOnInit() {\r\n    this.bugReport = new DTOBugReport();\r\n    this.bugReport.BugReportType = BugReportType.Bug;\r\n\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await this.modalController.dismiss(null, null, ModalService.ModalIds.Feedback);\r\n    });\r\n\r\n    this.showSurveyTab = true;\r\n    this.showBugsTab = false;\r\n    this.showSupportTab = false;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.backButtonSubscription.unsubscribe();\r\n  }\r\n\r\n  public async btnSendClick() {\r\n    if (this.bugReport.Title == null || this.bugReport.Title.length < 10) {\r\n      alert(this.translate.instant('menu.title-too-short'));\r\n      return;\r\n    }\r\n\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('menu.sending-feedback'),\r\n    });\r\n    loading.present();\r\n\r\n    this.bugReport.UserId = await this.userService.getCurrentUserId();\r\n    this.bugReport.InsertDate = new Date();\r\n    const response = await this.bugReportService.SendReport(this.bugReport);\r\n    loading.dismiss();\r\n    if (response === true) {\r\n      await this.modalController.dismiss(null, null, ModalService.ModalIds.Feedback);\r\n      return;\r\n    } else {\r\n      this.logger.logEvent('Bug report failed');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async btnCancelClick() {\r\n    // this.logger.logDebug('Cancelclick');\r\n    await this.modalController.dismiss(null, null, ModalService.ModalIds.Feedback);\r\n  }\r\n\r\n  public async feedbackTypeChanged(data: any) {\r\n    if (data.detail.value === 'bug') {\r\n      this.bugReport.BugReportType = BugReportType.Bug;\r\n      this.showBugsTab = true;\r\n      this.showSurveyTab = false;\r\n      this.showSupportTab = false;\r\n\r\n      // Select first input\r\n      try {\r\n        const firstInput: any = document.querySelector('ion-modal input');\r\n        // console.log('firstinput:', firstInput);\r\n        setTimeout(() => {\r\n          firstInput.focus();\r\n        }, 250);\r\n      } catch (error) {\r\n        // console.log('error', error);\r\n        this.logger.logError(error);\r\n      }\r\n    } else if (data.detail.value === 'feedback') {\r\n      this.bugReport.BugReportType = BugReportType.Survey;\r\n      this.showSurveyTab = true;\r\n      this.showBugsTab = false;\r\n      this.showSupportTab = false;\r\n    } else {\r\n      this.bugReport.BugReportType = BugReportType.Support;\r\n      this.showSurveyTab = false;\r\n      this.showBugsTab = false;\r\n      this.showSupportTab = true;\r\n    }\r\n  }\r\n\r\n  public btnSurveyClick() {\r\n    window.open('https://www.surveymonkey.com/r/JD8K3N5', '_system');\r\n  }\r\n\r\n  public async btnSupportClick() {\r\n    window.open('mailto:hypertaskhelp@gmail.com', '_system');\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MenuController, LoadingController, AlertController, Platform, ModalController } from '@ionic/angular';\r\nimport { environment } from 'src/environments/environment';\r\nimport { ChangelogService } from 'src/app/services/changelog.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { TimerService } from 'src/app/services/timer.service';\r\nimport { DataSyncServerService } from 'src/app/services/data-sync-server-service';\r\nimport { UserConfig } from 'src/app/models/Core/user-config';\r\nimport { EventService, EventData } from 'src/app/services/event.service';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\nimport { CancellationToken } from 'src/app/services/data-sync-2.service';\r\nimport { ILocalStorageService } from 'src/app/interfaces/i-local-storage-service';\r\nimport { ILogger } from 'src/app/interfaces/i-logger';\r\nimport { IDataSyncLocalService } from 'src/app/interfaces/i-data-sync-local-service';\r\nimport { IUserService } from 'src/app/interfaces/i-user-service';\r\nimport { SendFeedbackComponent } from '../send-feedback/send-feedback.component';\r\nimport { NoteListComponent } from '../note-list/note-list.component';\r\nimport { TaskSelectionComponent } from '../task-selection/task-selection.component';\r\nimport { UserSettingsComponent } from '../user-settings/user-settings.component';\r\nimport { PrivacyComponent } from '../privacy/privacy.component';\r\nimport { DebugLogComponent } from '../debug-log/debug-log.component';\r\nimport { GroupListComponent } from '../group-list/group-list.component';\r\nimport { TermsComponent } from '../terms/terms.component';\r\n\r\n@Component({\r\n  selector: 'app-side-menu',\r\n  templateUrl: './side-menu.component.html',\r\n  styleUrls: ['./side-menu.component.scss'],\r\n})\r\nexport class SideMenuComponent implements OnInit, OnDestroy {\r\n  public appVersionText: string = '';\r\n  public packageName: string = '';\r\n  public versionCode: string | number = '';\r\n  public appName: string = '';\r\n  public showCheckForUpdateBtn: boolean = false;\r\n  public showViewChangelogBtn: boolean = false;\r\n  public showDevMode: boolean = false;\r\n  public showRefresh: boolean = false;\r\n\r\n  private backButtonSubscription: Subscription;\r\n\r\n  constructor(private menu: MenuController,\r\n              private local: ILocalStorageService,\r\n              private loadingController: LoadingController,\r\n              private alertCtrl: AlertController,\r\n              private logger: ILogger,\r\n              //private appVersion: AppVersion,\r\n              private platform: Platform,\r\n              //private appUpdate: AppUpdate,\r\n              private changeLog: ChangelogService,\r\n              private translate: TranslateService,\r\n              private modalController: ModalController,\r\n              private serverDataSync: DataSyncServerService,\r\n              private localDataSync: IDataSyncLocalService,\r\n              private userService: IUserService,\r\n              private timerService: TimerService,\r\n              private eventService: EventService,\r\n              private modalService: ModalService) { }\r\n\r\n  async ngOnInit() {\r\n    try {\r\n      // console.log('[ SIDE MENU AFTER INIT STARTED ]', new Date().toISOString());\r\n      /*console.log('%%%% LOADING SIDE Menu, WAITING FOR PLATFORM %%%% ' + new Date().toISOString(),\r\n                  JSON.stringify(UserService.currentUser), UserService.currentUserId);*/\r\n      await this.platform.ready();\r\n      // console.log('%%%% LOADING SIDE Menu, WAITING FOR USER %%%% ' + new Date().toISOString());\r\n      await this.userService.awaitUserReady(true);\r\n      // console.log('%%%% USER READY Side Menu %%%%', UserService.currentUser, UserService.currentUserId);\r\n      this.showViewChangelogBtn = true;\r\n      \r\n      /*if (this.platform.is('cordova')) { //TODO : CAPACITOR\r\n        this.showCheckForUpdateBtn = true;\r\n        this.appVersionText = await this.appVersion.getVersionNumber();\r\n        this.versionCode = await this.appVersion.getVersionCode();\r\n        this.appName = await this.appVersion.getAppName();\r\n        this.packageName = await this.appVersion.getPackageName();\r\n      }*/\r\n\r\n      this.backButtonSubscription = this.platform.backButton.subscribe(() => {\r\n        this.menu.close();\r\n      });\r\n\r\n      //const userId = await this.userService.getCurrentUserId();\r\n      // if (userId === 'Hwnf3hxuFjgIai5QxvyDNdsCZFB2' || userId === 'Ashvg7vzEhOL7gdZDeVBHzbYp4C2') {\r\n        // console.log('DEV MODE ENABLED');\r\n      this.showDevMode = true; // TODO : Deactivate for prod\r\n      // }\r\n\r\n      // Show Refresh if user syncs to cloud\r\n      // console.log('ENABLE1');\r\n      if (this.userService.getConfig(UserConfig.EnableCloudSyncKey) === true) {\r\n        this.showRefresh = true;\r\n      }\r\n\r\n      // console.log('[ SIDE MENU AFTER INIT ENDED ]', new Date().toISOString());\r\n\r\n    } catch (error) {\r\n      // console.log('error01', error);\r\n      this.logger.logError(error);\r\n      alert(this.translate.instant('menu.error-version'));\r\n      alert(error);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.backButtonSubscription.unsubscribe();\r\n  }\r\n\r\n  public btnCloseMenuClick(): void {\r\n    this.menu.close();\r\n  }\r\n\r\n  public async btnReloadFromServerClick(): Promise<void> {\r\n    //console.log('RELOADING STARTING');\r\n    // console.log('refresh');\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('menu.reloading-tasks'),\r\n      id: 'reload-server'\r\n    });\r\n    await loading.present();\r\n\r\n    let canReloadDataSynced = await this.serverDataSync.allDataIsSynced();\r\n    let canReloadTimerOn = !this.timerService.anyTimerOn();\r\n\r\n    // console.log('canReloadDataSynced', canReloadDataSynced);\r\n    // console.log('canReloadTimerOn', canReloadTimerOn);\r\n\r\n    if (canReloadDataSynced === false) {\r\n      await loading.dismiss();\r\n      // console.log('refresh2');\r\n      canReloadDataSynced = await this.showReloadConfirmationDataSyncAlert();\r\n      if (canReloadDataSynced === false) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    if (canReloadTimerOn === false) {\r\n      this.logger.logDebug('STILL TIMERS : ',\r\n        JSON.stringify(this.timerService.allTimers.filter(p => p.isDone === false &&\r\n                                                               p.isPaused === false)));\r\n\r\n      await loading.dismiss();\r\n        // console.log('refresh3');\r\n      canReloadTimerOn = await this.showReloadConfirmationTimerAlert();\r\n      if (canReloadTimerOn === false) {\r\n        return;\r\n      } else {\r\n        await loading.present();\r\n      }\r\n    }\r\n\r\n    await this.reloadAllTasks();\r\n    await loading.dismiss();\r\n\r\n    // console.log('RELOADING DONE');\r\n  }\r\n\r\n  public async btnSendDataToServerClick(): Promise<void> {\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('menu.msg-sending-tasks'),\r\n      id: 'upload-server'\r\n    });\r\n    await loading.present();\r\n              \r\n    this.eventService.emit(new EventData(EventService.EventIds.SyncRequired, null));\r\n\r\n    await loading.dismiss();\r\n  }\r\n\r\n  public async btnLogoutClick(): Promise<void> {\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('menu.msg-logging-out')\r\n    });\r\n    await loading.present();\r\n    this.logger.logDebug('logoutClick, terminating', new Date().toISOString());\r\n    await this.local.terminate();\r\n    DataSyncServerService.GetLatestInvalid = true;\r\n    this.logger.logDebug('terminated', new Date().toISOString());\r\n    await this.userService.logout();\r\n    this.logger.logDebug('logged out', new Date().toISOString());\r\n    location.reload();\r\n  }\r\n\r\n  public async btnShowDebugLogs(): Promise<void> {\r\n    await this.modalService.showLogsModal(DebugLogComponent); //TODO COMPONENT\r\n  }\r\n\r\n  public btnExitAppClick(): void {\r\n    const appString = 'app';\r\n    navigator[appString].exitApp();\r\n  }\r\n\r\n  public async btnCheckForUpdateClick(): Promise<void> {\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('menu.checking-update'),\r\n    });\r\n\r\n    const updateUrl = environment.apiUpdateXmlUrl;\r\n\r\n    try {\r\n      await loading.present();\r\n      /*const result = await this.appUpdate.checkAppUpdate(updateUrl); TODO CAPACITOR\r\n      alert(this.translate.instant('menu.update-successful') + ' : ' + result.msg);*/\r\n    } catch (error) {\r\n      // console.log('error02');\r\n      this.logger.logError(error);\r\n      alert(this.translate.instant('menu.update-failed'));\r\n      alert(error.msg);\r\n    } finally {\r\n      await loading.dismiss();\r\n    }\r\n  }\r\n\r\n  public async btnChangeLogClick(): Promise<void> {\r\n    this.changeLog.showAllChangeLogs();\r\n  }\r\n\r\n  public async btnBugReportClick(): Promise<void> {\r\n    await this.modalService.showFeedbackModal(SendFeedbackComponent);\r\n  }\r\n\r\n  public async btnNoteClick(): Promise<void> {\r\n    await this.modalService.showNotesModal(NoteListComponent);\r\n  }\r\n\r\n  public async btnSelectNewTasksClick(): Promise<void> {\r\n    await this.modalService.showTaskSelectionModal(TaskSelectionComponent);\r\n  }\r\n\r\n  public async btnUserSettingsClick() {\r\n    await this.modalService.showUserSettingsModal(UserSettingsComponent);\r\n  }\r\n\r\n  public async btnPrivacyClick() {\r\n    await this.modalService.showPrivacyModal(PrivacyComponent);\r\n  }\r\n\r\n  public async btnResetLocalDatabase() {\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('menu.clear-database'),\r\n    });\r\n    await loading.present();\r\n\r\n    await this.local.clear();\r\n\r\n    await loading.dismiss();\r\n  }\r\n\r\n  public async btnTermsClick() {\r\n    await this.modalService.showTermsModal(TermsComponent);\r\n  }\r\n\r\n  public async btnShowUnsyncedData() {\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('menu.msg-loading-unsynced-data')\r\n    });\r\n    await loading.present();\r\n    const localData = await this.serverDataSync.getUnsynchronized();\r\n    await loading.dismiss();\r\n    alert('LOCAL DATA : ' + localData);\r\n\r\n    // console.log('LOCAL DATA : ', localData);\r\n    \r\n    await loading.present();\r\n    const queueData = await this.localDataSync.getUnsynchronized();\r\n    await loading.dismiss();\r\n\r\n    // console.log('QUEUE DATA : ', queueData);\r\n    alert('QUEUE DATA : ' + queueData);\r\n  }\r\n\r\n  public async btnResumeClick() {\r\n    this.eventService.emit(new EventData(EventService.EventIds.Resume, null));\r\n  }\r\n\r\n  public async btnCalendarClick() {\r\n    /*const modal = await this.modalController.create({\r\n      component: CalendarModeComponent, TODO component\r\n      backdropDismiss: false,\r\n    });\r\n\r\n    modal.present();\r\n    await modal.onDidDismiss();*/\r\n  }\r\n\r\n  public emptyStorage(): void {\r\n    this.local.clear();\r\n  }\r\n\r\n  public async btnTaskGroupsClick() {\r\n    await this.modalService.showGroupsModal(GroupListComponent);\r\n  }\r\n\r\n  public async btnWalkthroughClick() {\r\n    this.eventService.emit(new EventData(EventService.EventIds.Walkthrough, null));\r\n    this.menu.close();\r\n  }\r\n\r\n  private async reloadAllTasks(): Promise<void> {\r\n    console.log(\"reloading all tasks from server\");\r\n    this.logger.logEvent('reloading all tasks from server');\r\n    try {\r\n      await this.serverDataSync.reloadAllGroupsAndTasksServer(new CancellationToken());\r\n      this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, null));\r\n      this.menu.close();\r\n    } catch (error) {\r\n      this.logger.logError(new Error('Unable to reload tasks from server : ' + error.message));\r\n      alert(this.translate.instant('menu.unable-to-reload'));\r\n    }\r\n  }\r\n\r\n  private async showReloadConfirmationDataSyncAlert(): Promise<boolean> {\r\n    let resolveFunction: (confirm: boolean) => void;\r\n    const promise = new Promise<boolean>(resolve => {\r\n      resolveFunction = resolve;\r\n    });\r\n    const alert = await this.alertCtrl.create({\r\n      message: this.translate.instant('alert.msg-unsynchronised'),\r\n      backdropDismiss: false,\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-no'),\r\n          handler: () => resolveFunction(false)\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-yes'),\r\n          handler: () => resolveFunction(true)\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n    return promise;\r\n  }\r\n\r\n  private async showReloadConfirmationTimerAlert(): Promise<boolean> {\r\n    let resolveFunction: (confirm: boolean) => void;\r\n    const promise = new Promise<boolean>(resolve => {\r\n      resolveFunction = resolve;\r\n    });\r\n    const alert = await this.alertCtrl.create({\r\n      message: this.translate.instant('alert.msg-timers'),\r\n      backdropDismiss: false,\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-no'),\r\n          handler: () => resolveFunction(false)\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-yes'),\r\n          handler: () => resolveFunction(true)\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n    return promise;\r\n  }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CalendarTask } from 'src/app/models/Core/calendar-task';\r\nimport { TaskCardViewModel } from '../TaskCard/task-card/task-card-viewmodel';\r\nimport { PopoverController } from '@ionic/angular';\r\nimport { EventData, EventService } from 'src/app/services/event.service';\r\n\r\n@Component({\r\n  selector: 'app-skips-popover',\r\n  templateUrl: './skips-popover.component.html',\r\n  styleUrls: ['./skips-popover.component.scss'],\r\n})\r\nexport class SkipsPopoverComponent implements OnInit {\r\n\r\n  @Input() currentTask: CalendarTask;\r\n  @Input() viewModel: TaskCardViewModel;\r\n  @Input() daysInARow: number;\r\n\r\n  constructor(private popoverController: PopoverController,\r\n              private eventService: EventService) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  public btnCancelClick() {\r\n    this.popoverController.dismiss();\r\n  }\r\n\r\n  public btnYesClick() {\r\n    this.eventService.emit(new EventData(EventService.EventIds.SkipTask + this.currentTask.CalendarTaskId, null));\r\n    this.popoverController.dismiss();\r\n  }\r\n\r\n  public btnPostponeClick() {\r\n    this.eventService.emit(new EventData(EventService.EventIds.PostponeTask + this.currentTask.CalendarTaskId, null));\r\n    this.popoverController.dismiss();\r\n  }\r\n\r\n  public btnEnableNotificationsClick() {\r\n    this.popoverController.dismiss();\r\n  }\r\n\r\n  public btnDeleteClick() {\r\n    // confirmation\r\n    this.eventService.emit(new EventData(EventService.EventIds.DeleteTask + this.currentTask.CalendarTaskId, null));\r\n    this.popoverController.dismiss();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\r\nimport { CalendarTask } from 'src/app/models/Core/calendar-task';\r\nimport { CalendarTaskService } from 'src/app/services/calendar-task.service';\r\nimport { ModalController, LoadingController, Platform, AlertController, PickerController, NavController, NavParams } from '@ionic/angular';\r\nimport { DayOfWeek } from 'src/app/models/Core/day-of-week.enum';\r\nimport { FormatDayOfWeekPipe } from 'src/app/pipes/format-dayofweek-pipe';\r\nimport { TaskFrequency } from 'src/app/models/Core/task-frequency.enum';\r\nimport DateUtils from 'src/app/shared/date-utils';\r\nimport { AlertOptions } from '@ionic/core';\r\nimport { DatePipe } from '@angular/common';\r\nimport { InvalidCalendarTaskError } from 'src/app/models/Exceptions/InvalidCalendarTaskError';\r\nimport { ILogger } from 'src/app/interfaces/i-logger';\r\nimport { Subscription } from 'rxjs';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport NumberUtils from 'src/app/shared/number-utils';\r\nimport { IUserService } from 'src/app/interfaces/i-user-service';\r\nimport { Ionic4DatepickerModalComponent } from '@logisticinfotech/ionic4-datepicker';\r\nimport { DateService } from 'src/app/services/date.service';\r\nimport { UserConfig } from 'src/app/models/Core/user-config';\r\nimport { TaskGroup } from 'src/app/models/Core/task-group';\r\nimport { ResultType } from 'src/app/models/Core/result-type.enum';\r\nimport { GroupCreateComponent } from '../group-create/group-create.component';\r\nimport { EventData, EventService } from 'src/app/services/event.service';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-task-create',\r\n  templateUrl: './task-create.component.html',\r\n  styleUrls: ['./task-create.component.scss'],\r\n})\r\nexport class TaskCreateComponent implements OnInit, OnDestroy, AfterViewInit {\r\n\r\n  private hourChoices: string[] = ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11',\r\n                                   '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'];\r\n\r\n  public currentTask: CalendarTask;\r\n  public selectedPositive: string = '0';\r\n  public otherTasks: CalendarTask[]; /* Required in order to select the AbsolutePosition */\r\n  public selectedAfterTask: CalendarTask; /* ngModel of the AbsolutePosition property */\r\n  public selectedGroup: TaskGroup;\r\n  public groups: TaskGroup[];\r\n\r\n  public assignedDatePicked: string;\r\n  public currentAssignedDateString: string;\r\n\r\n  public showRequiredDays: boolean;\r\n  public showAssignedDate: boolean;\r\n  public showReccuringFrequency: boolean;\r\n  public showSetToTomorrow: boolean = true;\r\n  public showOnceSubType: boolean;\r\n  public showSingleDay: boolean;\r\n  private backButtonSubscription: Subscription;\r\n  private recurringSelected: boolean;\r\n  private onceSelected: boolean;\r\n  public notificationEnabled: boolean;\r\n  public notificationTimeValue: string;\r\n  public preSelectedGroupId: string = \"\";\r\n  public recurringValue: string = \"Recurring\";\r\n\r\n  private datePickerObj: any = {};\r\n\r\n  public selectedResultTypeCaption: string;\r\n  private resultTypeCaptions = [\r\n    this.translate.instant('create-task.select-binary'),\r\n    this.translate.instant('create-task.select-decimal'),\r\n    this.translate.instant('create-task.select-time-of-day'),\r\n    this.translate.instant('create-task.select-time-duration')\r\n  ];\r\n\r\n  public daysOfWeek: DayOfWeek[] = [\r\n    DayOfWeek.Monday,\r\n    DayOfWeek.Tuesday,\r\n    DayOfWeek.Wednesday,\r\n    DayOfWeek.Thursday,\r\n    DayOfWeek.Friday,\r\n    DayOfWeek.Saturday,\r\n    DayOfWeek.Sunday\r\n  ];\r\n\r\n  constructor(\r\n    private calendarTaskService: CalendarTaskService,\r\n    private modalController: ModalController,\r\n    private logger: ILogger,\r\n    private loadingController: LoadingController,\r\n    public formatDayOfWeekPipe: FormatDayOfWeekPipe,\r\n    private datepipe: DatePipe,\r\n    private platform: Platform,\r\n    private translate: TranslateService,\r\n    private userService: IUserService,\r\n    private alertService: AlertService,\r\n    private alertCtrl: AlertController,\r\n    private dateService: DateService,\r\n    private pickerCtrl: PickerController,\r\n    private eventService: EventService,\r\n    private modalService: ModalService,\r\n    public navCtrl: NavController,\r\n    public navParams: NavParams) { \r\n      this.preSelectedGroupId = navParams.get(\"preSelectedGroupId\");\r\n      //console.log('PRESELECTED GROUPID = ' + this.preSelectedGroupId);\r\n    }\r\n\r\n  async ngOnInit() {\r\n    // console.log('CREATE ON INIT START', new Date().toISOString());\r\n    this.currentTask = new CalendarTask();\r\n    this.currentTask.RequiredDays = this.daysOfWeek;\r\n    this.recurringSelected = true;\r\n    this.onceSelected = false;\r\n    this.groups = this.calendarTaskService.allGroups.filter(p => p.Void === false);\r\n    await this.initializeGroup();\r\n    await this.initializeOtherTasks();\r\n    this.assignedDatePicked = new Date().toISOString();\r\n    this.setShownComponents();\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await this.closePopup();\r\n    });\r\n\r\n    const todayDate = this.dateService.GetTodayWorkDate();\r\n    const result = this.datepipe.transform(todayDate, 'yyyy-MM-dd');\r\n    this.currentAssignedDateString = result;\r\n    this.currentTask.AssignedDate = todayDate;\r\n\r\n    this.selectedResultTypeCaption = this.resultTypeCaptions[0];\r\n\r\n    // console.log('TASK CREATE GROUPS', this.groups);\r\n\r\n    this.notificationEnabled = false;\r\n    this.notificationTimeValue = '12:00';\r\n\r\n    // console.log('CREATE ON INIT ENDED', new Date().toISOString());\r\n\r\n    this.setToLast();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.backButtonSubscription.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // console.log('CREATE AFTER VIEW INIT', new Date().toISOString());\r\n  }\r\n\r\n  public async btnSaveClick(): Promise<void> {\r\n\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('create-task.saving-new-task'),\r\n    });\r\n    await loading.present();\r\n\r\n    if (this.recurringSelected === true) {\r\n      this.currentTask.Frequency = TaskFrequency.Daily;\r\n    } else {\r\n      if (this.onceSelected === true) {\r\n        this.currentTask.Frequency = TaskFrequency.Once;\r\n      } else {\r\n        this.currentTask.Frequency = TaskFrequency.UntilDone;\r\n      }\r\n    }\r\n\r\n    try {\r\n      this.currentTask.validate(this.translate);\r\n    } catch (error) {\r\n      if (error instanceof InvalidCalendarTaskError) {\r\n        // console.log('error03');\r\n        this.logger.logError(new Error('invalidcalendartaskerror'), { key: 'error', value: JSON.stringify(error)});\r\n        alert(error.message);\r\n        await loading.dismiss();\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Validation 1\r\n    if (this.currentTask.Frequency !== TaskFrequency.Daily) {\r\n      this.currentTask.RequiredDays = [];\r\n    }\r\n\r\n    // Validation 2\r\n    if (this.currentTask.Frequency === TaskFrequency.Daily) {\r\n      this.currentTask.AssignedDate = null;\r\n    }\r\n\r\n    // Notifications\r\n    // console.log('notification enabled', this.notificationEnabled);\r\n    // console.log('notification id', this.currentTask.NotificationId);\r\n    if (this.notificationEnabled === true &&\r\n        (this.currentTask.NotificationId == null ||\r\n        Number.isNaN(this.currentTask.NotificationId))) {\r\n      // console.log('SETTING NOTIFICATION ID');\r\n      this.currentTask.NotificationId = Math.max(...this.calendarTaskService.getAllTasks()\r\n                                                        .filter(p => p.NotificationId < 1000000).map(p => p.NotificationId)) + 1;\r\n      if (Number.isNaN(this.currentTask.NotificationId)) {\r\n        this.currentTask.NotificationId = 1;\r\n        if (this.calendarTaskService.getAllTasks().filter(p => p.NotificationId === 1 && p.Void === false).length > 0) {\r\n          // 1 already exists\r\n          this.logger.logError(new Error('NotificationId = 1 already exists'));\r\n        }\r\n      } else {\r\n        this.logger.logDebug('SETTING NOTIFICATION TO ' + this.currentTask.NotificationId);\r\n      }\r\n    }\r\n\r\n    // console.log('NOTIFICATIONID=', this.currentTask.NotificationId);\r\n\r\n    this.currentTask.InsertDate = new Date();\r\n    this.currentTask.UpdateDate = new Date();\r\n    this.currentTask.UserId = await this.userService.getCurrentUserId();\r\n    this.currentTask.CalendarTaskId = NumberUtils.getRandomId(); // we need it in case we void it before syncing\r\n    this.currentTask.GroupId = this.selectedGroup.GroupId;\r\n\r\n    try {\r\n      const result = await this.calendarTaskService.insertCalendarTask(this.currentTask);\r\n\r\n      await loading.dismiss();\r\n      if (result === true) {\r\n        await this.modalController.dismiss(true, null, ModalService.ModalIds.CreateTask);\r\n        this.eventService.emit(new EventData(EventService.EventIds.NotificationSyncedFalse, null));\r\n        this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, true));\r\n      } else {\r\n        this.logger.logError(new Error('Unable to create new task, result is false'));\r\n        alert(this.translate.instant('create-task.saving-error'));\r\n      }\r\n      return;\r\n    } catch (error) {\r\n      await loading.dismiss();\r\n      this.logger.logError(new Error('Unable to create new task : ' + error.message));\r\n      alert(this.translate.instant('create-task.saving-error'));\r\n      return;\r\n    }\r\n  }\r\n\r\n  public cbDayOfWeek(event: any, dayOfWeek: number): void {\r\n    if (event.detail.checked) {\r\n      this.currentTask.RequiredDays.push(dayOfWeek);\r\n    } else {\r\n      this.currentTask.RequiredDays = this.currentTask.RequiredDays.filter(p => p.valueOf() !== dayOfWeek);\r\n    }\r\n  }\r\n\r\n  public absolutePositionChange(absolutePosition: number) {\r\n    this.currentTask.AbsolutePosition = absolutePosition + 1;\r\n  }\r\n\r\n  public setToFirst(): void {\r\n    this.currentTask.AbsolutePosition = 1;\r\n    this.selectedAfterTask = null;\r\n  }\r\n\r\n  public setToLast(): void {\r\n    if (this.otherTasks.length == 0) {\r\n      this.currentTask.AbsolutePosition = 1;\r\n      this.selectedAfterTask = null;\r\n    } else {\r\n      const max = this.otherTasks.reduce((oa, u) => Math.max(oa, u.AbsolutePosition), 0);\r\n      this.selectedAfterTask = this.otherTasks.filter((oa, u) => oa.AbsolutePosition == max, 0)[0];\r\n      this.currentTask.AbsolutePosition = max + 1;\r\n    }\r\n  }\r\n\r\n  public async closePopup(): Promise<void> {\r\n    await this.modalController.dismiss(false, null, ModalService.ModalIds.CreateTask);\r\n  }\r\n\r\n  public async btnAssignedDateClick() {\r\n    const data = await this.modalService.showAssignedDateModal(Ionic4DatepickerModalComponent, this.datePickerObj, this.currentTask);\r\n\r\n    if (data != null) {\r\n      const selectedDate = new Date(data.data.date);\r\n\r\n      if (!DateUtils.isValidDate(selectedDate)) { // standard cancel\r\n        return;\r\n      }\r\n\r\n      this.currentAssignedDateString = this.datepipe.transform(selectedDate, 'yyyy-MM-dd');\r\n      this.currentTask.AssignedDate = DateUtils.RemoveHours(selectedDate);\r\n    }\r\n  }\r\n\r\n  public async btnSetToTomorrow() {\r\n    this.currentTask.AssignedDate = DateUtils.AddDays(this.dateService.GetTodayWorkDate(), 1);\r\n    this.currentAssignedDateString = this.datepipe.transform(this.currentTask.AssignedDate, 'yyyy-MM-dd');\r\n    this.showSetToTomorrow = false;\r\n  }\r\n\r\n  public async selectResultType() {\r\n    const handlerOk: (alertData: any) => void = (alertData) => {\r\n      for (let i = 0 ; i < 4 ; i++) {\r\n        if (this.resultTypeCaptions[i] === alertData) {\r\n          this.currentTask.ResultType = i as ResultType;\r\n          this.selectedResultTypeCaption = this.resultTypeCaptions[i];\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    const handlerCancel: (alertData: any) => void = (alertData) => {\r\n      return;\r\n    };\r\n\r\n    // TODO: Implement a default result type\r\n    /*const handlerSetAsDefault: (alertData: any) => void = (alertData) => {\r\n      this.selectedGroup = this.groups.filter(p => p.Name === alertData)[0];\r\n      this.selectedAfterTask = null;\r\n\r\n      console.log('SETTING AS DEFAULT', this.selectedGroup);\r\n\r\n      if (this.recurringSelected) {\r\n        this.userService.setDefaultRecurringGroupId(this.selectedGroup.GroupId);\r\n      } else {\r\n        this.userService.setDefaultNonRecurringGroupId(this.selectedGroup.GroupId);\r\n      }\r\n\r\n      // this.selectedGroup = this.groups.filter(p => p.Name === alertData)[0];\r\n    };*/\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getChangeResultTypeOptions(handlerOk,\r\n                                                                                    handlerCancel,\r\n                                                                                    // handlerSetAsDefault,\r\n                                                                                    this.resultTypeCaptions,\r\n                                                                                    this.selectedResultTypeCaption);\r\n    const alert = await this.alertCtrl.create(alertOptions);\r\n    await alert.present();\r\n\r\n    this.setBackButtonAlert(alert);\r\n    await alert.onDidDismiss();\r\n    this.resetBackButton();\r\n  }\r\n\r\n  public async btnNotificationEnterTimeClick(): Promise<void> {\r\n    const picker = await this.pickerCtrl.create({\r\n      columns: this.getNotificationColumns(),\r\n      cssClass: 'time-picker',\r\n      animated: false,\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-cancel'),\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-ok'),\r\n          handler: (value) => {\r\n            const hourString = Number(value.Hours.value) > 9 ?\r\n                                 value.Hours.value :\r\n                                 '0' + value.Hours.value;\r\n\r\n            const minutesString = Number(value.Minutes.value) > 9 ?\r\n                                 value.Minutes.value :\r\n                                 '0' + value.Minutes.value;\r\n\r\n            this.notificationTimeValue = hourString + ':' + minutesString;\r\n\r\n            this.currentTask.NotificationTime = this.notificationTimeValue;\r\n            if (this.currentTask.NotificationId == null) {\r\n              this.currentTask.NotificationId = Math.max(...this.calendarTaskService.getAllTasks().map(p => p.NotificationId)) + 1;\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await picker.present();\r\n\r\n    this.setBackButtonPicker(picker);\r\n    await picker.onDidDismiss();\r\n    this.resetBackButton();\r\n  }\r\n\r\n  private getNotificationColumns() {\r\n    const currentHour = Number(this.notificationTimeValue.substring(0, 2));\r\n    // console.log('CURRENT HOUR', currentHour);\r\n    // const currentMinutes = Number(currentSelection.substring(3, 3 + 2));\r\n    const HourIndex = this.hourChoices.findIndex(p => Number(p) === currentHour);\r\n    // console.log('CURRENT HourIndex', HourIndex, this.hourChoices);\r\n\r\n    const MinuteIndex = 0;\r\n    const columns = [];\r\n\r\n    columns.push({\r\n      name: 'Hours',\r\n      selectedIndex: HourIndex,\r\n      options: this.getColumnOptions1(),\r\n    });\r\n\r\n    columns.push({\r\n      name: 'Minutes',\r\n      selectedIndex: MinuteIndex,\r\n      options: this.getColumnOptions2()\r\n    });\r\n\r\n    // console.log('columns');\r\n\r\n    return columns;\r\n  }\r\n\r\n  private getColumnOptions1() {\r\n    const options = [];\r\n    for (const hourValue of this.hourChoices) {\r\n      options.push({\r\n        text: hourValue,\r\n        value: Number(hourValue)\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  private getColumnOptions2() {\r\n    const options = [];\r\n    for (const minuteValue of UserConfig.getMinutesValues()) {\r\n      options.push({\r\n        text: minuteValue,\r\n        value: Number(minuteValue)\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  public async recurringChanged(event: any, isOnce: any) {\r\n    if (event != null && event.detail.value == '') {\r\n      return;\r\n    }\r\n\r\n    console.log('recurringChanged isOnce', event, isOnce);\r\n    if ((event != null && event.detail.value === 'Once') || isOnce === true) {\r\n      console.log('recurringChanged isOnce true');\r\n      this.showAssignedDate = true;\r\n      this.showReccuringFrequency = false;\r\n      this.showRequiredDays = false;\r\n      this.showSingleDay = true;\r\n      this.recurringSelected = false;\r\n\r\n      // Get default group\r\n      const defaultGroupId = this.userService.getConfig(UserConfig.DefaultNonRecurringGroupId);\r\n      const defaultAfterTaskName = this.userService.getConfig(UserConfig.DefaultNonRecurringAfterTaskNameKey);\r\n      await this.changeToDefaultGroup(defaultGroupId, defaultAfterTaskName);\r\n      \r\n      this.recurringSelected = this.selectedGroup.RecurringDefault !== false;\r\n      //this.onceSelected = this.selectedGroup.RecurringDefault === false;\r\n    } else {\r\n      console.log('recurring false value : ', this.recurringValue, isOnce);\r\n      this.showAssignedDate = false;\r\n      this.showReccuringFrequency = true;\r\n      this.showRequiredDays = true;\r\n      this.showSingleDay = false;\r\n      this.recurringSelected = true;\r\n\r\n      const defaultGroupId = this.userService.getConfig(UserConfig.DefaultRecurringGroupId);\r\n      const defaultAfterTaskName = this.userService.getConfig(UserConfig.DefaultRecurringAfterTaskNameKey);\r\n      await this.changeToDefaultGroup(defaultGroupId, defaultAfterTaskName);\r\n      \r\n      this.recurringSelected = this.selectedGroup.RecurringDefault !== false;\r\n      //this.onceSelected = this.selectedGroup.RecurringDefault === false;\r\n    }\r\n  }\r\n\r\n  private async changeToDefaultGroup(defaultGroupId: any, defaultAfterTaskName: any) {\r\n\r\n    // PRESELECTED GROUP\r\n    if (this.preSelectedGroupId != \"\") {\r\n      this.selectedGroup = this.calendarTaskService.getGroup(this.preSelectedGroupId);\r\n      this.currentTask.GroupId = this.selectedGroup.GroupId;\r\n    } else {\r\n      // DEFAULT GROUP\r\n      if (defaultGroupId != null) {\r\n        // console.log('found a default group id');\r\n        this.selectedGroup = this.calendarTaskService.getGroup(defaultGroupId);\r\n        this.currentTask.GroupId = this.selectedGroup.GroupId;\r\n      }\r\n  \r\n      await this.refreshOtherTasks();\r\n  \r\n      // Get default position\r\n      if (this.selectedGroup != null && defaultAfterTaskName != null &&\r\n        this.otherTasks.some(p => p.Name === defaultAfterTaskName &&\r\n          p.GroupId === this.selectedGroup.GroupId)) {\r\n        // tslint:disable-next-line:max-line-length\r\n        this.selectedAfterTask = this.otherTasks.filter(p => p.Name === defaultAfterTaskName)[0];\r\n        this.currentTask.AbsolutePosition = this.selectedAfterTask.AbsolutePosition + 1;\r\n      } else {\r\n        this.selectedAfterTask = null;\r\n        this.currentTask.AbsolutePosition = 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  public singleDateChanged(event: any) {\r\n    if (event.detail.value === 'ChosenDayOnly') {\r\n      this.onceSelected = true;\r\n    } else {\r\n      this.onceSelected = false;\r\n    }\r\n  }\r\n\r\n  private setShownComponents() {\r\n    console.log('setShownComponents', this.currentTask.Frequency);\r\n    this.showRequiredDays = this.currentTask.Frequency === TaskFrequency.Daily;\r\n    this.showAssignedDate = this.currentTask.Frequency !== TaskFrequency.Daily;\r\n    this.showSingleDay = this.currentTask.Frequency !== TaskFrequency.Daily;;\r\n  }\r\n\r\n  public async selectPosition() {\r\n    const handlerOk: (alertData: any) => void = (alertData) => {\r\n      this.selectedAfterTask = this.otherTasks.filter(p => p.Name === alertData)[0];\r\n\r\n      if (this.selectedAfterTask != null) {\r\n        this.absolutePositionChange(this.selectedAfterTask.AbsolutePosition);\r\n      } else {\r\n        this.absolutePositionChange(0);\r\n      }\r\n    };\r\n\r\n    const handlerCancel: (alertData: any) => void = (alertData) => {\r\n      return;\r\n    };\r\n\r\n    const handlerSetAsDefault: (alertData: any) => void = (alertData) => {\r\n      // console.log('SETTING AS DEFAULT', alertData);\r\n\r\n      if (this.recurringSelected) {\r\n        this.userService.setDefaultRecurringPositionName(alertData);\r\n      } else {\r\n        this.userService.setDefaultNonRecurringPositionName(alertData);\r\n      }\r\n\r\n      this.selectedAfterTask = this.otherTasks.filter(p => p.Name === alertData)[0];\r\n      if (this.selectedAfterTask != null) {\r\n        this.absolutePositionChange(this.selectedAfterTask.AbsolutePosition);\r\n      } else {\r\n        this.absolutePositionChange(0);\r\n      }\r\n    };\r\n\r\n    const handlerSetAsFirst: (alertData: any) => void = (alertData) => {\r\n      this.setToFirst();\r\n    };\r\n\r\n    const handlerSetAsLast: (alertData: any) => void = (alertData) => {\r\n      this.setToLast();\r\n    };\r\n\r\n    const afterTaskName = this.selectedAfterTask != null ?\r\n                            this.selectedAfterTask.Name :\r\n                            '';\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getChangePositionAlertOptions(handlerOk,\r\n                                                                                      handlerCancel,\r\n                                                                                      handlerSetAsDefault,\r\n                                                                                      handlerSetAsFirst,\r\n                                                                                      handlerSetAsLast,\r\n                                                                                      this.otherTasks.map(p => p.Name),\r\n                                                                                      afterTaskName);\r\n    const alert = await this.alertCtrl.create(alertOptions);\r\n\r\n    await alert.present();\r\n\r\n    this.setBackButtonAlert(alert);\r\n    await alert.onDidDismiss();\r\n    this.resetBackButton();\r\n  }\r\n\r\n  public async selectGroup() {\r\n\r\n    const handlerOk: (alertData: any) => void = async (alertData) => {\r\n      this.selectedGroup = this.groups.filter(p => p.Name === alertData)[0];\r\n      this.selectedAfterTask = null;\r\n      this.currentTask.GroupId = this.selectedGroup.GroupId;\r\n      await this.refreshOtherTasks();\r\n\r\n      // console.log('SETTING', this.selectedGroup);\r\n    };\r\n\r\n    const handlerNew: (alertData: any) => void = async (alertData) => {\r\n      const result = await this.modalService.showCreateGroupModal(GroupCreateComponent);\r\n      if (result === true) {\r\n        this.groups = this.calendarTaskService.allGroups.filter(p => p.Void === false);\r\n        // select last created group\r\n        this.selectedGroup = this.groups.filter(p => p.Void !== true && p.InsertDate != null)\r\n                              .sort((a, b) => {\r\n                                return b.InsertDate.getTime() - a.InsertDate.getTime();\r\n                              })[0];\r\n        this.currentTask.GroupId = this.selectedGroup.GroupId;\r\n        this.selectedAfterTask = null;\r\n        await this.refreshOtherTasks();\r\n      }\r\n    };\r\n\r\n    const handlerCancel: (alertData: any) => void = (alertData) => {\r\n      return;\r\n    };\r\n\r\n    const handlerSetAsDefault: (alertData: any) => void = (alertData) => {\r\n      this.selectedGroup = this.groups.filter(p => p.Name === alertData)[0];\r\n      this.selectedAfterTask = null;\r\n\r\n      // console.log('SETTING AS DEFAULT', this.selectedGroup);\r\n\r\n      if (this.recurringSelected) {\r\n        this.userService.setDefaultRecurringGroupId(this.selectedGroup.GroupId);\r\n      } else {\r\n        this.userService.setDefaultNonRecurringGroupId(this.selectedGroup.GroupId);\r\n      }\r\n\r\n      // this.selectedGroup = this.groups.filter(p => p.Name === alertData)[0];\r\n    };\r\n\r\n    const currentGroupName = this.selectedGroup != null ?\r\n                                this.selectedGroup.Name :\r\n                                '';\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getChangeDefaultGroupAlertOptions(handlerOk,\r\n                                                                                           handlerCancel,\r\n                                                                                           handlerSetAsDefault,\r\n                                                                                           handlerNew,\r\n                                                                                           this.groups.map(p => p.Name),\r\n                                                                                           currentGroupName);\r\n    const alert = await this.alertCtrl.create(alertOptions);\r\n    await alert.present();\r\n\r\n    this.setBackButtonAlert(alert);\r\n    await alert.onDidDismiss();\r\n    this.resetBackButton();\r\n  }\r\n\r\n  private setBackButtonAlert(alert: HTMLIonAlertElement) {\r\n    this.backButtonSubscription.unsubscribe();\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await alert.dismiss();\r\n    });\r\n  }\r\n\r\n  private setBackButtonPicker(picker: HTMLIonPickerElement) {\r\n    this.backButtonSubscription.unsubscribe();\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await picker.dismiss();\r\n    });\r\n  }\r\n\r\n  private resetBackButton() {\r\n    if (this.backButtonSubscription != null) {\r\n      this.backButtonSubscription.unsubscribe();\r\n    }\r\n\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await this.closePopup();\r\n    });\r\n  }\r\n\r\n  private async initializeGroup() {\r\n    // PRESELECTED GROUP\r\n    if (this.preSelectedGroupId != \"\") {\r\n      this.selectedGroup = this.calendarTaskService.getGroup(this.preSelectedGroupId);\r\n      this.currentTask.GroupId = this.selectedGroup.GroupId;\r\n      console.log('ReccuringDefault : ', this.selectedGroup.RecurringDefault);\r\n      this.recurringValue = this.selectedGroup.RecurringDefault === false ? 'Once' : 'Recurring';\r\n      this.currentTask.Frequency = this.selectedGroup.RecurringDefault === false ? TaskFrequency.Once : TaskFrequency.Daily;\r\n      console.log('Sending isone value :', this.selectedGroup.RecurringDefault === false, this.selectedGroup.RecurringDefault);\r\n      this.recurringChanged(null, this.selectedGroup.RecurringDefault === false);\r\n    } else {\r\n      // Set groupId to default, should only be done when init\r\n      if (this.userService.getConfig(UserConfig.DefaultRecurringGroupId) != null) {\r\n        // console.log('found a default group id');\r\n        // tslint:disable-next-line:max-line-length\r\n        this.selectedGroup = this.calendarTaskService.getGroup(this.userService.getConfig(UserConfig.DefaultRecurringGroupId));\r\n        this.currentTask.GroupId = this.selectedGroup.GroupId;\r\n      } else { // this should not happen but we need to handle that case\r\n        this.logger.logError(new Error('No default group found'));\r\n        this.selectedGroup = this.groups[0];\r\n      }\r\n    }\r\n\r\n    await this.refreshOtherTasks();\r\n  }\r\n\r\n  private async initializeOtherTasks() {\r\n    const defaultAfterTaskName = this.userService.getConfig(UserConfig.DefaultRecurringAfterTaskNameKey);\r\n\r\n    // Set groupId to default, should only be done when init\r\n    if (this.selectedGroup != null && defaultAfterTaskName != null &&\r\n        this.otherTasks.some(p => p.Name === defaultAfterTaskName)) {\r\n      this.selectedAfterTask = this.otherTasks.filter(p => p.Name === defaultAfterTaskName)[0];\r\n    } else {\r\n      // console.log('did not find a defaulaftername', this.otherTasks);\r\n      this.selectedAfterTask = null;\r\n    }\r\n\r\n    if (this.otherTasks.length === 0 || this.selectedAfterTask == null) {\r\n      this.currentTask.AbsolutePosition = 1;\r\n    } else {\r\n      this.currentTask.AbsolutePosition = this.selectedAfterTask.AbsolutePosition + 1;\r\n    }\r\n  }\r\n\r\n  private async refreshOtherTasks() {\r\n    this.otherTasks = this.calendarTaskService.getAllPresentTasks()\r\n                                              .filter(p => p.CalendarTaskId !== this.currentTask.CalendarTaskId &&\r\n                                                           p.GroupId === this.currentTask.GroupId &&\r\n                                                           !p.Void);\r\n\r\n    // console.log('did not find a defaultaftername');\r\n    this.selectedAfterTask = null;\r\n    this.currentTask.AbsolutePosition = 1;\r\n  }\r\n}\r\n","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { CalendarTask } from 'src/app/models/Core/calendar-task';\r\nimport { CalendarTaskService } from 'src/app/services/calendar-task.service';\r\nimport { ModalController, AlertController, LoadingController, Platform, PickerController } from '@ionic/angular';\r\nimport { DayOfWeek } from 'src/app/models/Core/day-of-week.enum';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { AlertOptions } from '@ionic/core';\r\nimport { FormatDayOfWeekAbbrPipe } from 'src/app/pipes/format-dayofweek-abbr-pipe';\r\nimport { TaskFrequency } from 'src/app/models/Core/task-frequency.enum';\r\nimport DateUtils from 'src/app/shared/date-utils';\r\nimport { DatePipe } from '@angular/common';\r\nimport { InvalidCalendarTaskError } from 'src/app/models/Exceptions/InvalidCalendarTaskError';\r\nimport { ILogger } from 'src/app/interfaces/i-logger';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { IUserService } from 'src/app/interfaces/i-user-service';\r\nimport { Ionic4DatepickerModalComponent } from '@logisticinfotech/ionic4-datepicker';\r\nimport { DateService } from 'src/app/services/date.service';\r\nimport { UserConfig } from 'src/app/models/Core/user-config';\r\nimport { TaskGroup } from 'src/app/models/Core/task-group';\r\nimport { ResultType } from 'src/app/models/Core/result-type.enum';\r\nimport { EventService, EventData } from 'src/app/services/event.service';\r\n//import { NotificationService } from 'src/app/services/notification.service';\r\nimport { GroupCreateComponent } from '../group-create/group-create.component';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\nimport NumberUtils from 'src/app/shared/number-utils';\r\n\r\n@Component({\r\n  selector: 'app-task-edit',\r\n  templateUrl: './task-edit.component.html',\r\n  styleUrls: ['./task-edit.component.scss'],\r\n})\r\nexport class TaskEditComponent implements OnInit, OnDestroy {\r\n\r\n  private hourChoices: string[] = ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11',\r\n                                   '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'];\r\n\r\n  public ChosenDayOnlyValue: string = 'ChosenDayOnly';\r\n  public UntilDoneValue: string = 'UntilDone';\r\n\r\n  @Input() currentTask: CalendarTask;\r\n  public selectedFrequency: string = '0';\r\n  public selectedResultType: string = '0';\r\n  public selectedPositive: string = '0';\r\n  public otherTasks: CalendarTask[]; /* Required in order to select the AbsolutePosition */\r\n  private initialTask: CalendarTask;\r\n  public selectedAfterTask: CalendarTask; /* ngModel of the AbsolutePosition property */\r\n  public selectedGroup: TaskGroup;\r\n  public groups: TaskGroup[];\r\n  public assignedDatePicked: string;\r\n\r\n  public showRequiredDays: boolean;\r\n  public showAssignedDate: boolean;\r\n  public recurringValue: any;\r\n  public currentAssignedDateString: string;\r\n\r\n  public showSingleDay: boolean;\r\n  private recurringSelected: boolean;\r\n  private onceSelected: boolean;\r\n  private backButtonSubscription: Subscription;\r\n  public notificationEnabled: boolean;\r\n  public notificationTimeValue: string;\r\n\r\n  private datePickerObj: any = {};\r\n  public untilDoneCurrentValue: string;\r\n  private isInitialized: boolean = false;\r\n\r\n  public selectedResultTypeCaption: string;\r\n  private resultTypeCaptions = [\r\n    this.translate.instant('create-task.select-binary'),\r\n    this.translate.instant('create-task.select-decimal'),\r\n    this.translate.instant('create-task.select-time-of-day'),\r\n    this.translate.instant('create-task.select-time-duration')\r\n  ];\r\n\r\n  public daysOfWeek: DayOfWeek[] = [\r\n    DayOfWeek.Monday,\r\n    DayOfWeek.Tuesday,\r\n    DayOfWeek.Wednesday,\r\n    DayOfWeek.Thursday,\r\n    DayOfWeek.Friday,\r\n    DayOfWeek.Saturday,\r\n    DayOfWeek.Sunday\r\n  ];\r\n\r\n  constructor(\r\n    private calendarTaskService: CalendarTaskService,\r\n    private modalController: ModalController,\r\n    private alertCtrl: AlertController,\r\n    private logger: ILogger,\r\n    private loadingController: LoadingController,\r\n    public formatDayOfWeekAbbrPipe: FormatDayOfWeekAbbrPipe,\r\n    private alertService: AlertService,\r\n    private datepipe: DatePipe,\r\n    private translate: TranslateService,\r\n    private platform: Platform,\r\n    private userService: IUserService,\r\n    private dateService: DateService,\r\n    private eventService: EventService,\r\n    private pickerCtrl: PickerController,\r\n    //private notificationService: NotificationService,\r\n    private modalService: ModalService) { }\r\n\r\n  async ngOnInit() {\r\n    this.recurringValue = this.currentTask.Frequency === TaskFrequency.Once ||\r\n                          this.currentTask.Frequency === TaskFrequency.UntilDone ? 'Once' : 'Recurring';\r\n    this.selectedFrequency = String(Number(this.currentTask.Frequency));\r\n    this.selectedResultType = String(Number(this.currentTask.ResultType));\r\n    this.groups = this.calendarTaskService.allGroups.filter(p => p.Void === false);\r\n    await this.initializeGroup();\r\n    await this.refreshOtherTasks();\r\n    this.setAfterTask();\r\n\r\n    if (this.currentTask.AssignedDate == null) {\r\n      this.assignedDatePicked = new Date().toISOString();\r\n    } else {\r\n      this.assignedDatePicked = new Date(this.currentTask.AssignedDate).toISOString();\r\n    }\r\n\r\n    if (this.currentTask.Frequency === TaskFrequency.Daily) {\r\n      this.recurringSelected = true;\r\n      this.onceSelected = false;\r\n      this.showSingleDay = false;\r\n    } else {\r\n      if (this.currentTask.Frequency === TaskFrequency.Once) {\r\n        this.onceSelected = true;\r\n        this.recurringSelected = false;\r\n        this.showSingleDay = true;\r\n      } else {\r\n        this.onceSelected = false;\r\n        this.recurringSelected = false;\r\n        this.showSingleDay = true;\r\n      }\r\n    }\r\n\r\n    this.setShownComponents();\r\n\r\n    this.resetBackButton();\r\n\r\n    // console.log('ASSIGNED_DATE = ', this.currentTask.AssignedDate);\r\n    const result = this.datepipe.transform(this.currentTask.AssignedDate, 'yyyy-MM-dd');\r\n    this.currentAssignedDateString = result;\r\n\r\n    this.initialTask = Object.assign({}, this.currentTask);\r\n\r\n    if (this.currentTask.Frequency === TaskFrequency.Once) {\r\n      this.untilDoneCurrentValue = this.ChosenDayOnlyValue;\r\n    } else if (this.currentTask.Frequency === TaskFrequency.UntilDone) {\r\n      this.untilDoneCurrentValue = this.UntilDoneValue;\r\n    }\r\n\r\n    this.selectedResultTypeCaption = this.resultTypeCaptions[this.currentTask.ResultType];\r\n\r\n    // console.log('TASK CREATE GROUPS', this.groups);\r\n\r\n    // TODO : Might need to put this into afterViewInit\r\n\r\n    if (this.currentTask.NotificationId != null) {\r\n      this.notificationEnabled = true;\r\n      if (this.currentTask.NotificationTime != null) {\r\n        this.notificationTimeValue = this.currentTask.NotificationTime;\r\n      } else {\r\n        this.notificationTimeValue = '12:00';\r\n      }\r\n    } else {\r\n      this.notificationEnabled = false;\r\n      this.notificationTimeValue = '12:00';\r\n    }\r\n\r\n    this.isInitialized = true;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.backButtonSubscription.unsubscribe();\r\n  }\r\n\r\n  public async btnSaveClick(): Promise<void> {\r\n\r\n    if (this.recurringSelected) {\r\n      this.currentTask.Frequency = TaskFrequency.Daily;\r\n    } else {\r\n      if (this.onceSelected) {\r\n        this.currentTask.Frequency = TaskFrequency.Once;\r\n      } else {\r\n        this.currentTask.Frequency = TaskFrequency.UntilDone;\r\n      }\r\n    }\r\n\r\n    this.currentTask.GroupId = this.selectedGroup.GroupId;\r\n\r\n    try {\r\n      this.currentTask.validate(this.translate);\r\n    } catch (error) {\r\n      if (error instanceof InvalidCalendarTaskError) {\r\n        // console.log('invalidcalendartaskerror', error);\r\n        alert(error.message);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Validation 1\r\n    if (this.currentTask.Frequency !== TaskFrequency.Daily) { // TODO : this will cause a bug if the task can't be created\r\n      this.currentTask.RequiredDays = [];\r\n    }\r\n\r\n    // Validation 2\r\n    if (this.currentTask.Frequency === TaskFrequency.Daily) { // TODO : this will cause a bug if the task can't be created\r\n      this.currentTask.AssignedDate = null;\r\n    }\r\n\r\n    // Notifications\r\n    // console.log('notification enabled', this.notificationEnabled);\r\n    // console.log('notification id', this.currentTask.NotificationId);\r\n    if (this.notificationEnabled === true &&\r\n        (this.currentTask.NotificationId == null ||\r\n        Number.isNaN(this.currentTask.NotificationId))) {\r\n      this.logger.logDebug('SETTING NOTIFICATION ID');\r\n      this.currentTask.NotificationId = Math.max(...this.calendarTaskService.getAllTasks()\r\n                                                        .filter(p => p.NotificationId < 1000000).map(p => p.NotificationId)) + 1;\r\n      if (Number.isNaN(this.currentTask.NotificationId)) {\r\n        this.logger.logDebug('IS NAN, SETTING NOTIFICATION ID TO 1');\r\n        this.currentTask.NotificationId = 1;\r\n        if (this.calendarTaskService.getAllTasks().filter(p => p.NotificationId === 1 && p.Void === false).length > 0) {\r\n          // 1 already exists\r\n          this.logger.logError(new Error('NotificationId = 1 already exists'));\r\n        }\r\n      } else {\r\n        this.logger.logDebug('SETTING NOTIFICATION TO ' + this.currentTask.NotificationId);\r\n      }\r\n    }\r\n\r\n    this.logger.logDebug('NOTIFICATIONID=', String(this.currentTask.NotificationId));\r\n\r\n    if (this.notificationEnabled === false && this.currentTask.NotificationId != null) {\r\n      // console.log('CANCELLING ALL NOTIFICATIONS');\r\n      //await this.notificationService.cancelAllNotification(this.currentTask.NotificationId); TODO CAPACITOR\r\n      this.currentTask.NotificationId = null;\r\n      this.currentTask.NotificationTime = null;\r\n    }\r\n\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('edit-task.msg-saving-task'),\r\n    });\r\n    loading.present();\r\n\r\n    this.currentTask.UserId = await this.userService.getCurrentUserId();\r\n    this.currentTask.UpdateDate = new Date();\r\n\r\n    try {\r\n      const result = await this.calendarTaskService.updateCalendarTask(this.currentTask);\r\n      loading.dismiss();\r\n      if (result === true) {\r\n        // this.currentTask.reorderTasks(this.orderChanged, this.allOtherTasks);\r\n        await this.modalController.dismiss(true, null, ModalService.ModalIds.EditTask);\r\n        this.initialTask = null;\r\n        this.eventService.emit(new EventData(EventService.EventIds.CardReset + this.currentTask.CalendarTaskId, true));\r\n        this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, true));\r\n        this.eventService.emit(new EventData(EventService.EventIds.NotificationSyncedFalse, null));\r\n      } else {\r\n        this.logger.logError(new Error('Unable to save task, result is false'));\r\n        alert(this.translate.instant('edit-task.msg-saving-task-error'));\r\n      }\r\n    } catch (error) {\r\n      loading.dismiss();\r\n      this.logger.logError(new Error('Unable to save task : ' + error.message));\r\n      alert('Unable to save task');\r\n      return;\r\n    }\r\n  }\r\n\r\n  public async btnAssignedDateClick() {\r\n    const datePickerModal = await this.modalController.create({\r\n      component: Ionic4DatepickerModalComponent,\r\n      cssClass: 'li-ionic4-datePicker',\r\n      componentProps: {\r\n         objConfig: this.datePickerObj,\r\n         selectedDate: this.dateService.GetTodayWorkDate()\r\n      }\r\n    });\r\n    await datePickerModal.present();\r\n\r\n    this.setBackButtonModal(datePickerModal);\r\n    const data = await datePickerModal.onDidDismiss();\r\n    this.resetBackButton();\r\n\r\n    const selectedDate = new Date(data.data.date);\r\n\r\n    if (!DateUtils.isValidDate(selectedDate)) { // standard cancel\r\n      return;\r\n    }\r\n\r\n    this.currentAssignedDateString = this.datepipe.transform(selectedDate, 'yyyy-MM-dd');\r\n    this.currentTask.AssignedDate = DateUtils.RemoveHours(selectedDate);\r\n  }\r\n\r\n  public cbDayOfWeek(event: any, dayOfWeek: number): void {\r\n    if (event.detail.checked) {\r\n      this.currentTask.RequiredDays.push(dayOfWeek);\r\n    } else {\r\n      this.currentTask.RequiredDays = this.currentTask.RequiredDays.filter(p => p.valueOf() !== dayOfWeek);\r\n    }\r\n  }\r\n\r\n  public getCbDayOfWeekValue(day: number): boolean {\r\n    // TODO: this gets called 7*7 times instead of 7 times\r\n    if (this.currentTask.RequiredDays.some(p => p === day)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async btnDeleteClick() {\r\n    const handler: (alertData: any) => void = (alertData) => {\r\n      this.deleteTask();\r\n    };\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getDeleteTaskAlertOptions(handler);\r\n    const alert = await this.alertCtrl.create(alertOptions);\r\n    await alert.present();\r\n\r\n    this.setBackButtonAlert(alert);\r\n    await alert.onDidDismiss();\r\n    this.resetBackButton();\r\n  }\r\n\r\n  public async selectResultType() {\r\n    const handlerOk: (alertData: any) => void = (alertData) => {\r\n      for (let i = 0 ; i < 4 ; i++) {\r\n        if (this.resultTypeCaptions[i] === alertData) {\r\n          this.currentTask.ResultType = i as ResultType;\r\n          this.selectedResultTypeCaption = this.resultTypeCaptions[i];\r\n          break;\r\n        }\r\n      }\r\n    };\r\n\r\n    const handlerCancel: (alertData: any) => void = (alertData) => {\r\n      return;\r\n    };\r\n\r\n    // TODO: Implement a default result type\r\n    /*const handlerSetAsDefault: (alertData: any) => void = (alertData) => {\r\n      this.selectedGroup = this.groups.filter(p => p.Name === alertData)[0];\r\n      this.selectedAfterTask = null;\r\n\r\n      console.log('SETTING AS DEFAULT', this.selectedGroup);\r\n\r\n      if (this.recurringSelected) {\r\n        this.userService.setDefaultRecurringGroupId(this.selectedGroup.GroupId);\r\n      } else {\r\n        this.userService.setDefaultNonRecurringGroupId(this.selectedGroup.GroupId);\r\n      }\r\n\r\n      // this.selectedGroup = this.groups.filter(p => p.Name === alertData)[0];\r\n    };*/\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getChangeResultTypeOptions(handlerOk,\r\n                                                                                    handlerCancel,\r\n                                                                                    // handlerSetAsDefault,\r\n                                                                                    this.resultTypeCaptions,\r\n                                                                                    this.selectedResultTypeCaption);\r\n    const alert = await this.alertCtrl.create(alertOptions);\r\n    await alert.present();\r\n\r\n    this.setBackButtonAlert(alert);\r\n    await alert.onDidDismiss();\r\n    this.resetBackButton();\r\n  }\r\n\r\n  private async deleteTask(): Promise<void> {\r\n    this.currentTask.Void = true;\r\n    this.currentTask.UserId = await this.userService.getCurrentUserId();\r\n    const result = await this.calendarTaskService.updateCalendarTask(this.currentTask);\r\n    try {\r\n      if (result === true) {\r\n        this.eventService.emit(new EventData(EventService.EventIds.CardReset + this.currentTask.CalendarTaskId, true));\r\n        this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, true));\r\n        await this.modalController.dismiss(true, null, ModalService.ModalIds.EditTask);\r\n      } else {\r\n        this.logger.logError(new Error('Unable to delete this task, result is false'));\r\n      }\r\n      return;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('Unable to delete this task : ' + error.message));\r\n      alert('Unable to delete task');\r\n      return;\r\n    }\r\n  }\r\n\r\n  public setToFirst(): void {\r\n    this.currentTask.AbsolutePosition = 1;\r\n    this.selectedAfterTask = null;\r\n  }\r\n  \r\n  public setToLast(): void {\r\n    if (this.otherTasks.length == 0) {\r\n      this.currentTask.AbsolutePosition = 1;\r\n      this.selectedAfterTask = null;\r\n    } else {\r\n      const max = this.otherTasks.reduce((oa, u) => Math.max(oa, u.AbsolutePosition), 0);\r\n      this.selectedAfterTask = this.otherTasks.filter((oa, u) => oa.AbsolutePosition == max, 0)[0];\r\n      this.currentTask.AbsolutePosition = max + 1;\r\n    }\r\n  }\r\n\r\n  public absolutePositionChange(absolutePosition: number) {\r\n    this.currentTask.AbsolutePosition = absolutePosition + 1;\r\n  }\r\n\r\n  public async recurringChanged(event: any) {\r\n    if (this.isInitialized === false) {\r\n      return;\r\n    }\r\n\r\n    // console.log('recurring changed', event);\r\n    if (event.detail.value === 'Once') {\r\n      this.showAssignedDate = true;\r\n      this.showRequiredDays = false;\r\n      this.showSingleDay = true;\r\n      this.recurringSelected = false;\r\n      if (this.currentTask.Frequency !== TaskFrequency.Once &&\r\n          this.currentTask.Frequency !== TaskFrequency.UntilDone) {\r\n        this.untilDoneCurrentValue = this.UntilDoneValue;\r\n        this.currentAssignedDateString = this.datepipe.transform(new Date(), 'yyyy-MM-dd');\r\n        this.currentTask.AssignedDate = this.dateService.GetTodayWorkDate();\r\n      }\r\n\r\n      // Ask if we want to change to the default group\r\n      const defaultGroupId = this.userService.getConfig(UserConfig.DefaultNonRecurringGroupId);\r\n      const defaultAfterTaskName = defaultGroupId == null ?\r\n                                     null :\r\n                                     this.userService.getConfig(UserConfig.DefaultNonRecurringAfterTaskNameKey);\r\n      await this.changeDefaultGroup(defaultGroupId, defaultAfterTaskName);\r\n    } else {\r\n      this.showAssignedDate = false;\r\n      this.showRequiredDays = true;\r\n      this.showSingleDay = false;\r\n      this.recurringSelected = true;\r\n\r\n      // Ask if we want to change to the default group\r\n      const defaultGroupId = this.userService.getConfig(UserConfig.DefaultRecurringGroupId);\r\n      const defaultAfterTaskName = defaultGroupId == null ?\r\n                                      null :\r\n                                      this.userService.getConfig(UserConfig.DefaultRecurringAfterTaskNameKey);\r\n      await this.changeDefaultGroup(defaultGroupId, defaultAfterTaskName);\r\n\r\n      // Reset Assigned Date if it was null\r\n      if (this.initialTask.AssignedDate == null) {\r\n        this.currentTask.AssignedDate = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  private async changeDefaultGroup(defaultGroupId: string, defaultAfterTaskName: string) {\r\n    if (defaultGroupId != null &&\r\n      this.selectedGroup != null &&\r\n      defaultGroupId !== this.selectedGroup.GroupId) {\r\n      const defaultGroup = this.calendarTaskService.getGroup(defaultGroupId);\r\n      const handler: (alertData: any) => void = async (alertData) => {\r\n        this.selectedGroup = defaultGroup;\r\n        this.currentTask.GroupId = this.selectedGroup.GroupId;\r\n\r\n        await this.refreshOtherTasks();\r\n\r\n        // Get default position\r\n        if (this.selectedGroup != null && defaultAfterTaskName != null &&\r\n          this.otherTasks.some(p => p.Name === defaultAfterTaskName &&\r\n            p.GroupId === this.selectedGroup.GroupId)) {\r\n          // tslint:disable-next-line:max-line-length\r\n          this.selectedAfterTask = this.otherTasks.filter(p => p.Name === defaultAfterTaskName)[0];\r\n          this.currentTask.AbsolutePosition = this.selectedAfterTask.AbsolutePosition + 1;\r\n        } else {\r\n          this.selectedAfterTask = null;\r\n          this.currentTask.AbsolutePosition = 1;\r\n        }\r\n      };\r\n\r\n      const defaultGroupName = defaultGroup.Name;\r\n      const alertOptions = this.alertService.getConfirmChangeGroupAlertOptions(handler, defaultGroupName);\r\n      const alert = await this.alertCtrl.create(alertOptions);\r\n      await alert.present();\r\n    }\r\n  }\r\n\r\n  public singleDateChanged(event: any) {\r\n    if (event.detail.value === 'ChosenDayOnly') {\r\n      this.onceSelected = true;\r\n    } else {\r\n      this.onceSelected = false;\r\n    }\r\n  }\r\n\r\n  public async btnNotificationEnterTimeClick(): Promise<void> {\r\n    const picker = await this.pickerCtrl.create({\r\n      columns: this.getNotificationColumns(),\r\n      cssClass: 'time-picker',\r\n      animated: false,\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-cancel'),\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-ok'),\r\n          handler: (value) => {\r\n            const hourString = Number(value.Hours.value) > 9 ?\r\n                                 value.Hours.value :\r\n                                 '0' + value.Hours.value;\r\n\r\n            const minutesString = Number(value.Minutes.value) > 9 ?\r\n                                 value.Minutes.value :\r\n                                 '0' + value.Minutes.value;\r\n\r\n            this.notificationTimeValue = hourString + ':' + minutesString;\r\n\r\n            this.currentTask.NotificationTime = this.notificationTimeValue;\r\n            if (this.currentTask.NotificationId == null) {\r\n              this.currentTask.NotificationId = Math.max(...this.calendarTaskService.getAllTasks()\r\n                                                        .filter(p => p.NotificationId < 1000000).map(p => p.NotificationId)) + 1;\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await picker.present();\r\n\r\n    this.setBackButtonPicker(picker);\r\n    await picker.onDidDismiss();\r\n    this.resetBackButton();\r\n  }\r\n\r\n  private getNotificationColumns() {\r\n    const currentHour = Number(this.notificationTimeValue.substring(0, 2));\r\n    // console.log('CURRENT HOUR', currentHour);\r\n    // const currentMinutes = Number(currentSelection.substring(3, 3 + 2));\r\n    const HourIndex = this.hourChoices.findIndex(p => Number(p) === currentHour);\r\n    // console.log('CURRENT HourIndex', HourIndex, this.hourChoices);\r\n\r\n    const MinuteIndex = 0;\r\n    const columns = [];\r\n\r\n    columns.push({\r\n      name: 'Hours',\r\n      selectedIndex: HourIndex,\r\n      options: this.getColumnOptions1(),\r\n    });\r\n\r\n    columns.push({\r\n      name: 'Minutes',\r\n      selectedIndex: MinuteIndex,\r\n      options: this.getColumnOptions2()\r\n    });\r\n\r\n    // console.log('columns');\r\n\r\n    return columns;\r\n  }\r\n\r\n  private getColumnOptions1() {\r\n    const options = [];\r\n    for (const hourValue of this.hourChoices) {\r\n      options.push({\r\n        text: hourValue,\r\n        value: Number(hourValue)\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  private getColumnOptions2() {\r\n    const options = [];\r\n    for (const minuteValue of UserConfig.getMinutesValues()) {\r\n      options.push({\r\n        text: minuteValue,\r\n        value: Number(minuteValue)\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  public async closePopup() {\r\n    const anyChanged = !CalendarTask.equals(this.initialTask, this.currentTask);\r\n\r\n    if (anyChanged === true) {\r\n      const handlerYes = async () => {\r\n        this.btnSaveClick();\r\n        await this.modalController.dismiss(false, null, ModalService.ModalIds.EditTask);\r\n      };\r\n\r\n      const handlerNo = async () => {\r\n        await this.modalController.dismiss(false, null, ModalService.ModalIds.EditTask);\r\n      };\r\n\r\n      const alertOptions = this.alertService.getCloseTaskEditPopupAlertOptions(handlerYes, handlerNo);\r\n      const alert = await this.alertCtrl.create(alertOptions);\r\n      await alert.present();\r\n    } else {\r\n      await this.modalController.dismiss(false, null, ModalService.ModalIds.EditTask);\r\n    }\r\n  }\r\n\r\n  private setShownComponents() {\r\n    this.showRequiredDays = this.currentTask.Frequency === TaskFrequency.Daily;\r\n    this.showAssignedDate = this.currentTask.Frequency !== TaskFrequency.Daily;\r\n  }\r\n\r\n  public async selectGroup() {\r\n    const handlerOk: (alertData: any) => void = async (alertData) => {\r\n      this.selectedGroup = this.groups.filter(p => p.Name === alertData)[0];\r\n      this.selectedAfterTask = null;\r\n      this.currentTask.GroupId = this.selectedGroup.GroupId;\r\n\r\n      await this.refreshOtherTasks();\r\n      // console.log('SETTING', this.selectedGroup);\r\n    };\r\n\r\n    const handlerCancel: (alertData: any) => void = (alertData) => {\r\n      return;\r\n    };\r\n\r\n    const handlerSetAsDefault: (alertData: any) => void = (alertData) => {\r\n      this.selectedGroup = this.groups.filter(p => p.Name === alertData)[0];\r\n      this.selectedAfterTask = null;\r\n\r\n      // console.log('SETTING AS DEFAULT', this.selectedGroup);\r\n\r\n      if (this.recurringSelected) {\r\n        this.userService.setDefaultRecurringGroupId(this.selectedGroup.GroupId);\r\n      } else {\r\n        this.userService.setDefaultNonRecurringGroupId(this.selectedGroup.GroupId);\r\n      }\r\n\r\n      // this.selectedGroup = this.groups.filter(p => p.Name === alertData)[0];\r\n    };\r\n\r\n    const handlerNew: (alertData: any) => void = async (alertData) => {\r\n      const result = await this.modalService.showCreateGroupModal(GroupCreateComponent);\r\n      if (result === true) {\r\n        this.groups = this.calendarTaskService.allGroups.filter(p => p.Void === false);\r\n        // select last created group\r\n        this.selectedGroup = this.groups.filter(p => p.Void !== true && p.InsertDate != null)\r\n                              .sort((a, b) => {\r\n                                return b.InsertDate.getTime() - a.InsertDate.getTime();\r\n                              })[0];\r\n        this.selectedAfterTask = null;\r\n        this.currentTask.GroupId = this.selectedGroup.GroupId;\r\n        await this.refreshOtherTasks();\r\n      }\r\n    };\r\n\r\n    const currentGroupName = this.selectedGroup != null ?\r\n                                this.selectedGroup.Name :\r\n                                '';\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getChangeDefaultGroupAlertOptions(handlerOk,\r\n                                                                                           handlerCancel,\r\n                                                                                           handlerSetAsDefault,\r\n                                                                                           handlerNew,\r\n                                                                                           this.groups.map(p => p.Name),\r\n                                                                                           currentGroupName);\r\n    const alert = await this.alertCtrl.create(alertOptions);\r\n    alert.present();\r\n  }\r\n\r\n  public async selectPosition() {\r\n    const handlerOk: (alertData: any) => void = (alertData) => {\r\n      this.selectedAfterTask = this.otherTasks.filter(p => p.Name === alertData)[0];\r\n      this.absolutePositionChange(this.selectedAfterTask.AbsolutePosition);\r\n    };\r\n\r\n    const handlerCancel: (alertData: any) => void = (alertData) => {\r\n      return;\r\n    };\r\n\r\n    const handlerSetAsDefault: (alertData: any) => void = (alertData) => {\r\n      this.selectedAfterTask = this.otherTasks.filter(p => p.Name === alertData)[0];\r\n      this.absolutePositionChange(this.selectedAfterTask.AbsolutePosition);\r\n    };\r\n\r\n    const handlerSetAsFirst: (alertData: any) => void = (alertData) => {\r\n      this.setToFirst();\r\n    };\r\n\r\n    const handlerSetAsLast: (alertData: any) => void = (alertData) => {\r\n      this.setToLast();\r\n    };\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getChangePositionAlertOptions(handlerOk,\r\n                                                                                      handlerCancel,\r\n                                                                                      handlerSetAsDefault,\r\n                                                                                      handlerSetAsFirst,\r\n                                                                                      handlerSetAsLast,\r\n                                                                                      this.otherTasks.map(p => p.Name),\r\n                                                                                      this.selectedAfterTask != null ?\r\n                                                                                        this.selectedAfterTask.Name :\r\n                                                                                        null);\r\n    const alert = await this.alertCtrl.create(alertOptions);\r\n    alert.present();\r\n  }\r\n\r\n  private async initializeGroup() {\r\n    const groupIndex = this.groups.findIndex(p => p.GroupId === this.currentTask.GroupId);\r\n    this.selectedGroup = this.groups[groupIndex];\r\n  }\r\n\r\n  private async refreshOtherTasks() {\r\n    this.otherTasks = this.calendarTaskService.getAllPresentTasks()\r\n                                              .filter(p => p.CalendarTaskId !== this.currentTask.CalendarTaskId &&\r\n                                                           p.GroupId === this.currentTask.GroupId &&\r\n                                                           !p.Void);\r\n  }\r\n\r\n  private setAfterTask() {\r\n    if (this.otherTasks.length === 0) {\r\n      this.currentTask.AbsolutePosition = 1;\r\n      this.selectedAfterTask = null;\r\n    } else {\r\n      const afterTasks = this.otherTasks.filter(p => p.AbsolutePosition < this.currentTask.AbsolutePosition);\r\n      if (afterTasks.length > 0) {\r\n        this.selectedAfterTask = afterTasks[afterTasks.length - 1];\r\n      }\r\n    }\r\n  }\r\n\r\n  private refreshAfterTask() {\r\n    this.currentTask.AbsolutePosition = 1;\r\n    this.selectedAfterTask = null;\r\n  }\r\n\r\n  private setBackButtonAlert(alert: HTMLIonAlertElement) {\r\n    this.backButtonSubscription.unsubscribe();\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await alert.dismiss();\r\n    });\r\n  }\r\n\r\n  private resetBackButton() {\r\n    if (this.backButtonSubscription != null) {\r\n      this.backButtonSubscription.unsubscribe();\r\n    }\r\n\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await this.closePopup();\r\n    });\r\n  }\r\n\r\n  private setBackButtonPicker(picker: HTMLIonPickerElement) {\r\n    this.backButtonSubscription.unsubscribe();\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await picker.dismiss();\r\n    });\r\n  }\r\n\r\n  private setBackButtonModal(modal: HTMLIonModalElement) {\r\n    this.backButtonSubscription.unsubscribe();\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await modal.dismiss();\r\n    });\r\n  }\r\n}\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LoadingController, PopoverController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { EventData, EventService } from 'src/app/services/event.service';\r\n\r\n@Component({\r\n  selector: 'app-task-list-popover',\r\n  templateUrl: './task-list-popover.component.html',\r\n  styleUrls: ['./task-list-popover.component.scss'],\r\n})\r\nexport class TaskListPopoverComponent implements OnInit {\r\n\r\n  public skipAllBtnShown: boolean = true;\r\n\r\n  constructor(private popoverController: PopoverController,\r\n              private eventService: EventService,\r\n              private loadingController: LoadingController,\r\n              private translate: TranslateService) { }\r\n\r\n  ngOnInit() {}\r\n\r\n  public async btnSkipAllClick() {\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('task-list.msg-skipping-all'),\r\n      id: 'refreshSpinner'\r\n    });\r\n    await loading.present();\r\n    this.eventService.emit(new EventData(EventService.EventIds.SkipAll, null));\r\n    await loading.dismiss();\r\n    await this.popoverController.dismiss();\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CalendarTaskService } from 'src/app/services/calendar-task.service';\r\nimport { LoadingController, Platform, PopoverController } from '@ionic/angular';\r\nimport DateUtils from 'src/app/shared/date-utils';\r\nimport { DayOfWeek } from 'src/app/models/Core/day-of-week.enum';\r\nimport { Subscription } from 'rxjs';\r\nimport { ILogger } from 'src/app/interfaces/i-logger';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DateService } from 'src/app/services/date.service';\r\nimport { IUserService } from 'src/app/interfaces/i-user-service';\r\nimport { TimerService } from 'src/app/services/timer.service';\r\nimport { FireworksService } from 'src/app/services/fireworks.service';\r\nimport { EventService, EventData } from 'src/app/services/event.service';\r\nimport { CalendarTask } from 'src/app/models/Core/calendar-task';\r\nimport { Ionic4DatepickerModalComponent } from '@logisticinfotech/ionic4-datepicker';\r\nimport { TaskFrequency } from 'src/app/models/Core/task-frequency.enum';\r\nimport { ResultType } from 'src/app/models/Core/result-type.enum';\r\nimport { UserConfig } from 'src/app/models/Core/user-config';\r\nimport * as introJs from 'intro.js/intro.js';\r\nimport NumberUtils from 'src/app/shared/number-utils';\r\nimport ThreadUtils from 'src/app/shared/thread.utils';\r\nimport { DataSyncServerService } from 'src/app/services/data-sync-server-service';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { DTOUser } from 'src/app/models/DTO/dto-user';\r\nimport { IApiProvider } from 'src/app/interfaces/i-api-provider';\r\nimport { CancellationToken } from 'src/app/services/data-sync-2.service';\r\nimport { WelcomeComponent } from '../welcome/welcome.component';\r\nimport { TaskSelectionComponent } from '../task-selection/task-selection.component';\r\nimport { TaskCreateComponent } from '../task-create/task-create.component';\r\nimport { TaskListPopoverComponent } from '../task-list-popover/task-list-popover.component';\r\n\r\n@Component({\r\n  selector: 'app-task-list',\r\n  templateUrl: './task-list.component.html',\r\n  styleUrls: ['./task-list.component.scss'],\r\n})\r\nexport class TaskListComponent implements OnInit, OnDestroy {\r\n  public currentDateTitle: string;\r\n  public currentWorkDay: DayOfWeek;\r\n  public progressBarValue: number = 0;\r\n  public progressBarText: string;\r\n  public showBtnSkipEverything = false;\r\n  public showSettings = false;\r\n  public devMode: boolean = false;\r\n  public colorString: string = 'color-yellow';\r\n\r\n  public prioritizeValue: any;\r\n  public currentPrioritizeVsExecute: string;\r\n\r\n  private subscriptions: Subscription[] = [];\r\n  private datePickerObj: any = {};\r\n\r\n  constructor(\r\n    public taskService: CalendarTaskService,\r\n    private logger: ILogger,\r\n    private loadingController: LoadingController,\r\n    private translate: TranslateService,\r\n    private userService: IUserService,\r\n    private dateService: DateService,\r\n    private platform: Platform,\r\n    private timerService: TimerService,\r\n    private fireworksService: FireworksService,\r\n    private eventService: EventService,\r\n    private popoverController: PopoverController,\r\n    private serverDataSync: DataSyncServerService,\r\n    private modalService: ModalService,\r\n    private api: IApiProvider) { } // this shouldnt be here (api)\r\n\r\n  async ngOnInit() {\r\n    try {\r\n      const dateStart = new Date();\r\n      this.logger.logDebug('[ TASK-LIST WAITING FOR PLATFORM ]', new Date().toISOString());\r\n      await this.platform.ready();\r\n      this.logger.logDebug('[ TASK-LIST WAITING FOR USER ]', new Date().toISOString());\r\n      const success = await this.userService.awaitUserReady();\r\n      if (success === false) {\r\n        // console.log('Unable to get user, redirecting to login');\r\n        //console.log('logging out2');\r\n        await this.userService.logout();\r\n        location.reload();\r\n      }\r\n\r\n      await this.timerService.loadTimersFromDatabase();\r\n\r\n      this.logger.logDebug('[ TASK-LIST INIT STARTING ]', new Date().toISOString());\r\n\r\n      // const dateStart = new Date();\r\n      // console.log('ngoninit', this.auth.getUserId());\r\n      this.dateService.currentWorkDate = this.dateService.GetWorkDate(new Date());\r\n      this.currentDateTitle = this.getCurrentDateString();\r\n\r\n      this.dateService.cachingEnabled = true;\r\n      this.dateService.ResetCaching();\r\n\r\n      // console.log('currentWorkDate', this.currentWorkDate);\r\n      this.currentWorkDay = this.dateService.currentWorkDate.getDay();\r\n      this.currentDateTitle = this.getCurrentDateString();\r\n      // console.log('setShowSkipAllBtn done', Date.now() - dateStart.getTime());\r\n      // console.log('REFRESHTASKLISTLOCAL STARTING');\r\n      await this.refreshTaskListLocal();\r\n      // console.log('REFRESHTASKLISTLOCAL DONE');\r\n\r\n      await this.timerService.checkForOldTimer();\r\n\r\n      /*if (this.taskService.allGroups.length === 0) {\r\n        console.log('GROUPS EMPTY');\r\n      }*/\r\n\r\n      if (this.taskService.getAllTasks().length === 0 &&\r\n          UserService.currentUser.IsNew === false) {\r\n        // console.log('TASKS EMPTY');\r\n        // console.log('ENABLE2');\r\n        if (this.userService.getConfig(UserConfig.EnableCloudSyncKey) === true) {\r\n          // console.log('RELOADING FROM SERVER');\r\n          const loading = await this.loadingController.create({\r\n            message: this.translate.instant('menu.reloading-tasks'),\r\n            id: 'reload-server'\r\n          });\r\n          await loading.present();\r\n          // console.log('XXXXXXXX STARTING REFRESH 1'); // we have to get user from api\r\n          const apiUserDTO = await this.api.getUser(UserService.currentUserId); // this shouldnt be here IMO (api)\r\n          const apiUser = DTOUser.ToUser(apiUserDTO);\r\n          await this.serverDataSync.reloadAllGroupsAndTasksServer(new CancellationToken(), apiUser.LastActivityDate, apiUser.Config);\r\n          await loading.dismiss();\r\n        }\r\n      }\r\n\r\n      // Set ProgressBar + Skip all txt when ProgressBar event\r\n      this.subscriptions.push(this.eventService.on(EventService.EventIds.ProgressBar, async () => {\r\n        // console.log('PROGRESSBAR EVENT');\r\n        await this.setProgressBar(false);\r\n        this.eventService.emit(new EventData(EventService.EventIds.NotificationSyncedFalse, null));\r\n      }));\r\n\r\n      this.currentPrioritizeVsExecute = 'Execute';\r\n\r\n      this.subscriptions.push(this.eventService.on(EventService.EventIds.LanguageChanged, async () => {\r\n        this.currentDateTitle = this.getCurrentDateString();\r\n      }));\r\n\r\n      this.subscriptions.push(this.eventService.on(EventService.EventIds.Walkthrough, async () => {\r\n        await this.walkthrough();\r\n      }));\r\n\r\n      this.eventService.on(EventService.EventIds.SyncRequired, () => {\r\n        console.log('[][][][][][][] -  SYNC REQUIRED (RED)  - [][][][][][][]');\r\n        this.colorString = 'color-red';\r\n      });\r\n\r\n      this.eventService.on(EventService.EventIds.LocalSyncCompleted, () => {\r\n        console.log('[][][][][][][] -  SYNC COMPLETED (GREEN/ORANGE)  - [][][][][][][]');\r\n        if (this.userService.getConfig(UserConfig.EnableCloudSyncKey) === true) {\r\n          this.colorString = 'color-yellow';\r\n        } else {\r\n          this.colorString = 'color-green';\r\n        }\r\n      });\r\n\r\n      this.eventService.on(EventService.EventIds.ServerSyncCompleted, () => {\r\n        console.log('[][][][][][][] -  SYNC COMPLETED (GREEN)  - [][][][][][][]');\r\n        this.colorString = 'color-green';\r\n      });\r\n\r\n      this.subscriptions.push(this.eventService.on(EventService.EventIds.Resume, async () => {\r\n        this.logger.logEvent('resume event');\r\n        this.dateService.currentWorkDate = this.dateService.GetWorkDate(new Date());\r\n        this.currentDateTitle = this.getCurrentDateString();\r\n        this.eventService.emit(new EventData(EventService.EventIds.DateChanged, this.dateService.currentWorkDate));\r\n        this.taskService.setGroupsVisible();\r\n        // remove auto expand on resume\r\n        /*for (const group of this.taskService.allGroups) {\r\n          if (group.isVisible === true) {\r\n            group.isExpanded = true;\r\n          }\r\n        }*/\r\n        this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, null));\r\n\r\n        // CHECK IF NEED TO REFRESH TASKS\r\n        DataSyncServerService.GetLatestRequired = true;\r\n      }));\r\n\r\n      this.subscriptions.push(this.platform.resume.subscribe(async () => {\r\n        this.eventService.emit(new EventData(EventService.EventIds.Resume, null));\r\n      }));\r\n\r\n      // if (UserService.currentUserId === 'Hwnf3hxuFjgIai5QxvyDNdsCZFB2') {\r\n      this.devMode = true;\r\n      // }\r\n\r\n      // First time setup\r\n      if (UserService.currentUser.IsNew === true) {\r\n        await this.modalService.showWelcomeModal(WelcomeComponent);\r\n      }\r\n      \r\n      if (this.taskService.getAllTasks().length === 0) {\r\n        await this.modalService.showTaskSelectionModal(TaskSelectionComponent);\r\n        await this.createDemoTasks();\r\n        await this.walkthrough();\r\n        UserService.currentUser.IsNew = false;\r\n        await this.userService.saveUser(UserService.currentUser);\r\n      }\r\n\r\n      DataSyncServerService.ApplicationLoaded = true;\r\n      let elapsed = new Date().getTime() - dateStart.getTime();\r\n      this.logger.logDebug('[ TASK-LIST INIT COMPLETE ]', new Date().toISOString());\r\n      this.logger.logDebug('[[[[[[[[[[ (' + elapsed + ') ]]]]]]]]]]', new Date().toISOString());\r\n      \r\n\r\n      // DO A SYNC TO SEND MISSING TASKS TO SERVER\r\n      \r\n      this.eventService.emit(new EventData(EventService.EventIds.OnStartSync, null));\r\n\r\n      console.log('SYNC REQUIRED END OF LOADING');\r\n\r\n    } catch (error) {\r\n      this.logger.logError(error);\r\n      alert('An unexpected error occured while initializing the application, please log out and log back ' +\r\n            'in or reinstall the application. If it does not work please contact support');\r\n      alert(error);\r\n      // console.log('alert hihihi');\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    for (const sub of this.subscriptions) {\r\n      sub.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private async createDemoTasks() {\r\n    try {\r\n      const defaultNonRecurringGroupId = this.userService.getConfig(UserConfig.DefaultNonRecurringGroupId);\r\n      // console.log('NON RECURRING GROUP ID', defaultNonRecurringGroupId);\r\n      // console.log('ALL GROUPS', JSON.stringify(this.taskService.allGroups.map(p => p.GroupId)));\r\n      const calendarTask1 = new CalendarTask();\r\n      calendarTask1.Name = this.translate.instant('welcome.task-binary');\r\n      calendarTask1.Frequency = TaskFrequency.UntilDone;\r\n      calendarTask1.ResultType = ResultType.Binary;\r\n      calendarTask1.UserId = await this.userService.getCurrentUserId();\r\n      calendarTask1.AbsolutePosition = 1;\r\n      calendarTask1.InitialAbsolutePosition = 500;\r\n      calendarTask1.AssignedDate = DateUtils.RemoveHours(new Date());\r\n      calendarTask1.GroupId = defaultNonRecurringGroupId;\r\n      calendarTask1.InitialGroupId = defaultNonRecurringGroupId;\r\n      calendarTask1.InsertDate = new Date();\r\n      calendarTask1.CalendarTaskId = NumberUtils.getRandomId(); // we need it in case we void it before syncing\r\n\r\n      const calendarTask2 = new CalendarTask();\r\n      calendarTask2.Name = this.translate.instant('welcome.task-decimal');\r\n      calendarTask2.Frequency = TaskFrequency.UntilDone;\r\n      calendarTask2.ResultType = ResultType.Decimal;\r\n      calendarTask2.UserId = await this.userService.getCurrentUserId();\r\n      calendarTask2.AbsolutePosition = 2;\r\n      calendarTask2.InitialAbsolutePosition = 500;\r\n      calendarTask2.GroupId = defaultNonRecurringGroupId;\r\n      calendarTask2.InitialGroupId = defaultNonRecurringGroupId;\r\n      calendarTask2.AssignedDate = DateUtils.RemoveHours(new Date());\r\n      calendarTask2.InsertDate = new Date();\r\n      calendarTask2.CalendarTaskId = NumberUtils.getRandomId(); // we need it in case we void it before syncing\r\n\r\n      const calendarTask3 = new CalendarTask();\r\n      calendarTask3.Name = this.translate.instant('welcome.task-duration');\r\n      calendarTask3.Frequency = TaskFrequency.UntilDone;\r\n      calendarTask3.ResultType = ResultType.Duration;\r\n      calendarTask3.UserId = await this.userService.getCurrentUserId();\r\n      calendarTask3.AbsolutePosition = 3;\r\n      calendarTask3.InitialAbsolutePosition = 500;\r\n      calendarTask3.GroupId = defaultNonRecurringGroupId;\r\n      calendarTask3.InitialGroupId = defaultNonRecurringGroupId;\r\n      calendarTask3.AssignedDate = DateUtils.RemoveHours(new Date());\r\n      calendarTask3.InsertDate = new Date();\r\n      calendarTask3.CalendarTaskId = NumberUtils.getRandomId(); // we need it in case we void it before syncing\r\n\r\n      const calendarTask4 = new CalendarTask();\r\n      calendarTask4.Name = this.translate.instant('welcome.task-time-of-day');\r\n      calendarTask4.Frequency = TaskFrequency.UntilDone;\r\n      calendarTask4.ResultType = ResultType.TimeOfDay;\r\n      calendarTask4.UserId = await this.userService.getCurrentUserId();\r\n      calendarTask4.AbsolutePosition = 4;\r\n      calendarTask4.InitialAbsolutePosition = 500;\r\n      calendarTask4.GroupId = defaultNonRecurringGroupId;\r\n      calendarTask4.InitialGroupId = defaultNonRecurringGroupId;\r\n      calendarTask4.AssignedDate = DateUtils.RemoveHours(new Date());\r\n      calendarTask4.InsertDate = new Date();\r\n      calendarTask4.CalendarTaskId = NumberUtils.getRandomId(); // we need it in case we void it before syncing\r\n\r\n      await this.taskService.insertCalendarTasks([calendarTask1, calendarTask2, calendarTask3, calendarTask4]);\r\n\r\n      // EXPAND ALL GROUPS\r\n      for (const group of this.taskService.allGroups) {\r\n        if (group.isVisible === true) {\r\n          group.isExpanded = true;\r\n        }\r\n      }\r\n\r\n      this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, null));\r\n    } catch (error) {\r\n      // console.log('ERROR', error);\r\n      this.logger.logError(error);\r\n    }\r\n  }\r\n\r\n  private setShowSkipAllBtn() {\r\n    this.showBtnSkipEverything = this.dateService.currentWorkDate < DateUtils.RemoveHours(new Date()) &&\r\n                                 this.taskService.getAllTasks().some(p =>\r\n                                  this.taskService.isShown(p,\r\n                                                           this.dateService.currentWorkDate.getDay(),\r\n                                                           this.dateService.currentWorkDate) &&\r\n                                  !this.taskService.isDoneOrSkipped(p, this.dateService.currentWorkDate));\r\n  }\r\n\r\n  public getCurrentDateString(): string {\r\n    const todayWorkDate = this.dateService.GetWorkDate(new Date());\r\n    // this.logger.logEvent('todayWorkDate', { key: 'todayWorkDate', value: JSON.stringify(todayWorkDate)});\r\n\r\n    if (DateUtils.datesAreEqual(todayWorkDate, this.dateService.currentWorkDate)) {\r\n      return this.translate.instant('task-list.lbl-title-today');\r\n    } else if (DateUtils.datesAreEqual(DateUtils.AddDays(todayWorkDate, -1), this.dateService.currentWorkDate)) {\r\n      return this.translate.instant('task-list.lbl-title-yesterday');\r\n    } else if (DateUtils.datesAreEqual(DateUtils.AddDays(todayWorkDate, 1), this.dateService.currentWorkDate)) {\r\n      return this.translate.instant('task-list.lbl-title-tomorrow');\r\n    } else {\r\n      return this.dateService.currentWorkDate.toLocaleDateString();\r\n    }\r\n  }\r\n\r\n  public async addTaskButtonClick(): Promise<void> {\r\n    await this.modalService.showCreateTaskModal(TaskCreateComponent);\r\n  }\r\n\r\n  public loadPreviousDay(): void {\r\n    this.loadDay(-1);\r\n  }\r\n\r\n  private loadDay(addDays: number) {\r\n    this.dateService.cachingEnabled = true;\r\n    this.dateService.currentWorkDate = DateUtils.AddDays(this.dateService.currentWorkDate, addDays);\r\n    // console.log('*** LOAD DAY ***', this.dateService.currentWorkDate);\r\n    this.logger.logEvent('currentWorkDate', { key: 'currentWorkDate', value: JSON.stringify(this.dateService.currentWorkDate) });\r\n    this.currentWorkDay = this.dateService.currentWorkDate.getDay();\r\n    this.currentDateTitle = this.getCurrentDateString();\r\n    // this.setShowSkipAllBtn();\r\n    this.eventService.emit(new EventData(EventService.EventIds.DateChanged, this.dateService.currentWorkDate));\r\n    // console.log('LOAD DAY PROGRESSBAR');\r\n    this.dateService.cachingEnabled = false;\r\n    this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, null));\r\n    this.taskService.setGroupsVisible();\r\n  }\r\n\r\n  public loadNextDay(): void {\r\n    this.loadDay(1);\r\n  }\r\n\r\n  public btnSettingsClick(): void {\r\n    this.showSettings = !this.showSettings;\r\n  }\r\n\r\n  public prioritize(event: any) {\r\n    // console.log('event', event.detail.value);\r\n\r\n    const prioritize: boolean = event.detail.value === 'Prioritize' ? true : false;\r\n    if (prioritize === true) {\r\n      this.taskService.enableDragAndDrop = true;\r\n      this.eventService.emit(new EventData(EventService.EventIds.ToggleDragAndDrop, true));\r\n    } else {\r\n      this.taskService.enableDragAndDrop = false;\r\n      this.eventService.emit(new EventData(EventService.EventIds.ToggleDragAndDrop, false));\r\n    }\r\n  }\r\n\r\n  public async btnCurrentDateClick(): Promise<void> {\r\n\r\n    this.datePickerObj.setLabel = this.translate.instant('task-list.btn-calendar-set');\r\n    this.datePickerObj.todayLabel = this.translate.instant('task-list.btn-calendar-today');\r\n    this.datePickerObj.closeLabel = this.translate.instant('task-list.btn-calendar-close');\r\n    this.datePickerObj.monthsList = this.dateService.GetMonthAbbrs();\r\n    this.datePickerObj.weeksList = this.dateService.GetWeekAbbrs();\r\n    if (this.translate.currentLang === 'fr') {\r\n      this.datePickerObj.momentLocale = 'fr-CA';\r\n    } else {\r\n      this.datePickerObj.momentLocale = 'en-US';\r\n    }\r\n\r\n    const data = await this.modalService.showCurrentDateModal(Ionic4DatepickerModalComponent,\r\n                                                              this.datePickerObj,\r\n                                                              this.dateService.currentWorkDate);\r\n\r\n    if (data != null && data.data != null) {\r\n      const selectedDate = new Date(data.data.date);\r\n\r\n      if (!DateUtils.isValidDate(selectedDate)) { // standard cancel\r\n        return;\r\n      }\r\n\r\n      // console.log('SELECTED DATE', selectedDate);\r\n\r\n      const daysBetween = DateUtils.daysBetween(this.dateService.currentWorkDate, selectedDate);\r\n\r\n      // console.log('DAYS BETWEEN', daysBetween);\r\n\r\n      this.loadDay(daysBetween);\r\n    }\r\n  }\r\n\r\n  public toggleDragAndDrop(event: any) {\r\n    // console.log('TOGGLE', event.detail.checked);\r\n    this.eventService.emit(new EventData(EventService.EventIds.ToggleDragAndDrop, event.detail.checked));\r\n  }\r\n\r\n  private async refreshTaskListLocal(): Promise<void> {\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('task-list.msg-reloading-tasks'),\r\n      id: 'refreshSpinner'\r\n    });\r\n    loading.present();\r\n\r\n    try {\r\n      this.logger.logEvent('starting reloading', { key: 'currentWorkDate', value: JSON.stringify(new Date().toISOString())});\r\n      await this.taskService.reloadAllGroupsAndTasksLocal();\r\n    } catch (error) {\r\n      // console.log('error');\r\n      this.logger.logError(new Error('Unable to get tasks : ' + error.message));\r\n      // alert(this.translate.instant('task-list.msg-reloading-tasks-error')); // TODO : Detect first time setup\r\n      // alert('Unable to get tasks'); cant show alert because of first time setup\r\n    } finally {\r\n      this.logger.logEvent('finished reloading', { key: 'currentWorkDate', value: JSON.stringify(new Date().toISOString())});\r\n      // console.log('DISMISSING');\r\n      await loading.dismiss('refreshSpinner');\r\n      // console.log('DISMISSED');\r\n      this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, null));\r\n      // this.setShowSkipAllBtn();\r\n    }\r\n  }\r\n\r\n  private async setProgressBar(fireworks: boolean = false) {\r\n    // console.log('progress bar', this.taskService.allGroups);\r\n\r\n    this.taskService.setProgressText(this.dateService.currentWorkDate);\r\n\r\n    if (fireworks === true &&\r\n        this.taskService.currentProgressDone === this.taskService.currentProgressTotal &&\r\n        this.taskService.currentProgressDone > 0) {\r\n      await this.fireworksService.GenerateFireworks();\r\n    }\r\n\r\n    this.setShowSkipAllBtn();\r\n  }\r\n\r\n  private async setToExecute() {\r\n    this.currentPrioritizeVsExecute = 'Execute';\r\n  }\r\n\r\n  private async walkthrough() {\r\n\r\n    // console.log('WALKTHROUGH');\r\n\r\n    this.currentPrioritizeVsExecute = 'Prioritize';\r\n\r\n    for (let i = 0; i < 300 ; i++) {\r\n      if (document.querySelectorAll('#stepPostpone')[0] != null) {\r\n        break;\r\n      }\r\n\r\n      // console.log('walkthrough sleeping');\r\n      await ThreadUtils.sleep(100);\r\n    }\r\n\r\n    const introJS = introJs();\r\n    introJS.setOptions({\r\n      steps: [\r\n        {\r\n          element: document.querySelector('#addTaskBtn'),\r\n          intro: this.translate.instant('walkthrough.msg-intro'),\r\n        },\r\n        {\r\n          element: document.querySelectorAll('#stepActionButtons')[0],\r\n          intro: this.translate.instant('walkthrough.msg-action-buttons'),\r\n          position: 'auto',\r\n        },\r\n        {\r\n          element: document.querySelectorAll('#stepCardMenu')[0],\r\n          intro: this.translate.instant('walkthrough.msg-task-menu'),\r\n          position: 'auto'\r\n        },\r\n        {\r\n          element: document.querySelectorAll('#stepDragAndDrop')[0],\r\n          intro: this.translate.instant('walkthrough.msg-drag-and-drop'),\r\n          position: 'auto'\r\n        },\r\n        {\r\n          element: document.querySelectorAll('#stepPrioritizeExecute')[0],\r\n          intro: this.translate.instant('walkthrough.msg-prioritize-and-execute'),\r\n          position: 'auto'\r\n        },\r\n        {\r\n          element: document.querySelectorAll('#stepPostpone')[0],\r\n          intro: this.translate.instant('walkthrough.msg-postpone'),\r\n          position: 'auto'\r\n        },\r\n        {\r\n          element: document.querySelectorAll('#stepSkip')[0],\r\n          intro: this.translate.instant('walkthrough.msg-skip'),\r\n          position: 'auto'\r\n        },\r\n        {\r\n          element: document.querySelectorAll('#stepTrash')[4],\r\n          intro: this.translate.instant('walkthrough.msg-delete'),\r\n          position: 'auto'\r\n        },\r\n        {\r\n          element: document.querySelectorAll('#stepStartTimer')[0],\r\n          intro: this.translate.instant('walkthrough.msg-start'),\r\n          position: 'auto',\r\n        },\r\n        {\r\n          element: document.querySelectorAll('#stepEnterResult')[0],\r\n          intro: this.translate.instant('walkthrough.msg-results'),\r\n          position: 'auto'\r\n        },\r\n        {\r\n          intro: this.translate.instant('walkthrough.msg-void'),\r\n          position: 'auto'\r\n        },\r\n        {\r\n          element: document.querySelectorAll('#stepGroupArrow')[0],\r\n          intro: this.translate.instant('walkthrough.msg-group-title'),\r\n          position: 'auto'\r\n        },\r\n        {\r\n          element: document.querySelectorAll('#stepEditGroup')[0],\r\n          intro: this.translate.instant('walkthrough.msg-edit-group'),\r\n          position: 'auto'\r\n        },\r\n        {\r\n          element: document.querySelectorAll('#stepChangeDate')[0],\r\n          intro: this.translate.instant('walkthrough.msg-change-date'),\r\n          position: 'auto'\r\n        },\r\n        {\r\n          element: document.querySelectorAll('#stepSelectDate')[0],\r\n          intro: this.translate.instant('walkthrough.msg-select-date'),\r\n          position: 'auto'\r\n        },\r\n        {\r\n          element: document.querySelectorAll('#stepMenu')[0],\r\n          intro: this.translate.instant('walkthrough.msg-menu'),\r\n          position: 'auto'\r\n        },\r\n        {\r\n          element: document.querySelectorAll('#stepNewTask')[0],\r\n          intro: this.translate.instant('walkthrough.msg-new-task'),\r\n          position: 'auto'\r\n        },\r\n      ],\r\n      overlayOpacity: 0.3,\r\n      showStepNumbers: false,\r\n    });\r\n    const that = this;\r\n    introJS.onbeforechange(function() {\r\n      if (this._currentStep === 8) {\r\n        // console.log('what is happening');\r\n        that.setToExecute();\r\n      }\r\n      if (this._currentStep === 9) {\r\n\r\n      }\r\n    });\r\n    introJS.start();\r\n  }\r\n\r\n  public async popoverMenuClick(event) {\r\n    event.stopPropagation();\r\n    const popover = await this.popoverController.create({\r\n      component: TaskListPopoverComponent,\r\n      cssClass: 'group-popover',\r\n      event,\r\n      translucent: false,\r\n      animated: false,\r\n      showBackdrop: false,\r\n    });\r\n    return await popover.present();\r\n  }\r\n }\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { SelectableTask } from 'src/app/models/Core/selectable-task';\r\nimport { DayOfWeek } from 'src/app/models/Core/day-of-week.enum';\r\n\r\n@Component({\r\n  selector: 'app-task-selection-card',\r\n  templateUrl: './task-selection-card.component.html',\r\n  styleUrls: ['./task-selection-card.component.scss'],\r\n})\r\nexport class TaskSelectionCardComponent implements OnInit {\r\n\r\n  @Input() currentTask: SelectableTask;\r\n\r\n  public daysOfWeek: DayOfWeek[] = [ DayOfWeek.Monday,\r\n    DayOfWeek.Tuesday,\r\n    DayOfWeek.Wednesday,\r\n    DayOfWeek.Thursday,\r\n    DayOfWeek.Friday,\r\n    DayOfWeek.Saturday,\r\n    DayOfWeek.Sunday\r\n  ];\r\n\r\n  public taskSelected: boolean = false;\r\n  public showDescription: boolean = false;\r\n\r\n  @Output() checkChangedEvent: EventEmitter<any[]> = new EventEmitter();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.showDescription = this.currentTask.Description != null &&\r\n                           this.currentTask.Description.length > 0;\r\n  }\r\n\r\n  public cardClick() {\r\n    this.taskSelected = !this.taskSelected;\r\n    this.checkChangedEvent.emit([this.taskSelected as any,\r\n                                 this.currentTask as any]);\r\n  }\r\n\r\n  public checkChanged() {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  public cbDayOfWeek(event: any, dayOfWeek: number): void {\r\n    if (event.detail.checked) {\r\n      this.currentTask.RequiredDays.push(dayOfWeek);\r\n    } else {\r\n      this.currentTask.RequiredDays = this.currentTask.RequiredDays.filter(p => p.valueOf() !== dayOfWeek);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { SelectableTask } from 'src/app/models/Core/selectable-task';\r\nimport { SelectableTaskService } from 'src/app/services/selectable-task.service';\r\nimport { DayOfWeek } from 'src/app/models/Core/day-of-week.enum';\r\nimport { ModalController, LoadingController, Platform } from '@ionic/angular';\r\nimport { CalendarTask } from 'src/app/models/Core/calendar-task';\r\nimport { CalendarTaskService } from 'src/app/services/calendar-task.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ILogger } from 'src/app/interfaces/i-logger';\r\nimport { Subscription } from 'rxjs';\r\nimport NumberUtils from 'src/app/shared/number-utils';\r\nimport { IUserService } from 'src/app/interfaces/i-user-service';\r\nimport { TaskGroup } from 'src/app/models/Core/task-group';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\nimport { TaskFrequency } from 'src/app/models/Core/task-frequency.enum';\r\n\r\n@Component({\r\n  selector: 'app-task-selection',\r\n  templateUrl: './task-selection.component.html',\r\n  styleUrls: ['./task-selection.component.scss'],\r\n})\r\nexport class TaskSelectionComponent implements OnInit, OnDestroy {\r\n\r\n  public selectableTasks: SelectableTask[] = [];\r\n  public selectableTasksDaily: SelectableTask[] = [];\r\n  public selectableTasksSpecial: SelectableTask[] = [];\r\n  public selectedTasks: SelectableTask[] = [];\r\n  public showAssignedDate: boolean;\r\n\r\n  private backButtonSubscription: Subscription;\r\n\r\n  public daysOfWeek: DayOfWeek[] = [\r\n    DayOfWeek.Monday,\r\n    DayOfWeek.Tuesday,\r\n    DayOfWeek.Wednesday,\r\n    DayOfWeek.Thursday,\r\n    DayOfWeek.Friday,\r\n    DayOfWeek.Saturday,\r\n    DayOfWeek.Sunday\r\n  ];\r\n\r\n  constructor(private selectableTaskService: SelectableTaskService,\r\n              private modalController: ModalController,\r\n              private calendarTaskService: CalendarTaskService,\r\n              private loadingController: LoadingController,\r\n              private userService: IUserService,\r\n              private translate: TranslateService,\r\n              private logger: ILogger,\r\n              private platform: Platform) { }\r\n\r\n  ngOnInit() {\r\n    this.selectableTasks = this.selectableTaskService.getAllSelectableTasks();\r\n    this.selectableTasksSpecial = this.selectableTasks.filter(p => p.AdditionnalTask != null);\r\n    this.selectableTasksDaily = this.selectableTasks.filter(p => p.Frequency === TaskFrequency.Daily &&\r\n                                                                 p.AdditionnalTask == null);\r\n\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await this.closePopup();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.backButtonSubscription.unsubscribe();\r\n  }\r\n\r\n  public async closePopup(): Promise<void> {\r\n    await this.modalController.dismiss(false, null, ModalService.ModalIds.TaskSelection);\r\n  }\r\n\r\n  public async btnSaveClick(): Promise<void> {\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('task-selection.msg-saving-tasks'),\r\n    });\r\n    await loading.present();\r\n\r\n    // This only works for Welcome\r\n    const morningRoutinesGroup = new TaskGroup();\r\n    morningRoutinesGroup.GroupId = NumberUtils.getRandomId();\r\n    morningRoutinesGroup.InsertDate = new Date();\r\n    morningRoutinesGroup.UserId = await this.userService.getCurrentUserId();\r\n    morningRoutinesGroup.Position = 1;\r\n    morningRoutinesGroup.InitialPosition = 500;\r\n    morningRoutinesGroup.RecurringDefault = true;\r\n    morningRoutinesGroup.Name = this.translate.instant('group-create.morning-routine-group');\r\n    // console.log('Morning GROUP = ', morningRoutinesGroup);\r\n\r\n    const TodoGroup = new TaskGroup();\r\n    TodoGroup.GroupId = NumberUtils.getRandomId();\r\n    TodoGroup.InsertDate = new Date();\r\n    TodoGroup.UserId = await this.userService.getCurrentUserId();\r\n    TodoGroup.Position = 2;\r\n    TodoGroup.InitialPosition = 500;\r\n    TodoGroup.RecurringDefault = false;\r\n    TodoGroup.Name = this.translate.instant('group-create.todo-group');\r\n    // console.log('Todo GROUP = ', TodoGroup);\r\n    // SET DEFAULT NonRecurring\r\n\r\n    const regularRoutinesGroup = new TaskGroup();\r\n    regularRoutinesGroup.GroupId = NumberUtils.getRandomId();\r\n    regularRoutinesGroup.InsertDate = new Date();\r\n    regularRoutinesGroup.UserId = await this.userService.getCurrentUserId();\r\n    regularRoutinesGroup.Position = 3;\r\n    regularRoutinesGroup.InitialPosition = 500;\r\n    regularRoutinesGroup.RecurringDefault = true;\r\n    regularRoutinesGroup.Name = this.translate.instant('group-create.regular-routine-group');\r\n    // console.log('Regular GROUP = ', regularRoutinesGroup);\r\n    // SET DEFAULT Recurring\r\n\r\n    const eveningRoutinesGroup = new TaskGroup();\r\n    eveningRoutinesGroup.GroupId = NumberUtils.getRandomId();\r\n    eveningRoutinesGroup.InsertDate = new Date();\r\n    eveningRoutinesGroup.UserId = await this.userService.getCurrentUserId();\r\n    eveningRoutinesGroup.Position = 4;\r\n    eveningRoutinesGroup.InitialPosition = 500;\r\n    eveningRoutinesGroup.RecurringDefault = true;\r\n    eveningRoutinesGroup.Name = this.translate.instant('group-create.evening-routine-group');\r\n    // console.log('Evening GROUP = ', eveningRoutinesGroup);\r\n\r\n    let newGroups = false;\r\n    if (this.calendarTaskService.allGroups.filter(p => p.GroupId !== CalendarTaskService.UnassignedId).length === 0) {\r\n      // console.log('NEW GROUPS');\r\n      newGroups = true;\r\n      await this.calendarTaskService.insertGroup(morningRoutinesGroup);\r\n      await this.calendarTaskService.insertGroup(TodoGroup);\r\n      await this.calendarTaskService.insertGroup(regularRoutinesGroup);\r\n      await this.calendarTaskService.insertGroup(eveningRoutinesGroup);\r\n      await this.userService.setDefaultRecurringGroupId(regularRoutinesGroup.GroupId);\r\n      await this.userService.setDefaultNonRecurringGroupId(TodoGroup.GroupId);\r\n    }/* else {\r\n      console.log('NOT NEW GROUPS', this.calendarTaskService.allGroups);\r\n    }*/\r\n\r\n    const toInsertTasks: CalendarTask[] = [];\r\n    for (const selectedTask of this.selectedTasks) {\r\n      const calendarTask = new CalendarTask();\r\n      calendarTask.Name = selectedTask.Name;\r\n      calendarTask.ResultType = selectedTask.ResultType;\r\n      calendarTask.Frequency = selectedTask.Frequency;\r\n      calendarTask.AbsolutePosition = selectedTask.AbsolutePosition;\r\n      calendarTask.RequiredDays = this.daysOfWeek;\r\n      calendarTask.UserId = (await this.userService.getCurrentUser()).UserId;\r\n      calendarTask.InsertDate = new Date();\r\n      calendarTask.CalendarTaskId = NumberUtils.getRandomId();\r\n\r\n      if (newGroups === true) {\r\n        if (selectedTask.GroupName === SelectableTaskService.MorningRoutinesGroupName) {\r\n          // console.log('MORNING', calendarTask);\r\n          calendarTask.GroupId = morningRoutinesGroup.GroupId;\r\n        }\r\n        if (selectedTask.GroupName === SelectableTaskService.RegularRoutinesGroupName) {\r\n          // console.log('REGULAR', calendarTask);\r\n          calendarTask.GroupId = regularRoutinesGroup.GroupId;\r\n        }\r\n        if (selectedTask.GroupName === SelectableTaskService.EveningRoutinesGroupName) {\r\n          // console.log('EVENING', calendarTask);\r\n          calendarTask.GroupId = eveningRoutinesGroup.GroupId;\r\n        }\r\n      }/* else {\r\n        console.log('NEWGROUP1 FALSE');\r\n      }*/\r\n\r\n      if (selectedTask.AdditionnalTask != null) {\r\n        // console.log('ADDITIONNAL TASK : ', selectedTask.AdditionnalTask);\r\n        const calendarTask2 = new CalendarTask();\r\n        calendarTask.Name = selectedTask.AdditionnalTask.Task1Name;\r\n        calendarTask.StatType = selectedTask.AdditionnalTask.StatType1;\r\n        calendarTask2.Name = selectedTask.AdditionnalTask.Task2Name;\r\n        calendarTask2.ResultType = selectedTask.ResultType;\r\n        calendarTask2.Frequency = selectedTask.Frequency;\r\n        calendarTask2.AbsolutePosition = selectedTask.AdditionnalTask.AbsolutePositionTask2;\r\n        calendarTask2.RequiredDays = this.daysOfWeek;\r\n        calendarTask2.StatType = selectedTask.AdditionnalTask.StatType2;\r\n        calendarTask2.UserId = (await this.userService.getCurrentUser()).UserId;\r\n        calendarTask2.CalendarTaskId = NumberUtils.getRandomId();\r\n\r\n        // ADDITIONNAL TASKS ARE ALWAYS IN THE EVENING\r\n        if (newGroups === true) {\r\n          calendarTask2.GroupId = eveningRoutinesGroup.GroupId;\r\n        } /*else {\r\n          console.log('NEWGROUP2 FALSE');\r\n        }*/\r\n\r\n        toInsertTasks.push(calendarTask2);\r\n        // await this.calendarTaskService.insertCalendarTask(calendarTask2);\r\n      }\r\n\r\n      // console.log('insert task', calendarTask);\r\n      toInsertTasks.push(calendarTask);\r\n      // await this.calendarTaskService.insertCalendarTask(calendarTask);\r\n    }\r\n\r\n    await this.calendarTaskService.insertCalendarTasks(toInsertTasks);\r\n    // this.eventService.emit(new EventData(EventService.EventIds.PrioritizeVsExecute, null));\r\n    await loading.dismiss();\r\n    await this.closePopup();\r\n  }\r\n\r\n  public taskSelected(data) {\r\n    // this.logger.logEvent('taskSelected', { key: 'data', value: JSON.stringify(data)});\r\n\r\n    const toRemoveIndexes: number[] = [];\r\n    for (const task of this.selectableTasks) {\r\n      const receivedChecked = data[0] as boolean;\r\n      const receivedTask = data[1] as SelectableTask;\r\n\r\n      if (task === receivedTask) {\r\n        if (receivedChecked) {\r\n          this.selectedTasks.push(task);\r\n        } else {\r\n          const taskIndex = this.selectedTasks.findIndex(p => p === task);\r\n          toRemoveIndexes.push(taskIndex);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (const index of toRemoveIndexes) {\r\n      this.selectedTasks.splice(index, 1);\r\n    }\r\n\r\n    // this.logger.logEvent('taskSelected', { key: 'this.selectedTasks', value: JSON.stringify(this.selectedTasks)});\r\n  }\r\n}\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ModalController, Platform } from '@ionic/angular';\r\nimport { Subscription } from 'rxjs';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-terms',\r\n  templateUrl: './terms.component.html',\r\n  styleUrls: ['./terms.component.scss'],\r\n})\r\nexport class TermsComponent implements OnInit, OnDestroy {\r\n\r\n  private backButtonSubscription: Subscription;\r\n\r\n  constructor(private modalController: ModalController,\r\n              private platform: Platform) { }\r\n\r\n  ngOnInit() {\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await this.closePopup();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.backButtonSubscription.unsubscribe();\r\n  }\r\n\r\n  public async closePopup(): Promise<void> {\r\n    await this.modalController.dismiss(null, null, ModalService.ModalIds.Terms);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { Language } from 'src/app/models/Core/language.enum';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AlertController, ModalController, Platform, PickerController, LoadingController } from '@ionic/angular';\r\nimport { Subscription } from 'rxjs';\r\nimport { IUserService } from 'src/app/interfaces/i-user-service';\r\nimport { UserConfig } from 'src/app/models/Core/user-config';\r\nimport { User } from 'src/app/models/Core/user';\r\n//import { NotificationService } from 'src/app/services/notification.service';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\nimport { ReportService } from 'src/app/services/report.service';\r\nimport { AlertService } from 'src/app/services/alert.service';\r\nimport { AlertOptions } from '@ionic/core';\r\nimport { UserService } from 'src/app/services/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-settings',\r\n  templateUrl: './user-settings.component.html',\r\n  styleUrls: ['./user-settings.component.scss'],\r\n})\r\nexport class UserSettingsComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  private hourChoices: string[] = ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11',\r\n                                   '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'];\r\n\r\n  public NoSyncValue: string = 'NoSync';\r\n  public SyncValue: string = 'Sync';\r\n  public keepPortraitEnabled: boolean = false;\r\n\r\n  public currentLanguage: Language = Language.English;\r\n  public endOfDayTime: string;\r\n  public incompleteTime: string;\r\n  public autoSkipEnabled: boolean;\r\n  public inactivityTime: string;\r\n  private backButtonSubscription: Subscription;\r\n  public currentCloudSyncEnabled: boolean;\r\n  public syncCurrentValue: string;\r\n\r\n  constructor(private userService: IUserService,\r\n              private translate: TranslateService,\r\n              private alertCtrl: AlertController,\r\n              private modalController: ModalController,\r\n              private platform: Platform,\r\n              private pickerCtrl: PickerController,\r\n              //private notificationService: NotificationService, TODO CAPACITOR\r\n              private loading: LoadingController,\r\n              private reportService: ReportService,\r\n              private alertService: AlertService) { }\r\n\r\n  ngOnInit() {\r\n    this.resetBackButton();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.backButtonSubscription.unsubscribe();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.userService.getCurrentUser().then(user => {\r\n      // console.log('[1]ngAfterViewInit user', user);\r\n\r\n      if (User.getConfig(user, UserConfig.PreferedLanguageKey) === Language.French) {\r\n        this.currentLanguage = Language.French;\r\n      } else {\r\n        this.currentLanguage = Language.English;\r\n      }\r\n\r\n      if (User.getConfig(user, UserConfig.EndOfDayTimeKey) == null ||\r\n          User.getConfig(user, UserConfig.EndOfDayTimeKey).length === 0) {\r\n        this.endOfDayTime = '04:00';\r\n      } else {\r\n        this.endOfDayTime = User.getConfig(user, UserConfig.EndOfDayTimeKey);\r\n      }\r\n\r\n      // console.log('ENABLE3');\r\n      if (User.getConfig(user, UserConfig.EnableCloudSyncKey) === true) {\r\n        this.syncCurrentValue = this.SyncValue;\r\n        this.currentCloudSyncEnabled = true;\r\n      } else {\r\n        this.syncCurrentValue = this.NoSyncValue;\r\n        this.currentCloudSyncEnabled = false;\r\n      }\r\n\r\n      if (User.getConfig(user, UserConfig.AutoSkipAfter2DaysId) === true) {\r\n        this.autoSkipEnabled = true;\r\n      } else {\r\n        this.autoSkipEnabled = false;\r\n      }\r\n\r\n      if (User.getConfig(user, UserConfig.KeepPortrait) === true) {\r\n        this.keepPortraitEnabled = true;\r\n      } else {\r\n        this.keepPortraitEnabled = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  public async btnHelpClick(): Promise<void> {\r\n    const alert = await this.alertCtrl.create({\r\n      message: this.translate.instant('menu.end-of-day-help'),\r\n    });\r\n\r\n    await alert.present();\r\n\r\n    this.setBackButtonAlert(alert);\r\n    await alert.onDidDismiss();\r\n    this.resetBackButton();\r\n  }\r\n\r\n  public async languageChanged(event: any) {\r\n    await this.userService.setLanguage(event.detail.value);\r\n    //await this.notificationService.resetAllNotifications(); TODO CAPACITOR\r\n  }\r\n\r\n  public async autoSkipChanged(event: any) {\r\n    // console.log('AUTO SKIP CHANGED TO ', event.detail.checked);\r\n    User.setConfig(UserService.currentUser, UserConfig.AutoSkipAfter2DaysId, event.detail.checked);\r\n    await this.userService.saveUser(UserService.currentUser);\r\n  }\r\n\r\n  public async closePopup(): Promise<void> {\r\n    await this.modalController.dismiss(false, null, ModalService.ModalIds.UserSettings);\r\n  }\r\n\r\n  public async privacyChanged(event: any) {\r\n    if (event.detail.value === 'NoSync') {\r\n      this.currentCloudSyncEnabled = false;\r\n      await this.userService.setCloudSync(false);\r\n    } else {\r\n      this.currentCloudSyncEnabled = true;\r\n      await this.userService.setCloudSync(true);\r\n    }\r\n  }\r\n\r\n  public async btnDownloadMyDataClick() {\r\n    const loading = await this.loading.create({\r\n      message: this.translate.instant('user-settings.download-data-loading')\r\n    });\r\n\r\n    await loading.present();\r\n\r\n    await this.reportService.getAllData();\r\n\r\n    await loading.dismiss();\r\n  }\r\n\r\n  public async btnDeleteMyDataClick() {\r\n    const handler: (alertData: any) => void = (alertData) => {\r\n      this.deleteAccount();\r\n    };\r\n\r\n    const alertOptions: AlertOptions = this.alertService.getDeleteAccountAlertOptions(handler);\r\n    const alert = await this.alertCtrl.create(alertOptions);\r\n    await alert.present();\r\n\r\n    const subscription = this.platform.backButton.subscribe(async () => {\r\n      await alert.dismiss();\r\n    });\r\n\r\n    await alert.onDidDismiss();\r\n\r\n    subscription.unsubscribe();\r\n  }\r\n\r\n  public async deleteAccount() {\r\n    // console.log('Deleting account');\r\n    const loading = await this.loading.create({message: this.translate.instant('alert.deleting-account')});\r\n    await loading.present();\r\n\r\n    const success = await this.userService.permanentlyDeleteAccount();\r\n    await loading.dismiss();\r\n\r\n    if (success === true) {\r\n      const alert = await this.alertCtrl.create({message: this.translate.instant('alert.delete-account-success')});\r\n      await alert.present();\r\n      await alert.onDidDismiss();\r\n      await this.userService.logout();\r\n      location.reload();\r\n    } else {\r\n      const alert = await this.alertCtrl.create({message: this.translate.instant('alert.delete-account-failed')});\r\n      await alert.present();\r\n      await alert.onDidDismiss();\r\n      return;\r\n    }\r\n  }\r\n\r\n  public async btnEnterTimeClick(): Promise<void> {\r\n    const picker = await this.pickerCtrl.create({\r\n      columns: this.getEndOfDayColumns(),\r\n      cssClass: 'time-picker',\r\n      animated: false,\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-cancel'),\r\n          role: 'cancel'\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-ok'),\r\n          handler: (value) => {\r\n            // console.log('HOUR', value.Hours.value);\r\n            // console.log('MINUTES', value.Minutes.value);\r\n\r\n            const hourString = Number(value.Hours.value) > 9 ?\r\n                                 value.Hours.value :\r\n                                 '0' + value.Hours.value;\r\n\r\n            const minutesString = Number(value.Minutes.value) > 9 ?\r\n                                 value.Minutes.value :\r\n                                 '0' + value.Minutes.value;\r\n\r\n            this.endOfDayTime = hourString + ':' + minutesString;\r\n\r\n            // console.log('END OF DAY TIME', this.endOfDayTime);\r\n\r\n            this.userService.getCurrentUser().then((user) => {\r\n              if (User.getConfig(user, UserConfig.EndOfDayTimeKey) !== this.endOfDayTime) {\r\n                User.setConfig(user, UserConfig.EndOfDayTimeKey, this.endOfDayTime);\r\n                this.userService.saveUser(user);\r\n              }\r\n            });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    await picker.present();\r\n\r\n    this.setBackButtonPicker(picker);\r\n    await picker.onDidDismiss();\r\n    this.resetBackButton();\r\n  }\r\n\r\n  public async keepPortraitChanged(event: any) {\r\n    // console.log('keepverticalchanged Value', event);\r\n    try {\r\n      if (this.platform.is('capacitor')) {\r\n        if (event.detail.checked === true) {\r\n          // set to portrait\r\n          screen.orientation.lock('portrait');\r\n          this.userService.setKeepPortrait(true);\r\n          /*this.currentCloudSyncEnabled = false;\r\n          await this.userService.setCloudSync(false);*/\r\n        } else {\r\n          screen.orientation.unlock();\r\n          this.userService.setKeepPortrait(false);\r\n          /*this.currentCloudSyncEnabled = true;\r\n          await this.userService.setCloudSync(true);*/\r\n        }\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  private getColumnOptions1() {\r\n    const options = [];\r\n    for (const hourValue of this.hourChoices) {\r\n      options.push({\r\n        text: hourValue,\r\n        value: Number(hourValue)\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  private getColumnOptions2() {\r\n    const options = [];\r\n    options.push({\r\n      text: '00',\r\n      value: Number(0)\r\n    });\r\n\r\n    return options;\r\n  }\r\n\r\n  private getEndOfDayColumns() {\r\n    const currentHour = Number(this.endOfDayTime.substring(0, 2));\r\n    // console.log('CURRENT HOUR', currentHour);\r\n    // const currentMinutes = Number(currentSelection.substring(3, 3 + 2));\r\n    const HourIndex = this.hourChoices.findIndex(p => Number(p) === currentHour);\r\n    // console.log('CURRENT HourIndex', HourIndex, this.hourChoices);\r\n\r\n    const MinuteIndex = 0;\r\n    const columns = [];\r\n\r\n    columns.push({\r\n      name: 'Hours',\r\n      selectedIndex: HourIndex,\r\n      options: this.getColumnOptions1(),\r\n    });\r\n\r\n    columns.push({\r\n      name: 'Minutes',\r\n      selectedIndex: MinuteIndex,\r\n      options: this.getColumnOptions2()\r\n    });\r\n\r\n    // console.log('columns');\r\n\r\n    return columns;\r\n  }\r\n\r\n  private setBackButtonPicker(picker: HTMLIonPickerElement) {\r\n    this.backButtonSubscription.unsubscribe();\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await picker.dismiss();\r\n    });\r\n  }\r\n\r\n  private setBackButtonAlert(alert: HTMLIonAlertElement) {\r\n    this.backButtonSubscription.unsubscribe();\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await alert.dismiss();\r\n    });\r\n  }\r\n\r\n  private resetBackButton() {\r\n    if (this.backButtonSubscription != null) {\r\n      this.backButtonSubscription.unsubscribe();\r\n    }\r\n\r\n    this.backButtonSubscription = this.platform.backButton.subscribe(async () => {\r\n      await this.closePopup();\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { Language } from 'src/app/models/Core/language.enum';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { ModalController, AlertController, PickerController, Platform } from '@ionic/angular';\r\nimport { IUserService } from 'src/app/interfaces/i-user-service';\r\nimport { UserConfig } from 'src/app/models/Core/user-config';\r\nimport { User } from 'src/app/models/Core/user';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\n\r\n@Component({\r\n  selector: 'app-welcome',\r\n  templateUrl: './welcome.component.html',\r\n  styleUrls: ['./welcome.component.scss'],\r\n})\r\nexport class WelcomeComponent implements OnInit, AfterViewInit {\r\n\r\n  private hourChoices: string[] = ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11',\r\n                                   '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'];\r\n\r\n  public NoSyncValue: string = 'NoSync';\r\n  public SyncValue: string = 'Sync';\r\n\r\n  public currentCloudSyncEnabled: boolean;\r\n  public currentLanguage: Language = Language.English;\r\n  public syncCurrentValue: string;\r\n  public endOfDayTime: string;\r\n\r\n  constructor(private userService: IUserService,\r\n              private modalController: ModalController,\r\n              private auth: AuthenticationService,\r\n              private translate: TranslateService,\r\n              private alertCtrl: AlertController,\r\n              private pickerCtrl: PickerController,\r\n              private platform: Platform) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  async ngAfterViewInit(): Promise<void> {\r\n    const fireUser = await this.auth.getUser();\r\n    const user = await this.userService.getUser(fireUser.uid);\r\n    if (User.getConfig(user, UserConfig.PreferedLanguageKey) === Language.French) {\r\n      this.currentLanguage = Language.French;\r\n    } else {\r\n      this.currentLanguage = Language.English;\r\n    }\r\n\r\n    // this.syncCurrentValue = this.NoSyncValue; // No default value\r\n\r\n    if (User.getConfig(user, UserConfig.EndOfDayTimeKey) == null ||\r\n        User.getConfig(user, UserConfig.EndOfDayTimeKey).length === 0) {\r\n      this.endOfDayTime = '04:00';\r\n    } else {\r\n      this.endOfDayTime = User.getConfig(user, UserConfig.EndOfDayTimeKey);\r\n    }\r\n  }\r\n\r\n  public async btnNextClick() {\r\n    // Validation\r\n    if (this.syncCurrentValue == null) {\r\n      alert(this.translate.instant('welcome.msg-privacy-mandatory'));\r\n      return;\r\n    }\r\n\r\n    await this.modalController.dismiss(null, null, ModalService.ModalIds.Welcome);\r\n  }\r\n\r\n  public async languageChanged(event: any) {\r\n    await this.userService.setLanguage(event.detail.value);\r\n  }\r\n\r\n  public async privacyChanged(event: any) {\r\n    if (event.detail.value === 'NoSync') {\r\n      this.currentCloudSyncEnabled = false;\r\n      await this.userService.setCloudSync(false);\r\n    } else {\r\n      this.currentCloudSyncEnabled = false;\r\n      await this.userService.setCloudSync(true);\r\n    }\r\n  }\r\n\r\n  public async btnHelpClick(): Promise<void> {\r\n    const alert = await this.alertCtrl.create({\r\n      message: this.translate.instant('menu.end-of-day-help'),\r\n    });\r\n\r\n    await alert.present();\r\n\r\n    const subscription = this.platform.backButton.subscribe(async () => {\r\n      await alert.dismiss();\r\n    });\r\n    await alert.onDidDismiss();\r\n    subscription.unsubscribe();\r\n  }\r\n}\r\n","import { DTOCalendarTask } from '../models/DTO/dto-calendar-task';\r\nimport { DTOGetCalendarTaskRequest } from '../models/DTO/dto-get-calendar-task-request';\r\nimport { DTOTaskHistory } from '../models/DTO/dto-task-history';\r\nimport { DTOBugReport } from '../models/DTO/dto-bug-report';\r\nimport { DTOUser } from '../models/DTO/dto-user';\r\nimport { DTOTaskGroup } from '../models/DTO/dto-task-group';\r\n\r\nexport abstract class IApiProvider {\r\n  abstract insertCalendarTasks(tasks: DTOCalendarTask[]): Promise<string[]>;\r\n  abstract updateCalendarTasks(tasks: DTOCalendarTask[]): Promise<boolean>;\r\n  abstract getTasks(request: DTOGetCalendarTaskRequest): Promise<DTOCalendarTask[]>;\r\n  abstract insertTaskHistories(histories: DTOTaskHistory[]): Promise<string[]>;\r\n  abstract updateTaskHistories(histories: DTOTaskHistory[]): Promise<boolean>;\r\n  abstract sendReport(report: DTOBugReport): Promise<boolean>;\r\n  abstract getUser(userId: string): Promise<DTOUser>;\r\n  abstract saveUser(user: DTOUser): Promise<boolean>;\r\n  abstract getGroups(userId: string): Promise<DTOTaskGroup[]>;\r\n  abstract insertGroup(group: DTOTaskGroup): Promise<boolean>;\r\n  abstract updateGroup(group: DTOTaskGroup): Promise<boolean>;\r\n  abstract downloadAllData(userId: string): Promise<string>;\r\n  abstract permanentlyDeleteAccount(userId: string): Promise<boolean>;\r\n}\r\n","import { User } from '@angular/fire/auth';\r\n\r\nexport abstract class IAuthenticationService {\r\n  abstract currentUserIsAuthenticated(): Promise<boolean>;\r\n  abstract logout(): Promise<void>;\r\n  abstract getUserId(): Promise<string>;\r\n  abstract getUser(): Promise<User>;//abstract getUser(): Promise<firebase.User>;\r\n  abstract setLoginPersistance(): Promise<void>;\r\n  abstract getUserJsonWebToken(): Promise<string>;\r\n  abstract signInWithEmailPassword(email: string, password: string);\r\n  abstract createAccount(email: string, password: string): Promise<string>;\r\n}\r\n","import { DTOCalendarTask } from '../models/DTO/dto-calendar-task';\r\nimport { DTOTaskHistory } from '../models/DTO/dto-task-history';\r\nimport { DTOTaskTimer } from '../models/DTO/dto-timer';\r\nimport { DTOTaskGroup } from '../models/DTO/dto-task-group';\r\n\r\nexport abstract class IDataSyncLocalService {\r\n  abstract allDataIsSynced(): Promise<boolean>;\r\n  abstract getUnsynchronized(): Promise<string[]>;\r\n  abstract processQueue(): Promise<void>;\r\n  abstract queueUpdateTaskHistory(history: DTOTaskHistory): Promise<any>;\r\n  abstract queueInsertTaskHistory(history: DTOTaskHistory): Promise<any>;\r\n  abstract queueUpdateCalendarTasks(tasks: DTOCalendarTask[], synced: boolean): Promise<any>;\r\n  abstract queueUpdateCalendarTask(task: DTOCalendarTask, synced: boolean): Promise<any>;\r\n  abstract queueInsertCalendarTask(task: DTOCalendarTask): Promise<any>;\r\n  abstract queueInsertCalendarTasks(tasks: DTOCalendarTask[]): Promise<any>;\r\n  abstract queueInsertTimer(timer: DTOTaskTimer): Promise<any>;\r\n  abstract queueUpdateTimer(timer: DTOTaskTimer): Promise<any>;\r\n  abstract queueInsertGroup(group: DTOTaskGroup): Promise<any>;\r\n  abstract queueUpdateGroup(group: DTOTaskGroup, synced: boolean): Promise<any>;\r\n  abstract queueUpdateGroups(groups: DTOTaskGroup[], synced: boolean): Promise<any>;\r\n}\r\n","import { DTOCalendarTask } from '../models/DTO/dto-calendar-task';\r\nimport { DTOTaskHistory } from '../models/DTO/dto-task-history';\r\nimport { DTOUser } from '../models/DTO/dto-user';\r\nimport { DTOTaskTimer } from '../models/DTO/dto-timer';\r\nimport { DTOTaskGroup } from '../models/DTO/dto-task-group';\r\n\r\nexport abstract class ILocalStorageService {\r\n  public static currentlyUsed: boolean = false;\r\n  public Initialized: boolean = false;\r\n\r\n  abstract initialize(userId: string): Promise<void>;\r\n  abstract terminate(): Promise<void>;\r\n  abstract setCalendarTasks(tasks: DTOCalendarTask[],\r\n                            alreadyUsed: boolean): Promise<boolean>;\r\n  abstract getCalendarTasks(alreadyUsed: boolean): Promise<DTOCalendarTask[]>;\r\n  abstract insertCalendarTask(task: DTOCalendarTask): Promise<any>;\r\n  abstract insertCalendarTasks(tasks: DTOCalendarTask[]): Promise<any>;\r\n  abstract updateCalendarTask(task: DTOCalendarTask, synced: boolean): Promise<any>;\r\n  abstract updateCalendarTasks(tasks: DTOCalendarTask[], synced: boolean): Promise<any>;\r\n  abstract updateSyncedCalendarTask(task: DTOCalendarTask, alreadyLocked: boolean): Promise<any>;\r\n  abstract insertTaskHistory(history: DTOTaskHistory): Promise<any>;\r\n  abstract insertTaskHistories(histories: DTOTaskHistory[]): Promise<any>;\r\n  abstract updateTaskHistory(history: DTOTaskHistory): Promise<any>;\r\n  abstract updateTaskHistories(histories: DTOTaskHistory[]): Promise<any>;\r\n  abstract updateSyncedTaskHistory(history: DTOTaskHistory, alreadyLocked: boolean): Promise<any>;\r\n  abstract waitForDbAvailable(reason: string): Promise<void>;\r\n  abstract clear(): Promise<void>;\r\n  abstract shouldViewChangeLog(currentVersion: string): Promise<boolean>;\r\n  abstract setChangeLogToViewed(currentVersion: string): Promise<boolean>;\r\n  abstract getUser(userId: string): Promise<DTOUser>;\r\n  abstract setUser(user: DTOUser, alreadyLocked: boolean): Promise<void>;\r\n  abstract getTimers(alreadyReadOnly: boolean): Promise<DTOTaskTimer[]>;\r\n  abstract setTimers(timers: DTOTaskTimer[], alreadyReadOnly: boolean): Promise<void>;\r\n  abstract insertTimer(timer: DTOTaskTimer): Promise<void>;\r\n  abstract updateTimer(timer: DTOTaskTimer): Promise<void>;\r\n  abstract getGroups(alreadyLocked: boolean): Promise<DTOTaskGroup[]>;\r\n  abstract setGroups(groups: DTOTaskGroup[], alreadyReadOnly: boolean): Promise<boolean>;\r\n  abstract setGroupsAndTasks(groups: DTOTaskGroup[], tasks: DTOCalendarTask[]): Promise<boolean>;\r\n  abstract insertGroup(group: DTOTaskGroup): Promise<void>;\r\n  abstract insertGroups(groups: DTOTaskGroup[]): Promise<void>;\r\n  abstract updateGroup(group: DTOTaskGroup, alreadyLocked: boolean): Promise<void>;\r\n  abstract updateGroups(groups: DTOTaskGroup[], alreadyLocked: boolean): Promise<void>;\r\n  abstract updateSyncedGroup(group: DTOTaskGroup): Promise<any>;\r\n}\r\n","export abstract class ILogger {\r\n  abstract setUserId(userId: string): void;\r\n  abstract clearUserId(): void;\r\n  abstract logPageView(name?: string, uri?: string): void;\r\n  abstract logConsole(name: string, properties?: { [key: string]: string }, measurements?: { [key: string]: number });\r\n  abstract logEvent(name: string, properties?: { [key: string]: string }, measurements?: { [key: string]: number });\r\n  abstract logError(error: Error, properties?: { [key: string]: string }, measurements?: { [key: string]: number });\r\n  abstract logDebug(str1: string, str2?: string, str3?: string);\r\n  abstract getDebugLogs(): string[];\r\n}\r\n","import { User } from '../models/Core/user';\r\n\r\nexport abstract class IUserService {\r\n  abstract getUser(userId: string): Promise<User>;\r\n  abstract getUserForLogin(): Promise<User>;\r\n  abstract getCurrentUser(): Promise<User>;\r\n  abstract getCurrentUserId(): Promise<string>;\r\n  abstract saveUser(user: User): Promise<void>;\r\n  abstract setLanguage(value: any);\r\n  abstract setCloudSync(value: boolean);\r\n  abstract setDefaultRecurringPositionName(value: string);\r\n  abstract setDefaultNonRecurringPositionName(value: string);\r\n  abstract logout(): Promise<void>;\r\n  abstract awaitUserReady(waitForever?: boolean): Promise<boolean>;\r\n  abstract setDefaultNonRecurringGroupId(groupId: string): Promise<void>;\r\n  abstract setDefaultRecurringGroupId(groupId: string): Promise<void>;\r\n  abstract getConfig(key: string): any;\r\n  abstract setConfig(key: string, value: any): any;\r\n  abstract permanentlyDeleteAccount(): Promise<boolean>;\r\n  abstract setKeepPortrait(value: boolean);\r\n}\r\n","export enum BugReportType {\r\n  Bug = 0,\r\n  Survey = 1,\r\n  Support = 2,\r\n}\r\n","import { TaskFrequency } from './task-frequency.enum';\r\nimport { ResultType } from './result-type.enum';\r\nimport { DayOfWeek } from './day-of-week.enum';\r\nimport { TaskHistory } from './task-history';\r\nimport DateUtils from '../../shared/date-utils';\r\nimport { DTOCalendarTask } from '../DTO/dto-calendar-task';\r\nimport { InvalidCalendarTaskError } from '../Exceptions/InvalidCalendarTaskError';\r\nimport { StatType } from './custom-stat.enum';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nexport class CalendarTask {\r\n\r\n  Name: string;\r\n  RequiredDays: DayOfWeek[] = [];\r\n  Frequency: TaskFrequency = TaskFrequency.Daily;\r\n  AbsolutePosition: number;\r\n  InitialAbsolutePosition: number;\r\n  ResultType: ResultType = ResultType.Binary;\r\n  UserId: string;\r\n  CalendarTaskId: string;\r\n  Void: boolean = false;\r\n  AssignedDate: Date;\r\n  InsertDate: Date;\r\n  UpdateDate: Date;\r\n  SkipUntil: Date;\r\n  GroupId: string;\r\n  InitialGroupId: string;\r\n  NotificationId: number;\r\n  NotificationTime: string;\r\n\r\n  Synced: boolean = false;\r\n  Sent: boolean = false;\r\n  IsShown: boolean = false;\r\n\r\n  Histories: TaskHistory[] = [];\r\n\r\n  public HistoriesMap: Map<string, TaskHistory[]> = new Map<string, TaskHistory[]>();\r\n  public MinimumStartingMinusDay: number = 365;\r\n\r\n  StatType: StatType = StatType.Regular;\r\n\r\n  public static equals(task: CalendarTask, task2: CalendarTask): boolean {\r\n    // console.log('equals');\r\n    const result = task2.Name === task.Name &&\r\n           task2.RequiredDays === task.RequiredDays &&\r\n           task2.ResultType === task.ResultType &&\r\n           task2.Frequency === task.Frequency &&\r\n           DateUtils.datesAreEqual(task2.AssignedDate, task.AssignedDate) &&\r\n           task2.AbsolutePosition === task.AbsolutePosition &&\r\n           task2.InitialGroupId === task.InitialGroupId &&\r\n           task2.NotificationId === task.NotificationId &&\r\n           task2.NotificationTime === task.NotificationTime &&\r\n           task2.SkipUntil === task.SkipUntil;\r\n\r\n    /*if (result === false) {\r\n      console.log('NOT EQUAL', task, task2);\r\n    }*/\r\n\r\n    return result;\r\n  }\r\n\r\n  public static fromDTO(dto: DTOCalendarTask): CalendarTask {\r\n    const task = new CalendarTask();\r\n    task.Name = dto.Name;\r\n    task.RequiredDays = dto.RequiredDays;\r\n    task.Frequency = dto.Frequency;\r\n    task.AbsolutePosition = dto.AbsolutePosition;\r\n    task.InitialAbsolutePosition = dto.InitialAbsolutePosition;\r\n    if (task.InitialAbsolutePosition === 500) { // TODO : unfortunate patch that shouldn't be necessary but need to dig why it's 500\r\n      task.InitialAbsolutePosition = task.AbsolutePosition;\r\n    }\r\n    task.ResultType = dto.ResultType;\r\n    task.UserId = dto.UserId;\r\n    task.CalendarTaskId = dto.CalendarTaskId;\r\n    task.Void = dto.Void;\r\n    task.Synced = dto.Synced;\r\n    task.Sent = dto.Sent;\r\n    task.StatType = dto.StatType;\r\n    task.GroupId = dto.GroupId;\r\n    task.InitialGroupId = dto.GroupId; // TODO : Not sure\r\n    task.NotificationId = dto.NotificationId;\r\n    task.NotificationTime = dto.NotificationTime;\r\n    task.InsertDate = dto.InsertDate == null ? null : new Date(dto.InsertDate);\r\n    task.UpdateDate = dto.UpdateDate == null ? null : new Date(dto.UpdateDate);\r\n    task.SkipUntil = dto.SkipUntil == null ? null : new Date(dto.SkipUntil);\r\n    task.AssignedDate = dto.AssignedDate == null ? null : new Date(dto.AssignedDate);\r\n\r\n    task.Histories = dto.Histories.map(p => TaskHistory.fromDTO(p));\r\n\r\n    return task;\r\n  }\r\n\r\n  public toDTO(): DTOCalendarTask {\r\n    const task = new DTOCalendarTask();\r\n    task.Name = this.Name;\r\n    task.RequiredDays = this.RequiredDays;\r\n    task.Frequency = this.Frequency;\r\n    task.AbsolutePosition = this.AbsolutePosition;\r\n    task.InitialAbsolutePosition = this.InitialAbsolutePosition;\r\n    task.ResultType = this.ResultType;\r\n    task.UserId = this.UserId;\r\n    task.CalendarTaskId = this.CalendarTaskId;\r\n    task.NotificationId = this.NotificationId;\r\n    task.NotificationTime = this.NotificationTime;\r\n    task.Void = this.Void;\r\n    task.Synced = this.Synced;\r\n    task.Sent = this.Sent;\r\n    task.StatType = this.StatType;\r\n    task.GroupId = this.GroupId;\r\n    task.InsertDate = this.InsertDate == null ? null : this.InsertDate.toISOString();\r\n    task.UpdateDate = this.UpdateDate == null ? null : this.UpdateDate.toISOString();\r\n    task.SkipUntil = this.SkipUntil == null ? null : this.SkipUntil.toISOString();\r\n    task.AssignedDate = this.AssignedDate == null ? null : this.AssignedDate.toISOString();\r\n\r\n    task.Histories = this.Histories.map(p => p.toDTO());\r\n\r\n    return task;\r\n  }\r\n\r\n  public GetDoneHistoriesNoVoid(workDate: Date): TaskHistory[] {\r\n    // console.log('GetDoneHistoriesNoVoid', workDate);\r\n    if (this.HistoriesMap.size > 0) {\r\n      const result = this.HistoriesMap.get(workDate.toISOString());\r\n      if (result != null) {\r\n        return result;\r\n      } else {\r\n        return [];\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  public isBinary(): boolean { // TODO : This is dangerous because somethings the function is not passed with the object\r\n    return this.ResultType === ResultType.Binary;\r\n  }\r\n\r\n  public isDecimal(): boolean { // TODO : This is dangerous because somethings the function is not passed with the object\r\n    return this.ResultType === ResultType.Decimal;\r\n  }\r\n\r\n  public isTime(): boolean { // TODO : This is dangerous because somethings the function is not passed with the object\r\n    return this.ResultType === ResultType.TimeOfDay;\r\n  }\r\n\r\n  public isDuration(): boolean { // TODO : This is dangerous because somethings the function is not passed with the object\r\n    return this.ResultType === ResultType.Duration;\r\n  }\r\n\r\n  public validate(translate: TranslateService) {\r\n    if (this.Name == null || this.Name.length === 0 || this.Name.length > 200) {\r\n      throw new InvalidCalendarTaskError(translate.instant('calendar-task.msg-task-name-invalid'));\r\n    }\r\n\r\n    if (this.AbsolutePosition < 0 || this.AbsolutePosition > 500) {\r\n      throw new InvalidCalendarTaskError(translate.instant('calendar-task.msg-invalid-task-position'));\r\n    }\r\n\r\n    if ((this.Frequency === TaskFrequency.Once ||\r\n        this.Frequency === TaskFrequency.UntilDone) &&\r\n         this.AssignedDate == null) {\r\n           throw new InvalidCalendarTaskError(translate.instant('calendar-task.msg-required-assigned-date'));\r\n    }\r\n\r\n    if (this.Frequency === TaskFrequency.Daily &&\r\n        this.RequiredDays.length === 0) {\r\n          throw new InvalidCalendarTaskError(translate.instant('calendar-task.msg-required-days-required'));\r\n    }\r\n  }\r\n}\r\n","export enum StatType {\r\n  Regular = 0,\r\n  TimeUp = 1,\r\n  TimeSleep = 2,\r\n  TimeNonWaterStart = 3,\r\n  TimeNonWaterStop = 4,\r\n  TimeEatStart = 5,\r\n  TimeEatStop = 6,\r\n}\r\n","export enum DayOfWeek {\r\n  Sunday = 0,\r\n  Monday = 1,\r\n  Tuesday = 2,\r\n  Wednesday = 3,\r\n  Thursday = 4,\r\n  Friday = 5,\r\n  Saturday = 6,\r\n}\r\n","export enum Language {\r\n  English = 0,\r\n  French = 1,\r\n}\r\n","export class ReleaseNote {\r\n  public Version: string;\r\n  public BugFixesEn: string[] = [];\r\n  public FeaturesEn: string[] = [];\r\n  public BugFixesFr: string[] = [];\r\n  public FeaturesFr: string[] = [];\r\n}\r\n","export enum ResultType {\r\n  Binary,\r\n  Decimal,\r\n  TimeOfDay,\r\n  Duration,\r\n}\r\n","import { DayOfWeek } from './day-of-week.enum';\r\nimport { TaskFrequency } from './task-frequency.enum';\r\nimport { ResultType } from './result-type.enum';\r\nimport { StatType } from './custom-stat.enum';\r\n\r\nexport class SelectableTask {\r\n  Name: string;\r\n  Description: string;\r\n  RequiredDays: DayOfWeek[] = [];\r\n  Frequency: TaskFrequency = TaskFrequency.Daily;\r\n  AbsolutePosition: number;\r\n  ResultType: ResultType = ResultType.Binary;\r\n  AdditionnalTask: AdditionnalTask;\r\n  GroupName: string;\r\n\r\n  constructor(name: string,\r\n              description: string,\r\n              frequency: TaskFrequency,\r\n              resultType: ResultType,\r\n              groupName: string) {\r\n    this.Name = name;\r\n    this.Description = description;\r\n    this.Frequency = frequency;\r\n    this.ResultType = resultType;\r\n    this.RequiredDays.push(DayOfWeek.Monday);\r\n    this.RequiredDays.push(DayOfWeek.Tuesday);\r\n    this.RequiredDays.push(DayOfWeek.Wednesday);\r\n    this.RequiredDays.push(DayOfWeek.Thursday);\r\n    this.RequiredDays.push(DayOfWeek.Friday);\r\n    this.RequiredDays.push(DayOfWeek.Saturday);\r\n    this.RequiredDays.push(DayOfWeek.Sunday);\r\n    this.GroupName = groupName;\r\n  }\r\n}\r\n\r\nexport class AdditionnalTask {\r\n  Task1Name: string;\r\n  Task2Name: string;\r\n  StatName: string;\r\n  AbsolutePositionTask2: number;\r\n  StatType1: StatType;\r\n  StatType2: StatType;\r\n  GroupName: string;\r\n}\r\n","export enum TaskFrequency {\r\n  Daily = 0,\r\n  Weekly = 1,\r\n  Monthly = 2,\r\n  BiWeekly = 3,\r\n  Custom = 4,\r\n  Once = 5,\r\n  UntilDone = 6\r\n}\r\n","import { CalendarTask } from './calendar-task';\r\nimport { DTOTaskGroup } from '../DTO/dto-task-group';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { InvalidTaskGroupError } from '../Exceptions/InvalidTaskGroupError';\r\n\r\nexport class TaskGroup {\r\n  public GroupId: string;\r\n  public UserId: string;\r\n  public ColorHex: string = '#D1D1D1';\r\n  public Name: string;\r\n  public Position: number;\r\n  public InitialPosition: number;\r\n  public InsertDate: Date;\r\n  public UpdateDate: Date;\r\n  public Void: boolean = false;\r\n  public VoidDate: Date;\r\n  public Tasks: CalendarTask[] = []; // Put this into a viewModel ?\r\n  public isVisible: boolean = true; // Put this into viewModel?\r\n  public isExpanded: boolean = false;\r\n  public isUnassigned: boolean;\r\n  public Synced: boolean = false;\r\n  public Sent: boolean = false;\r\n  public RecurringDefault: boolean = false;\r\n\r\n  // only for viewmodel\r\n  public ProgressText: string;\r\n  public ProgressDone: number;\r\n  public ProgressTotal: number;\r\n\r\n  public static fromDTO(dto: DTOTaskGroup): TaskGroup {\r\n    const group = new TaskGroup();\r\n    group.Name = dto.Name;\r\n    group.ColorHex = dto.ColorHex;\r\n    group.GroupId = dto.GroupId;\r\n    group.InsertDate = dto.InsertDate == null ? null : new Date(dto.InsertDate);\r\n    group.Name = dto.Name;\r\n    group.Position = dto.Position;\r\n    group.InitialPosition = dto.InitialPosition;\r\n    if (group.InitialPosition == null) {\r\n      group.InitialPosition = group.Position;\r\n    }\r\n    group.UpdateDate = dto.UpdateDate == null ? null : new Date(dto.UpdateDate);\r\n    group.UserId = dto.UserId;\r\n    group.Void = dto.Void;\r\n    group.Synced = dto.Synced;\r\n    group.Sent = dto.Sent;\r\n    group.RecurringDefault = dto.RecurringDefault;\r\n\r\n    return group;\r\n  }\r\n\r\n  public toDTO(): DTOTaskGroup {\r\n    const group = new DTOTaskGroup();\r\n    group.Name = this.Name;\r\n    group.ColorHex = this.ColorHex;\r\n    group.GroupId = this.GroupId;\r\n    group.InsertDate = this.InsertDate == null ? null : new Date(this.InsertDate);\r\n    group.Name = this.Name;\r\n    group.Position = this.Position;\r\n    group.InitialPosition = this.InitialPosition;\r\n    if (group.InitialPosition == null) {\r\n      group.InitialPosition = group.Position;\r\n    }\r\n    group.UpdateDate = this.UpdateDate == null ? null : new Date(this.UpdateDate);\r\n    group.UserId = this.UserId;\r\n    group.Void = this.Void;\r\n    group.Synced = this.Synced;\r\n    group.Sent = this.Sent;\r\n    group.RecurringDefault = this.RecurringDefault;\r\n\r\n    return group;\r\n  }\r\n\r\n  public validate(translate: TranslateService) {\r\n    if (this.Name == null || this.Name.length === 0 || this.Name.length > 200) {\r\n      throw new InvalidTaskGroupError(translate.instant('group-create.msg-group-name-invalid'));\r\n    }\r\n  }\r\n}\r\n","import { DTOTaskHistory } from '../DTO/dto-task-history';\r\nimport DateUtils from 'src/app/shared/date-utils';\r\nimport NumberUtils from 'src/app/shared/number-utils';\r\n\r\nexport class TaskHistory {\r\n  CalendarTaskId: string;\r\n  TaskHistoryId: string;\r\n  TaskDone: boolean;\r\n  UserId: string;\r\n  TaskSkipped: boolean;\r\n  TaskResult: any;\r\n  DoneDate: Date;\r\n  DoneWorkDate: Date;\r\n  Void: boolean = false;\r\n  InsertDate: Date;\r\n  UpdateDate: Date;\r\n  VoidDate: Date;\r\n  Comment: string;\r\n\r\n  Synced: boolean = false;\r\n  Sent: boolean = false;\r\n\r\n  public static createNew(taskResult: any,\r\n                          taskCompleted: boolean,\r\n                          taskSkipped: boolean,\r\n                          doneDate: Date,\r\n                          workDate: Date,\r\n                          calendarTaskId: string,\r\n                          userId: string): TaskHistory {\r\n    const calendarTaskHistory: TaskHistory = new TaskHistory();\r\n    calendarTaskHistory.InsertDate = new Date();\r\n    calendarTaskHistory.DoneDate = doneDate;\r\n    calendarTaskHistory.DoneWorkDate = workDate;\r\n    calendarTaskHistory.TaskDone = taskCompleted;\r\n    calendarTaskHistory.TaskSkipped = taskSkipped;\r\n    calendarTaskHistory.TaskResult = taskResult;\r\n    calendarTaskHistory.CalendarTaskId = calendarTaskId;\r\n    calendarTaskHistory.UserId = userId;\r\n    calendarTaskHistory.TaskHistoryId = NumberUtils.getRandomId();\r\n    console.log('CREATENEW : ', calendarTaskHistory);\r\n    return calendarTaskHistory;\r\n  }\r\n\r\n  public static fromDTO(dto: DTOTaskHistory): TaskHistory {\r\n    const history = new TaskHistory();\r\n    history.CalendarTaskId = dto.CalendarTaskId;\r\n    history.TaskHistoryId = dto.TaskHistoryId;\r\n    history.TaskDone = dto.TaskDone;\r\n    history.UserId = dto.UserId;\r\n    history.TaskSkipped = dto.TaskSkipped;\r\n    history.TaskResult = dto.TaskResult;\r\n    history.DoneDate = dto.DoneDate == null ? null : new Date(dto.DoneDate);\r\n    history.Void = dto.Void;\r\n    history.InsertDate = dto.InsertDate == null ? null : new Date(dto.InsertDate);\r\n    history.UpdateDate = dto.UpdateDate == null ? null : new Date(dto.UpdateDate);\r\n    history.VoidDate = dto.VoidDate == null ? null : new Date(dto.VoidDate);\r\n    history.Synced = dto.Synced;\r\n    history.Sent = dto.Sent;\r\n    history.Comment = dto.Comment;\r\n    //                                                this should not be necessary, need to cleanup database\r\n    history.DoneWorkDate = dto.DoneWorkDate == null ? DateUtils.RemoveHours(new Date(dto.InsertDate)) : new Date(dto.DoneWorkDate);\r\n    return history;\r\n  }\r\n\r\n  public toDTO(): DTOTaskHistory {\r\n    const history = new DTOTaskHistory();\r\n    history.CalendarTaskId = this.CalendarTaskId;\r\n    history.TaskHistoryId = this.TaskHistoryId;\r\n    history.TaskDone = this.TaskDone;\r\n    history.UserId = this.UserId;\r\n    history.TaskSkipped = this.TaskSkipped;\r\n    history.TaskResult = this.TaskResult;\r\n    history.DoneDate = this.DoneDate == null ? null : this.DoneDate.toISOString();\r\n    history.Void = this.Void;\r\n    history.InsertDate = this.InsertDate == null ? null : this.InsertDate.toISOString();\r\n    history.UpdateDate = this.UpdateDate == null ? null : this.UpdateDate.toISOString();\r\n    history.VoidDate = this.VoidDate == null ? null : this.VoidDate.toISOString();\r\n    history.Synced = this.Synced;\r\n    history.Sent = this.Sent;\r\n    history.Comment = this.Comment;\r\n    history.DoneWorkDate = this.DoneWorkDate == null ? null : this.DoneWorkDate.toISOString();\r\n\r\n    return history;\r\n  }\r\n\r\n  public getDurationString(): string {\r\n    if (this.TaskDone) {\r\n      if (typeof(this.TaskResult) === 'number') {\r\n        return DateUtils.getDurationString(this.TaskResult);\r\n      } else {\r\n        return '';\r\n      }\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  public getDurationStringHHmm(): string {\r\n    if (this.TaskDone) {\r\n      let minutes = 0;\r\n      if (typeof(this.TaskResult) === 'number') {\r\n        minutes = Math.round(this.TaskResult / 60);\r\n\r\n        const hours = Math.floor(minutes / 60);\r\n        let result = hours < 10 ? '0' + String(hours) : String(hours);\r\n        minutes = minutes - (60 * hours);\r\n        result += ':';\r\n        result += minutes < 10 ? '0' + String(minutes) : String(minutes);\r\n        /*result += 'm';*/\r\n        return result;\r\n      } else {\r\n        return '04:00';\r\n      }\r\n    } else {\r\n      return '04:00';\r\n    }\r\n  }\r\n}\r\n","import { ResultType } from './result-type.enum';\r\nimport { StatType } from './custom-stat.enum';\r\n\r\nexport class TaskStats {\r\n  results: string[] = [];\r\n  doneDays: boolean[] = [];\r\n  skippedDays: boolean[] = [];\r\n  resultType: ResultType;\r\n  Name: string;\r\n  StartingMinusDays: number;\r\n  MinusWeeksArray: number[] = [];\r\n  TaskInsertWorkDate: Date;\r\n  StatType: StatType;\r\n}\r\n\r\nexport class TaskStatRequest {\r\n  name: string;\r\n  calendarTaskId1: string;\r\n  calendarTaskId2: string;\r\n  statOperation: StatOperation;\r\n  dateStart: Date;\r\n  dateEnd: Date;\r\n}\r\n\r\nexport enum StatOperation {\r\n  addition = 0,\r\n}\r\n","import NumberUtils from 'src/app/shared/number-utils';\r\nimport { DTOTaskTimer } from '../DTO/dto-timer';\r\nimport { Subscription, timer as Timer } from 'rxjs';\r\nimport { Inject, Injectable, OnDestroy } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class TaskTimer implements OnDestroy {\r\n  public TimerId: string;\r\n  public CalendarTaskId: string;\r\n  public TimerDate: Date;\r\n  public StartDate: Date;\r\n  public currentTimerSeconds: number;\r\n  public isPaused: boolean;\r\n  public deltaDelay: number;\r\n  public isDone: boolean;\r\n  public isStarted: boolean;\r\n  public isKeepLongTimer: boolean; // if timer is > x hours, we ask user if he wants to keep it\r\n  public isVoid: boolean;\r\n  public timerSubscription: Subscription;\r\n\r\n  public constructor(@Inject(String) calendarTaskId: string, @Inject(Date) currentWorkDate: Date) {\r\n    this.currentTimerSeconds = 0;\r\n    this.deltaDelay = 1;\r\n    this.isPaused = false;\r\n    this.isDone = false;\r\n    this.isStarted = false;\r\n    this.isVoid = false;\r\n    this.TimerId = NumberUtils.getRandomId();\r\n    this.CalendarTaskId = calendarTaskId;\r\n    this.TimerDate = currentWorkDate;\r\n    this.isKeepLongTimer = false;\r\n  }\r\n\r\n  public static fromDTO(dto: DTOTaskTimer): TaskTimer {\r\n    const timerDate = dto.TimerDate == null ? null : new Date(dto.TimerDate);\r\n\r\n    const timer = new TaskTimer(dto.CalendarTaskId, timerDate);\r\n    timer.TimerDate = dto.TimerDate == null ? null : new Date(dto.TimerDate);\r\n    timer.StartDate = dto.StartDate == null ? null : new Date(dto.StartDate);\r\n    timer.TimerId = dto.TimerId;\r\n    timer.currentTimerSeconds = dto.currentTimerSeconds;\r\n    timer.deltaDelay = dto.deltaDelay;\r\n    timer.isDone = dto.isDone;\r\n    timer.isPaused = dto.isPaused;\r\n    timer.isVoid = dto.isVoid;\r\n    timer.isStarted = true; // We only save started timers\r\n    timer.isKeepLongTimer = dto.isKeepLongTimer;\r\n\r\n    return timer;\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribeTimerIfExists();\r\n  }\r\n\r\n  public toDTO(): DTOTaskTimer {\r\n    const task = new DTOTaskTimer();\r\n    task.CalendarTaskId = this.CalendarTaskId;\r\n    task.TimerDate = this.TimerDate == null ? null : this.TimerDate.toISOString();\r\n    task.StartDate = this.StartDate == null ? null : this.StartDate.toISOString();\r\n    task.TimerId = this.TimerId;\r\n    task.currentTimerSeconds = this.currentTimerSeconds;\r\n    task.deltaDelay = this.deltaDelay;\r\n    task.isDone = this.isDone;\r\n    task.isVoid = this.isVoid;\r\n    task.isPaused = this.isPaused;\r\n    task.isKeepLongTimer = this.isKeepLongTimer;\r\n\r\n    return task;\r\n  }\r\n\r\n  public start(): void {\r\n    this.isStarted = true;\r\n    this.isPaused = false;\r\n    this.timerSubscription = this.startJsTimer();\r\n  }\r\n\r\n  public resume(): void {\r\n    // console.log('RESUMING', this.currentTimerSeconds);\r\n\r\n    this.timerSubscription = this.startJsTimer();\r\n\r\n    this.isPaused = false;\r\n    this.isDone = false;\r\n  }\r\n\r\n  public pause(): void {\r\n    this.unsubscribeTimerIfExists();\r\n    this.isPaused = true;\r\n  }\r\n\r\n  public cancel(): void {\r\n    this.unsubscribeTimerIfExists();\r\n    this.isPaused = true;\r\n    this.isDone = true;\r\n    this.isVoid = true;\r\n    this.currentTimerSeconds = 0;\r\n  }\r\n\r\n  public complete(): void {\r\n    this.unsubscribeTimerIfExists();\r\n    this.isDone = true;\r\n    this.isPaused = true;\r\n  }\r\n\r\n  public isInitialized(): boolean {\r\n    return this.currentTimerSeconds !== 0 ||\r\n           this.isDone !== false ||\r\n           this.isPaused !== false;\r\n  }\r\n\r\n  private startJsTimer(): Subscription {\r\n    this.StartDate = new Date();\r\n    // console.log('new start date, initial seconds', this.StartDate, this.currentTimerSeconds);\r\n\r\n    const initialTimerSeconds = this.currentTimerSeconds > 0 ?\r\n                                  this.currentTimerSeconds :\r\n                                  0;\r\n\r\n    // console.log('INITIAL TIMER SECONDS ', initialTimerSeconds);\r\n\r\n    return Timer(1000, 1000).subscribe(ellapsedCycles => {\r\n      const currentTimeStamp = Math.floor(Date.now() / 1000);\r\n      const startTimeStamp = Math.floor(this.StartDate.getTime() / 1000);\r\n      const timeStampDifferenceSeconds = currentTimeStamp - startTimeStamp + initialTimerSeconds;\r\n      const delaySeconds = Math.abs(timeStampDifferenceSeconds - this.currentTimerSeconds);\r\n      // console.log('currentTimestamp = ', currentTimeStamp);\r\n      // console.log('startTimestamp = ', startTimeStamp);\r\n      // console.log('timeStampDifferenceSeconds = ', timeStampDifferenceSeconds);\r\n      // console.log('difference delay seconds : ', delaySeconds);\r\n\r\n      if (delaySeconds > 1) {\r\n        // console.log('delay > 1, adjusting : ', timeStampDifferenceSeconds);\r\n        this.currentTimerSeconds = timeStampDifferenceSeconds;\r\n      } else {\r\n        this.currentTimerSeconds ++;\r\n        // console.log('ellapsedCylces : ', ellapsedCycles, this.currentTimerSeconds);\r\n      }\r\n    });\r\n  }\r\n\r\n  private unsubscribeTimerIfExists() {\r\n    if (this.timerSubscription != null) {\r\n      this.timerSubscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { Language } from './language.enum';\r\n\r\nexport class UserConfig {\r\n\r\n  public static PreferedLanguageKey: string = 'PreferedLanguage';\r\n  public static DefaultNonRecurringAfterTaskNameKey: string = 'DefaultNonRecurringAfterTaskNameKey';\r\n  public static DefaultRecurringAfterTaskNameKey: string = 'DefaultRecurringAfterTaskNameKey';\r\n  public static EndOfDayTimeKey: string = 'EndOfDayTime';\r\n  public static EnableCloudSyncKey: string = 'EnableCloudSync';\r\n  public static DefaultRecurringGroupId: string = 'DefaultRecurringGroupId';\r\n  public static DefaultNonRecurringGroupId: string = 'DefaultNonRecurringGroupId';\r\n  public static AutoSkipAfter2DaysId: string = 'AutoSkipAfter2Days';\r\n  public static AutoSkipAfter2DaysLastSkipDateId: string = 'AutoSkipAfter2DaysLastSkipDateId';\r\n  public static KeepPortrait: string = 'KeepPortrait';\r\n\r\n  public Configs: Map<string, any>;\r\n\r\n  constructor() {\r\n    this.Configs = new Map<string, any>();\r\n    this.Configs.set(UserConfig.PreferedLanguageKey, Language.English);\r\n    this.Configs.set(UserConfig.EndOfDayTimeKey, '04:00');\r\n    this.Configs.set(UserConfig.EnableCloudSyncKey, false);\r\n    this.Configs.set(UserConfig.AutoSkipAfter2DaysId, true);\r\n  }\r\n\r\n  public static getHourValues(config: UserConfig): number[] {\r\n    // TODO: This needs to be cached but also reloaded on change\r\n    const firstHour = Number(config.Configs.get(UserConfig.EndOfDayTimeKey).substring(0, 2));\r\n\r\n    const result: number[] = [];\r\n    for (let i = 0; i < 24; i++) {\r\n      const hourIterator = (firstHour + i) % 24;\r\n      result.push(hourIterator);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public static getMinutesValues(): number[] {\r\n    return [0, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55];\r\n  }\r\n}\r\n","import DateUtils from 'src/app/shared/date-utils';\r\nimport { UserConfig } from './user-config';\r\n\r\nexport class User {\r\n  Id: string;\r\n  UserId: string;\r\n  Config: UserConfig;\r\n  LastActivityDate: Date;\r\n  IsNew: boolean;\r\n\r\n  constructor() {\r\n    this.Config = new UserConfig();\r\n    this.LastActivityDate = DateUtils.YearAgo();\r\n    this.IsNew = false;\r\n  }\r\n\r\n  public static getConfig(user: User, key: string): any {\r\n    // console.log('getconfig,', user);\r\n    return user.Config.Configs.get(key);\r\n  }\r\n\r\n  public static setConfig(user: User, key: string, value: any): any {\r\n    // console.log('setConfig,', user);\r\n    return user.Config.Configs.set(key, value);\r\n  }\r\n}\r\n","import { BugReportType } from '../Core/bug-report-type.enum';\r\n\r\nexport class DTOBugReport {\r\n  Title: string;\r\n  UserId: string;\r\n  Description: string;\r\n  InsertDate: Date;\r\n  BugReportType: BugReportType;\r\n}\r\n","import { DayOfWeek } from '../Core/day-of-week.enum';\r\nimport { TaskFrequency } from '../Core/task-frequency.enum';\r\nimport { ResultType } from '../Core/result-type.enum';\r\nimport { DTOTaskHistory } from './dto-task-history';\r\nimport { StatType } from '../Core/custom-stat.enum';\r\n\r\nexport class DTOCalendarTask {\r\n  Name: string;\r\n  Description: string;\r\n  MinDuration: number;\r\n  RequiredDays: DayOfWeek[] = [];\r\n  Frequency: TaskFrequency = TaskFrequency.Daily;\r\n  AbsolutePosition: number;\r\n  InitialAbsolutePosition: number;\r\n  ResultType: ResultType = ResultType.Binary;\r\n  Positive: boolean = true;\r\n  FontAwesomeIcon: string;\r\n  UserId: string;\r\n  CalendarTaskId: string;\r\n  Void: boolean = false;\r\n  AssignedDate: string;\r\n  Reccuring: boolean;\r\n  InsertDate: string;\r\n  UpdateDate: string;\r\n  SkipUntil: string;\r\n  GroupId: string;\r\n  NotificationId: number;\r\n  NotificationTime: string;\r\n\r\n  Synced: boolean = false;\r\n  Sent: boolean = false;\r\n\r\n  Histories: any[] = [];\r\n\r\n  StatType: StatType = StatType.Regular;\r\n\r\n  public static fromAny(obj: any): DTOCalendarTask {\r\n    const newTask = new DTOCalendarTask();\r\n    newTask.AbsolutePosition = obj.AbsolutePosition;\r\n    newTask.CalendarTaskId = obj.CalendarTaskId;\r\n    newTask.Description = obj.Description;\r\n    newTask.FontAwesomeIcon = obj.FontAwesomeIcon;\r\n    newTask.Frequency = obj.Frequency;\r\n    newTask.Histories = obj.Histories;\r\n    newTask.InitialAbsolutePosition = obj.InitialAbsolutePosition;\r\n    newTask.MinDuration = obj.MinDuration;\r\n    newTask.Name = obj.Name;\r\n    newTask.Positive = obj.Positive;\r\n    newTask.RequiredDays = obj.RequiredDays;\r\n    newTask.ResultType = obj.ResultType;\r\n    newTask.Sent = obj.Sent;\r\n    newTask.Synced = obj.Synced;\r\n    newTask.UserId = obj.UserId;\r\n    newTask.Void = obj.Void;\r\n    newTask.AssignedDate = obj.AssignedDate;\r\n    newTask.StatType = obj.StatType;\r\n    newTask.InsertDate = obj.InsertDate;\r\n    newTask.UpdateDate = obj.UpdateDate;\r\n    newTask.SkipUntil = obj.SkipUntil;\r\n    newTask.GroupId = obj.GroupId;\r\n    newTask.NotificationId = obj.NotificationId;\r\n    newTask.NotificationTime = obj.NotificationTime;\r\n    newTask.Histories = obj.Histories.map(p => DTOTaskHistory.fromAny(p));\r\n    return newTask;\r\n  }\r\n\r\n  public clone(): DTOCalendarTask {\r\n    return DTOCalendarTask.fromAny(this);\r\n  }\r\n}\r\n","export class DTOGetCalendarTaskRequest {\r\n  public userId: string;\r\n  public IncludeVoid: boolean;\r\n  public DateStart: Date;\r\n  public DateEnd: Date;\r\n}\r\n","export class DTOTaskGroup {\r\n  public GroupId: string;\r\n  public UserId: string;\r\n  public ColorHex: string;\r\n  public Name: string;\r\n  public Position: number;\r\n  public InitialPosition: number;\r\n  public InsertDate: Date;\r\n  public UpdateDate: Date;\r\n  public Void: boolean;\r\n  public VoidDate: Date;\r\n  public Synced: boolean = false;\r\n  public Sent: boolean = false;\r\n  public RecurringDefault: boolean = false;\r\n\r\n  public static fromAny(obj: any): DTOTaskGroup {\r\n    const group = new DTOTaskGroup();\r\n    group.ColorHex = obj.ColorHex;\r\n    group.GroupId = obj.GroupId;\r\n    group.InsertDate = obj.InsertDate;\r\n    group.Name = obj.Name;\r\n    group.Position = obj.Position;\r\n    group.InitialPosition = obj.InitialPosition;\r\n    if (group.InitialPosition == null) {\r\n      group.InitialPosition = group.Position;\r\n    }\r\n    group.UpdateDate = obj.UpdateDate;\r\n    group.UserId = obj.UserId;\r\n    group.Void = obj.Void;\r\n    group.VoidDate = obj.VoidDate;\r\n    group.Synced = obj.Synced;\r\n    group.Sent = obj.Sent;\r\n    group.RecurringDefault = obj.RecurringDefault;\r\n\r\n    return group;\r\n  }\r\n}\r\n","export class DTOTaskHistory {\r\n  CalendarTaskId: string;\r\n  TaskHistoryId: string;\r\n  TaskDone: boolean;\r\n  UserId: string;\r\n  TaskSkipped: boolean;\r\n  TaskResult: any;\r\n  DoneDate: string;\r\n  DoneWorkDate: string;\r\n  Void: boolean = false;\r\n  InsertDate: string;\r\n  UpdateDate: string;\r\n  VoidDate: string;\r\n  Comment: string;\r\n\r\n  Synced: boolean = false;\r\n  Sent: boolean = false;\r\n\r\n  public static fromAny(obj: any): DTOTaskHistory {\r\n    const newHistory = new DTOTaskHistory();\r\n    newHistory.CalendarTaskId = obj.CalendarTaskId;\r\n    newHistory.DoneDate = obj.DoneDate;\r\n    newHistory.InsertDate = obj.InsertDate;\r\n    newHistory.Sent = obj.Sent;\r\n    newHistory.Synced = obj.Synced;\r\n    newHistory.TaskDone = obj.TaskDone;\r\n    newHistory.TaskHistoryId = obj.TaskHistoryId;\r\n    newHistory.TaskResult = obj.TaskResult;\r\n    newHistory.TaskSkipped = obj.TaskSkipped;\r\n    newHistory.UpdateDate = obj.UpdateDate;\r\n    newHistory.UserId = obj.UserId;\r\n    newHistory.Void = obj.Void;\r\n    newHistory.VoidDate = obj.VoidDate;\r\n    newHistory.Comment = obj.Comment;\r\n    newHistory.DoneWorkDate = obj.DoneWorkDate; // TODO: Not sure about this\r\n\r\n    return newHistory;\r\n  }\r\n}\r\n","export class DTOTaskTimer {\r\n  public TimerId: string;\r\n  public CalendarTaskId: string;\r\n  public TimerDate: string;\r\n  public StartDate: string;\r\n  public currentTimerSeconds: number;\r\n  public isPaused: boolean;\r\n  public timeStamp: number;\r\n  public deltaDelay: number;\r\n  public isDone: boolean;\r\n  public isSynced: boolean;\r\n  public isSent: boolean;\r\n  public isVoid: boolean;\r\n  public isKeepLongTimer: boolean; // if timer is > x hours, we ask user if he wants to keep it\r\n}\r\n","import { UserConfig } from '../Core/user-config';\r\n\r\nexport class DTOUserConfig {\r\n\r\n  public Configs: KeyValuePair[];\r\n\r\n  constructor() {\r\n    this.Configs = [];\r\n  }\r\n\r\n  public static FromUserConfig(userConfig: UserConfig): DTOUserConfig {\r\n    const dto = new DTOUserConfig();\r\n    for (const config of userConfig.Configs) {\r\n      const keyValuePair = new KeyValuePair();\r\n      keyValuePair.key = config[0];\r\n      keyValuePair.value = config[1];\r\n\r\n      dto.Configs.push(keyValuePair);\r\n    }\r\n    return dto;\r\n  }\r\n\r\n  public static ToUserConfig(userConfig: DTOUserConfig): UserConfig {\r\n    const newUser = new UserConfig();\r\n    for (const keyValuePair of userConfig.Configs) {\r\n      newUser.Configs.set(keyValuePair.key, keyValuePair.value);\r\n    }\r\n    return newUser;\r\n  }\r\n}\r\n\r\nexport class KeyValuePair {\r\n  public key: string;\r\n  public value: any;\r\n}\r\n","import { DTOUserConfig } from './dto-user-config';\r\nimport { User } from '../Core/user';\r\n\r\nexport class DTOUser {\r\n  Id: string;\r\n  UserId: string;\r\n  Config: DTOUserConfig;\r\n  LastActivityDate: string;\r\n\r\n  constructor() {\r\n    this.Config = new DTOUserConfig();\r\n  }\r\n\r\n  public static FromUser(user: User): DTOUser {\r\n    const newUser = new DTOUser();\r\n    newUser.Config = DTOUserConfig.FromUserConfig(user.Config);\r\n    newUser.Id = user.Id;\r\n    newUser.UserId = user.UserId;\r\n    newUser.LastActivityDate = user.LastActivityDate == null ? null : user.LastActivityDate.toISOString();\r\n    return newUser;\r\n  }\r\n\r\n  public static ToUser(user: DTOUser): User {\r\n    if (user == null) {\r\n      return new User();\r\n    }\r\n\r\n    const newUser = new User();\r\n    newUser.Config = DTOUserConfig.ToUserConfig(user.Config);\r\n    newUser.Id = user.Id;\r\n    newUser.LastActivityDate = user.LastActivityDate == null ? null : new Date(user.LastActivityDate);\r\n    newUser.UserId = user.UserId;\r\n    return newUser;\r\n  }\r\n}\r\n","export class ApiHttpError extends Error {\r\n\r\n  httpStatus?: number = 404;\r\n  applicationStatus?: number;\r\n  errorMessageTranslationkey: string;\r\n  handled: boolean = false;\r\n\r\n  constructor(message?: string) {\r\n    super(message);\r\n    this.name = ApiHttpError.name;\r\n    Object.setPrototypeOf(this, ApiHttpError.prototype);\r\n  }\r\n}\r\n","export class CalendarTaskNotFoundError extends Error {\r\n\r\n  httpStatus?: number = 404;\r\n  applicationStatus?: number;\r\n  errorMessageTranslationkey: string;\r\n  handled: boolean = false;\r\n\r\n  constructor(message?: string) {\r\n    super(message);\r\n    this.name = CalendarTaskNotFoundError.name;\r\n    Object.setPrototypeOf(this, CalendarTaskNotFoundError.prototype);\r\n  }\r\n}\r\n","export class DatabaseLockedError extends Error {\r\n\r\n  httpStatus?: number = 500;\r\n  applicationStatus?: number;\r\n  errorMessageTranslationkey: string;\r\n  handled: boolean = false;\r\n\r\n  constructor(message?: string) {\r\n    super(message);\r\n    this.name = DatabaseLockedError.name;\r\n    Object.setPrototypeOf(this, DatabaseLockedError.prototype);\r\n  }\r\n}\r\n","export class GroupNotFoundError extends Error {\r\n\r\n  httpStatus?: number = 404;\r\n  applicationStatus?: number;\r\n  errorMessageTranslationkey: string;\r\n  handled: boolean = false;\r\n\r\n  constructor(message?: string) {\r\n    super(message);\r\n    this.name = GroupNotFoundError.name;\r\n    Object.setPrototypeOf(this, GroupNotFoundError.prototype);\r\n  }\r\n}\r\n","export class InvalidCalendarTaskError extends Error {\r\n\r\n  httpStatus?: number = 404;\r\n  applicationStatus?: number;\r\n  errorMessageTranslationkey: string;\r\n  handled: boolean = false;\r\n\r\n  constructor(message?: string) {\r\n    super(message);\r\n    this.name = InvalidCalendarTaskError.name;\r\n    Object.setPrototypeOf(this, InvalidCalendarTaskError.prototype);\r\n  }\r\n}\r\n","export class InvalidTaskGroupError extends Error {\r\n\r\n  httpStatus?: number = 404;\r\n  applicationStatus?: number;\r\n  errorMessageTranslationkey: string;\r\n  handled: boolean = false;\r\n\r\n  constructor(message?: string) {\r\n    super(message);\r\n    this.name = InvalidTaskGroupError.name;\r\n    Object.setPrototypeOf(this, InvalidTaskGroupError.prototype);\r\n  }\r\n}\r\n","export class TaskHistoryAlreadyExistsError extends Error {\r\n\r\n  httpStatus?: number = 404;\r\n  applicationStatus?: number;\r\n  errorMessageTranslationkey: string;\r\n  handled: boolean = false;\r\n\r\n  constructor(message?: string) {\r\n    super(message);\r\n    this.name = TaskHistoryAlreadyExistsError.name;\r\n    Object.setPrototypeOf(this, TaskHistoryAlreadyExistsError.prototype);\r\n  }\r\n}\r\n","export class TaskHistoryNotFoundError extends Error {\r\n\r\n  httpStatus?: number = 404;\r\n  applicationStatus?: number;\r\n  errorMessageTranslationkey: string;\r\n  handled: boolean = false;\r\n\r\n  constructor(message?: string) {\r\n    super(message);\r\n    this.name = TaskHistoryNotFoundError.name;\r\n    Object.setPrototypeOf(this, TaskHistoryNotFoundError.prototype);\r\n  }\r\n}\r\n","export class UnknownLanguageError extends Error {\r\n\r\n  httpStatus?: number = 404;\r\n  applicationStatus?: number;\r\n  errorMessageTranslationkey: string;\r\n  handled: boolean = false;\r\n\r\n  constructor(message?: string) {\r\n    super(message);\r\n    this.name = UnknownLanguageError.name;\r\n    Object.setPrototypeOf(this, UnknownLanguageError.prototype);\r\n  }\r\n}\r\n","export class UserNotFoundError extends Error {\r\n\r\n  httpStatus?: number = 404;\r\n  applicationStatus?: number;\r\n  errorMessageTranslationkey: string;\r\n  handled: boolean = false;\r\n\r\n  constructor(message?: string) {\r\n    super(message);\r\n    this.name = UserNotFoundError.name;\r\n    Object.setPrototypeOf(this, UserNotFoundError.prototype);\r\n  }\r\n}\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\nimport { DayOfWeek } from '../models/Core/day-of-week.enum';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Pipe({\r\n  name: 'formatDayOfWeekAbbrPipe'\r\n})\r\nexport class FormatDayOfWeekAbbrPipe implements PipeTransform {\r\n\r\n  constructor(private translate: TranslateService) {\r\n\r\n  }\r\n\r\n  transform(day: DayOfWeek): string {\r\n    switch (day) {\r\n        case DayOfWeek.Monday: {\r\n          return this.translate.instant('create-task.monday-abbreviation');\r\n        }\r\n        case DayOfWeek.Tuesday: {\r\n          return this.translate.instant('create-task.tuesday-abbreviation');\r\n        }\r\n        case DayOfWeek.Wednesday: {\r\n          return this.translate.instant('create-task.wednesday-abbreviation');\r\n        }\r\n        case DayOfWeek.Thursday: {\r\n          return this.translate.instant('create-task.thursday-abbreviation');\r\n        }\r\n        case DayOfWeek.Friday: {\r\n          return this.translate.instant('create-task.friday-abbreviation');\r\n        }\r\n        case DayOfWeek.Saturday: {\r\n          return this.translate.instant('create-task.saturday-abbreviation');\r\n        }\r\n        case DayOfWeek.Sunday: {\r\n          return this.translate.instant('create-task.sunday-abbreviation');\r\n        }\r\n    }\r\n  }\r\n}\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\nimport { DayOfWeek } from '../models/Core/day-of-week.enum';\r\n\r\n@Pipe({\r\n  name: 'formatDayOfWeekPipe'\r\n})\r\nexport class FormatDayOfWeekPipe implements PipeTransform {\r\n  transform(day: DayOfWeek): string {\r\n    switch (day) {\r\n        case DayOfWeek.Monday: {\r\n          return 'Monday';\r\n        }\r\n        case DayOfWeek.Tuesday: {\r\n          return 'Tuesday';\r\n        }\r\n        case DayOfWeek.Wednesday: {\r\n          return 'Wednesday';\r\n        }\r\n        case DayOfWeek.Thursday: {\r\n          return 'Thursday';\r\n        }\r\n        case DayOfWeek.Friday: {\r\n          return 'Friday';\r\n        }\r\n        case DayOfWeek.Saturday: {\r\n          return 'Saturday';\r\n        }\r\n        case DayOfWeek.Sunday: {\r\n          return 'Sunday';\r\n        }\r\n    }\r\n  }\r\n}\r\n","import { PipeTransform, Pipe } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'formatTimer'\r\n})\r\nexport class FormatTimePipe implements PipeTransform {\r\n  transform(value: number): string {\r\n    const minutes: number = Math.floor(value / 60) % 60;\r\n    const hours: number = Math.floor(value / 60 / 60);\r\n    if (hours < 1) {\r\n      return ('00' + minutes).slice(-2) + ':' + ('00' + Math.floor(value - minutes * 60)).slice(-2);\r\n    } else {\r\n      return ('00' + hours).slice(-2) + ':' + ('00' + minutes).slice(-2) + ':' + ('00' + Math.floor(value - minutes * 60)).slice(-2);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormatTimePipe } from './format-timer-pipe';\r\nimport { FormatDayOfWeekPipe } from './format-dayofweek-pipe';\r\nimport { FormatDayOfWeekAbbrPipe } from './format-dayofweek-abbr-pipe';\r\n\r\n@NgModule({\r\n  declarations: [ FormatTimePipe, FormatDayOfWeekPipe, FormatDayOfWeekAbbrPipe ],\r\n  imports: [ CommonModule ],\r\n  exports: [ FormatTimePipe, FormatDayOfWeekPipe, FormatDayOfWeekAbbrPipe ]\r\n})\r\n\r\nexport class MainPipeModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { AlertOptions } from '@ionic/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport DateUtils from '../shared/date-utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AlertService {\r\n\r\n  constructor(private translate: TranslateService) { }\r\n\r\n  public getDurationAlertOptions(handler: (alertData: any) => void,\r\n                                 hours: number,\r\n                                 minutes: number,\r\n                                 seconds: number): AlertOptions {\r\n    const options: AlertOptions = {\r\n      header: this.translate.instant('alert.lbl-enter-duration'),\r\n      backdropDismiss: false,\r\n      inputs: [\r\n        {\r\n          name: 'Hours',\r\n          type: 'number',\r\n          placeholder: hours === 0 ? this.translate.instant('alert.lbl-hours') : String(hours),\r\n          min: '0',\r\n          max: '24',\r\n        },\r\n        {\r\n          name: 'Minutes',\r\n          type: 'number',\r\n          placeholder: minutes === 0 ? this.translate.instant('alert.lbl-minutes') : String(minutes),\r\n          min: '0',\r\n          max: '60',\r\n        },\r\n        {\r\n          name: 'Seconds',\r\n          type: 'number',\r\n          placeholder: seconds === 0 ? this.translate.instant('alert.lbl-seconds') : String(seconds),\r\n          min: '0',\r\n          max: '60',\r\n        }\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n        }, {\r\n          text: this.translate.instant('alert.lbl-ok'),\r\n          handler\r\n        }\r\n      ],\r\n      cssClass: 'alert-top'\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  public getDecimalAlertOptions(handler: (alertData: any) => void): AlertOptions {\r\n    const options: AlertOptions = {\r\n      header: this.translate.instant('alert.lbl-enter-value'),\r\n      backdropDismiss: false,\r\n      inputs: [\r\n        {\r\n          name: 'Value',\r\n          type: 'number',\r\n          placeholder: this.translate.instant('alert.placeholder-enter-value')\r\n        }\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-cancel'),\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n        }, {\r\n          text: this.translate.instant('alert.lbl-ok'),\r\n          handler\r\n        }\r\n      ],\r\n      cssClass: 'alert-top'\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  public getNoteAlertOptions(handler: (alertData: any) => void): AlertOptions {\r\n    const options: AlertOptions = {\r\n      header: this.translate.instant('alert.lbl-note'),\r\n      backdropDismiss: false,\r\n      inputs: [\r\n        {\r\n          name: 'Value',\r\n          type: 'text',\r\n          placeholder: this.translate.instant('alert.placeholder-note')\r\n        }\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-cancel'),\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n        }, {\r\n          text: this.translate.instant('alert.lbl-ok'),\r\n          handler\r\n        }\r\n      ],\r\n      cssClass: 'alert-top'\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  public getVoidAlertOptions(handler: (alertData: any) => void): AlertOptions {\r\n    const options: AlertOptions = {\r\n      header: this.translate.instant('alert.msg-confirmation'),\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-no'),\r\n          role: 'Cancel'\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-yes'),\r\n          handler\r\n        },\r\n      ]\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  public getCancelTimerAlertOptions(handler: (alertData: any) => void): AlertOptions {\r\n    const options: AlertOptions = {\r\n      header: this.translate.instant('alert.msg-confirmation'),\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-no'),\r\n          role: 'Cancel'\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-yes'),\r\n          handler\r\n        },\r\n      ]\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  public getDeleteNoteAlertOptions(handler: (alertData: any) => void): AlertOptions {\r\n    const options: AlertOptions = {\r\n      header: this.translate.instant('alert.msg-confirmation'),\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-no'),\r\n          role: 'Cancel'\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-yes'),\r\n          handler\r\n        },\r\n      ]\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  public getDeleteTaskAlertOptions(handler: (alertData: any) => void): AlertOptions {\r\n    const options: AlertOptions = {\r\n      message: this.translate.instant('alert.msg-confirmation-delete'),\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-no'),\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-yes'),\r\n          handler\r\n        }\r\n      ]\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  public getDeleteAccountAlertOptions(handler: (alertData: any) => void): AlertOptions {\r\n    const options: AlertOptions = {\r\n      message: this.translate.instant('alert.msg-confirmation-delete-account'),\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-no'),\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-yes'),\r\n          handler\r\n        }\r\n      ]\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  public getDeleteGroupAlertOptions(handler: (alertData: any) => void): AlertOptions {\r\n    const options: AlertOptions = {\r\n      message: this.translate.instant('alert.msg-confirmation-delete-group'),\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-no'),\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-yes'),\r\n          handler\r\n        }\r\n      ]\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  public getTimerExpiredAlertOptions(handlerCancel: (alertData: any) => void,\r\n                                     handlerOk: (alertData: any) => void,\r\n                                     seconds: number,\r\n                                     taskName: string): AlertOptions {\r\n    const durationString = DateUtils.getDurationString(seconds);\r\n    const alertMsg = this.translate.instant('alert.msg-timer-expired') + '<br/><br/>' + taskName + '<br/>' + durationString;\r\n\r\n    const options: AlertOptions = {\r\n      message: alertMsg,\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-no'),\r\n          handler: handlerCancel\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-yes'),\r\n          handler: handlerOk\r\n        }\r\n      ]\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  public getEditNoteAlertOptions(handler: (alertData: any) => void, text: string): AlertOptions {\r\n    const options: AlertOptions = {\r\n      message: this.translate.instant('alert.msg-confirmation-edit-note'),\r\n      backdropDismiss: false,\r\n      inputs: [\r\n        {\r\n          name: 'Note',\r\n          type: 'text',\r\n          value: text\r\n        },\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-cancel'),\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.btn-save'),\r\n          handler\r\n        }\r\n      ]\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  public getBugReportAlertOptions(handler: (alertData: any) => void): AlertOptions {\r\n    const options: AlertOptions = {\r\n      header: this.translate.instant('alert.msg-thanks'),\r\n      backdropDismiss: false,\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-cancel'),\r\n          role: 'Cancel'\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-send'),\r\n          handler\r\n        }\r\n      ],\r\n      inputs: [\r\n        {\r\n          name: 'Title',\r\n          type: 'text',\r\n          placeholder: this.translate.instant('alert.placeholder-title'),\r\n        },\r\n        {\r\n          name: 'Description',\r\n          type: 'text',\r\n          placeholder: this.translate.instant('alert.placeholder-description'),\r\n        },\r\n      ],\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  public getCloseTaskEditPopupAlertOptions(handlerYes: (alertData: any) => void,\r\n                                           handlerNo: (alertData: any) => void): AlertOptions {\r\n    const options: AlertOptions = {\r\n      message: this.translate.instant('alert.msg-save-confirmation'),\r\n        buttons: [\r\n          {\r\n            text: this.translate.instant('alert.lbl-no'),\r\n            handler: handlerNo\r\n          },\r\n          {\r\n            text: this.translate.instant('alert.lbl-yes'),\r\n            handler: handlerYes\r\n          }\r\n        ]\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  public getConfirmationAlertOptions(headerTxt: string,\r\n                                     handlerYes: (alertData: any) => void,\r\n                                     handlerNo: (alertData: any) => void): AlertOptions {\r\n    const options: AlertOptions = {\r\n      header: headerTxt,\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-cancel'),\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: handlerNo\r\n        }, {\r\n          text: this.translate.instant('alert.lbl-ok'),\r\n          handler: handlerYes\r\n        }\r\n      ]\r\n    };\r\n\r\n    return options;\r\n  }\r\n\r\n  public getChangePositionAlertOptions(handlerOk: (alertData: any) => void,\r\n                                      handlerCancel: (alertData: any) => void,\r\n                                      handlerSetAsDefault: (alertData: any) => void,\r\n                                      handlerSetAsFirst: (alertData: any) => void,\r\n                                      handlerSetAsLast: (alertData: any) => void,\r\n                                      choices: string[],\r\n                                      selected: string): AlertOptions {\r\n    let buttons = [\r\n      {\r\n        text: this.translate.instant('alert.lbl-default'),\r\n        handler: handlerSetAsDefault\r\n      },\r\n      {\r\n        text: this.translate.instant('alert.lbl-first'),\r\n        handler: handlerSetAsFirst\r\n      },\r\n      {\r\n        text: this.translate.instant('alert.lbl-last'),\r\n        handler: handlerSetAsLast\r\n      },\r\n      {\r\n        text: this.translate.instant('alert.lbl-cancel'),\r\n        role: 'cancel',\r\n        cssClass: 'secondary',\r\n        handler: handlerCancel\r\n      },\r\n      {\r\n        text: this.translate.instant('alert.lbl-ok'),\r\n        handler: handlerOk\r\n      },\r\n    ];\r\n\r\n    if (handlerSetAsDefault == null) {\r\n      buttons = [\r\n        {\r\n          text: this.translate.instant('alert.lbl-cancel'),\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: handlerCancel\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-ok'),\r\n          handler: handlerOk\r\n        }\r\n      ];\r\n    }\r\n\r\n    const options: AlertOptions = {\r\n      header: this.translate.instant('alert.lbl-after') + ' :',\r\n      backdropDismiss: false,\r\n      buttons,\r\n      inputs: [],\r\n      cssClass: 'alert-top'\r\n    };\r\n\r\n    for (const choice of choices) {\r\n      options.inputs.push({\r\n        type: 'radio',\r\n        label: choice,\r\n        value: choice,\r\n        checked: choice === selected\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  public getChangeResultTypeOptions(handlerOk: (alertData: any) => void,\r\n                                    handlerCancel: (alertData: any) => void,\r\n                                    // handlerSetAsDefault: (alertData: any) => void,\r\n                                    choices: string[],\r\n                                    selected: string): AlertOptions {\r\n    const buttons = [\r\n      /*{\r\n        text: this.translate.instant('alert.lbl-default'),\r\n        handler: handlerSetAsDefault\r\n      },*/\r\n      {\r\n        text: this.translate.instant('alert.lbl-cancel'),\r\n        role: 'cancel',\r\n        cssClass: 'secondary',\r\n        handler: handlerCancel\r\n      },\r\n      {\r\n        text: this.translate.instant('alert.lbl-ok'),\r\n        handler: handlerOk\r\n      },\r\n    ];\r\n\r\n    const options: AlertOptions = {\r\n      header: this.translate.instant('alert.lbl-result-type') + ' :',\r\n      backdropDismiss: false,\r\n      buttons,\r\n      inputs: [],\r\n      cssClass: 'alert-top'\r\n    };\r\n\r\n    for (const choice of choices) {\r\n      options.inputs.push({\r\n        type: 'radio',\r\n        label: choice,\r\n        value: choice,\r\n        checked: choice === selected\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n\r\n  public getChangeDefaultGroupAlertOptions(handlerOk: (alertData: any) => void,\r\n                                           handlerCancel: (alertData: any) => void,\r\n                                           handlerSetAsDefault: (alertData: any) => void,\r\n                                           handlerNew: (alertData: any) => void,\r\n                                           choices: string[],\r\n                                           selected: string): AlertOptions {\r\n    let buttons = [\r\n      {\r\n        text: this.translate.instant('alert.lbl-default'),\r\n        handler: handlerSetAsDefault\r\n      },\r\n      {\r\n        text: this.translate.instant('alert.lbl-create-new'),\r\n        cssClass: 'secondary',\r\n        handler: handlerNew\r\n      },\r\n      {\r\n        text: this.translate.instant('alert.lbl-cancel'),\r\n        role: 'cancel',\r\n        cssClass: 'secondary',\r\n        handler: handlerCancel\r\n      },\r\n      {\r\n        text: this.translate.instant('alert.lbl-ok'),\r\n        handler: handlerOk\r\n      },\r\n    ];\r\n\r\n    if (handlerSetAsDefault == null) {\r\n      buttons = [\r\n        {\r\n          text: this.translate.instant('alert.lbl-cancel'),\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: handlerCancel\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-ok'),\r\n          handler: handlerOk\r\n        }\r\n      ];\r\n    }\r\n\r\n    const options: AlertOptions = {\r\n      header: this.translate.instant('alert.lbl-group') + ' :',\r\n      backdropDismiss: false,\r\n      buttons,\r\n      inputs: [],\r\n      cssClass: 'alert-top'\r\n    };\r\n\r\n    for (const choice of choices) {\r\n      options.inputs.push({\r\n        type: 'radio',\r\n        label: choice,\r\n        value: choice,\r\n        checked: choice === selected\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  public getChangeGroupPositionAlertOptions(handlerOk: (alertData: any) => void,\r\n                                            handlerCancel: (alertData: any) => void,\r\n                                            handlerSetAsFirst: (alertData: any) => void,\r\n                                            choices: string[],\r\n                                            selected: string): AlertOptions {\r\n    const buttons = [\r\n      {\r\n        text: this.translate.instant('alert.lbl-first'),\r\n        handler: handlerSetAsFirst\r\n      },\r\n      {\r\n        text: this.translate.instant('alert.lbl-cancel'),\r\n        role: 'cancel',\r\n        cssClass: 'secondary',\r\n        handler: handlerCancel\r\n      },\r\n      {\r\n        text: this.translate.instant('alert.lbl-ok'),\r\n        handler: handlerOk\r\n      },\r\n    ];\r\n\r\n    const options: AlertOptions = {\r\n      header: this.translate.instant('alert.lbl-after') + ' :',\r\n      backdropDismiss: false,\r\n      buttons,\r\n      inputs: []\r\n    };\r\n\r\n    for (const choice of choices) {\r\n      options.inputs.push({\r\n        type: 'radio',\r\n        label: choice,\r\n        value: choice,\r\n        checked: choice === selected\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  public getConfirmChangeGroupAlertOptions(handler: (alertData: any) => void,\r\n                                           groupName: string): AlertOptions {\r\n    const options: AlertOptions = {\r\n      message: this.translate.instant('alert.msg-confirmation-change-group', {groupName}),\r\n      buttons: [\r\n        {\r\n          text: this.translate.instant('alert.lbl-no'),\r\n        },\r\n        {\r\n          text: this.translate.instant('alert.lbl-yes'),\r\n          handler\r\n        }\r\n      ]\r\n    };\r\n\r\n    return options;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { DTOGetCalendarTaskRequest } from '../models/DTO/dto-get-calendar-task-request';\r\nimport { DTOCalendarTask } from '../models/DTO/dto-calendar-task';\r\nimport { DTOTaskHistory } from '../models/DTO/dto-task-history';\r\nimport { forkJoin, throwError } from 'rxjs';\r\nimport { DTOBugReport } from '../models/DTO/dto-bug-report';\r\nimport { IApiProvider as IApiService } from '../interfaces/i-api-provider';\r\nimport { ILogger } from '../interfaces/i-logger';\r\nimport { DTOUser } from '../models/DTO/dto-user';\r\nimport { DTOUserConfig } from '../models/DTO/dto-user-config';\r\n//import DateUtils from '../shared/date-utils';\r\nimport { DTOTaskGroup } from '../models/DTO/dto-task-group';\r\nimport { File } from '@ionic-native/file/ngx';\r\nimport { ApiHttpError } from '../models/Exceptions/ApiHttpError';\r\nimport { IAuthenticationService } from '../interfaces/i-authentication-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService implements IApiService {\r\n\r\n  private baseUrl: string = environment.apiUrl;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private logger: ILogger,\r\n    private file: File,\r\n    private auth: IAuthenticationService) { }\r\n\r\n  public async getHttpHeaders(): Promise<HttpHeaders> {\r\n    const token = await this.auth.getUserJsonWebToken();\r\n    return new HttpHeaders().set('Authorization', token);\r\n  }\r\n\r\n  /*\r\n   * Build the api url call with the provided method name\r\n   */\r\n  private getApiUrlCall(methodName: string): string {\r\n    let url = '';\r\n\r\n    url = this.baseUrl + methodName;\r\n\r\n    return url;\r\n  }\r\n\r\n  public async insertCalendarTasks(tasks: DTOCalendarTask[]): Promise<string[]> {\r\n    const url = this.getApiUrlCall('api/CalendarTask');\r\n    const headers = await this.getHttpHeaders();\r\n\r\n    try {\r\n      // We can't send all requests at the same time because we need to keep track of the Ids\r\n      // this could be solved by assinging a second Id to be able to reorder them after received\r\n      const calendarTaskIds: string[] = [];\r\n      for (const task of tasks) {\r\n        const dto = task.clone();\r\n        dto.Histories = [];\r\n        // console.log('insertCalendarTasks', task);\r\n        const calendarTaskId = await this.http.post<string>(url, dto, { headers }).toPromise();\r\n        calendarTaskIds.push(calendarTaskId);\r\n      }\r\n\r\n      return calendarTaskIds;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('insertCalendarTasks failed'), { key: 'error', value: JSON.stringify(error)});\r\n      throwError('insertCalendarTasks failed');\r\n    }\r\n  }\r\n\r\n  public async updateCalendarTasks(tasks: DTOCalendarTask[]): Promise<boolean> {\r\n    const url = this.getApiUrlCall('api/CalendarTask');\r\n    const headers = await this.getHttpHeaders();\r\n\r\n    try {\r\n      const observables = [];\r\n      for (const task of tasks) {\r\n        const dto = task.clone();\r\n        dto.Histories = [];\r\n        const oneObs = this.http.put<boolean>(url, dto, { headers });\r\n        observables.push(oneObs);\r\n      }\r\n\r\n      // console.log('updateCalendarTasks', tasks);\r\n\r\n      await forkJoin(observables).toPromise();\r\n      return true;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('updateCalendarTasks failed'), { key: 'error', value: JSON.stringify(error)});\r\n      throwError('updateCalendarTasks failed');\r\n    }\r\n  }\r\n\r\n  public async getTasks(request: DTOGetCalendarTaskRequest): Promise<DTOCalendarTask[]> {\r\n    const url = this.getApiUrlCall('api/CalendarTask');\r\n    const headers = await this.getHttpHeaders();\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('userId', request.userId);\r\n    params = params.append('IncludeVoid', String(request.IncludeVoid));\r\n    params = params.append('DateStart', request.DateStart.toISOString());\r\n    params = params.append('DateEnd', request.DateEnd.toISOString());\r\n\r\n    try {\r\n      const response = await this.http.get<DTOCalendarTask[]>(url, { params, headers }).toPromise();\r\n      return response;\r\n    } catch (error) {\r\n      // console.log('error', error);\r\n      this.logger.logError(new Error('getTasks failed'), { key: 'error', value: JSON.stringify(error)});\r\n      // throwError('getTasks failed').toPromise();\r\n      return [];\r\n    }\r\n  }\r\n\r\n  public async insertTaskHistories(histories: DTOTaskHistory[]): Promise<string[]> {\r\n\r\n    //console.log('inserting taskhistories', histories);\r\n    const url = this.getApiUrlCall('api/TaskHistory');\r\n    const headers = await this.getHttpHeaders();\r\n\r\n    try {\r\n      // We can't send all requests at the same time because we need to keep track of the Ids\r\n      // this could be solved by assinging a second Id to be able to reorder them after received\r\n      const historyIds: string[] = [];\r\n      for (const history of histories) {\r\n        const historyId = await this.http.post<string>(url, history, { headers }).toPromise();\r\n        historyIds.push(historyId);\r\n      }\r\n\r\n      return historyIds;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('insertTaskHistories failed'), { key: 'error', value: JSON.stringify(error)});\r\n\r\n      if (error.name === 'HttpErrorResponse') {\r\n        throw new ApiHttpError('Unable to insertTaskHistories');\r\n      }\r\n\r\n      throwError('insertTaskHistories failed');\r\n    }\r\n  }\r\n\r\n  public async updateTaskHistories(histories: DTOTaskHistory[]): Promise<boolean> {\r\n    const url = this.getApiUrlCall('api/TaskHistory');\r\n    const headers = await this.getHttpHeaders();\r\n\r\n    try {\r\n      const observables = [];\r\n      for (const history of histories) {\r\n        const oneObs = this.http.put<boolean>(url, history, { headers });\r\n        observables.push(oneObs);\r\n      }\r\n\r\n      await forkJoin(observables).toPromise();\r\n      return true;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('updateTaskHistories failed'), { key: 'error', value: JSON.stringify(error)});\r\n      throwError('updateTaskHistories failed');\r\n    }\r\n  }\r\n\r\n  public async sendReport(report: DTOBugReport): Promise<boolean> {\r\n    const url = this.getApiUrlCall('api/BugReport');\r\n    const headers = await this.getHttpHeaders();\r\n\r\n    try {\r\n      const result = await this.http.post<boolean>(url, report, { headers }).toPromise();\r\n\r\n      return result;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('sendReport failed'), { key: 'error', value: JSON.stringify(error)});\r\n      throwError('sendReport failed');\r\n    }\r\n  }\r\n\r\n  public async getUser(userId: string): Promise<DTOUser> {\r\n    const start = new Date();\r\n    // this.logger.logDebug('GETUSER', userId, start.toISOString());\r\n    const url = this.getApiUrlCall('api/User');\r\n    const headers = await this.getHttpHeaders();\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('userId', userId);\r\n\r\n    try {\r\n      const response = await this.http.get<DTOUser>(url, { params, headers }).toPromise();\r\n      if (response == null) {\r\n        return null;\r\n      }\r\n\r\n      // NULL User behavior from api\r\n      if (response.Id === null && response.UserId === null) {\r\n        return null;\r\n      }\r\n\r\n      // this.logger.logDebug('GETUSER response', JSON.stringify(response), DateUtils.getTimeSince(start));\r\n\r\n      if (response.Config == null) {\r\n        response.Config = new DTOUserConfig();\r\n      }\r\n      return response;\r\n    } catch (error) {\r\n\r\n      this.logger.logError(new Error('getUser failed'), { key: 'error', value: JSON.stringify(error)});\r\n      \r\n      // console.log('ERROR GET USER: ', error);\r\n      if (error.name === 'HttpErrorResponse') {\r\n        throw new ApiHttpError('Unable to get user from api');\r\n      }\r\n\r\n      throwError('getUser failed').toPromise();\r\n    }\r\n  }\r\n\r\n  public async saveUser(user: DTOUser): Promise<boolean> {\r\n    const url = this.getApiUrlCall('api/User');\r\n    const headers = await this.getHttpHeaders();\r\n\r\n    try {\r\n      // console.log('API SAVE USER', user, new Date());\r\n      const response = await this.http.put<any>(url, user, { headers }).toPromise();\r\n      // console.log('API USER SAVED', new Date());\r\n      return response;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('setUser failed'), { key: 'error', value: JSON.stringify(error)});\r\n      throwError('setUser failed').toPromise();\r\n    }\r\n  }\r\n\r\n  public async getGroups(userId: string): Promise<DTOTaskGroup[]> {\r\n    const url = this.getApiUrlCall('api/TaskGroup');\r\n    const headers = await this.getHttpHeaders();\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('userId', userId);\r\n\r\n    try {\r\n      const response = await this.http.get<DTOTaskGroup[]>(url, { params, headers }).toPromise();\r\n      if (response == null) {\r\n        return null;\r\n      }\r\n\r\n      // this.logger.logDebug('getGroups response', JSON.stringify(response));\r\n\r\n      return response;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('getGroups failed'), { key: 'error', value: JSON.stringify(error)});\r\n      throwError('getGroups failed').toPromise();\r\n    }\r\n  }\r\n\r\n  public async insertGroup(group: DTOTaskGroup): Promise<boolean> {\r\n    const url = this.getApiUrlCall('api/TaskGroup');\r\n    const headers = await this.getHttpHeaders();\r\n\r\n    try {\r\n      const groupId = await this.http.post<string>(url, group, { headers }).toPromise();\r\n\r\n      return true;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('insertGroup failed'), { key: 'error', value: JSON.stringify(error)});\r\n      throwError('insertGroup failed');\r\n    }\r\n  }\r\n\r\n  public async updateGroup(group: DTOTaskGroup): Promise<boolean> {\r\n    const url = this.getApiUrlCall('api/TaskGroup');\r\n    const headers = await this.getHttpHeaders();\r\n\r\n    console.log('UPDATING GROUP API : ', group, url);\r\n\r\n    try {\r\n      const groupId = await this.http.put<string>(url, group, { headers }).toPromise();\r\n\r\n      return true;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('insertGroup failed'), { key: 'error', value: JSON.stringify(error)});\r\n      throwError('insertGroup failed');\r\n    }\r\n  }\r\n\r\n  public async downloadAllData(userId: string): Promise<string> {\r\n    const url = this.getApiUrlCall('api/Report');\r\n    const headers = await this.getHttpHeaders();\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('userId', userId);\r\n\r\n    try {\r\n      const response = await this.http.get<any>(url, { params, headers, responseType: 'blob' as 'json' }).toPromise();\r\n      // console.log('DONWLOAD RESPONSE : ', response);\r\n      if (response == null) {\r\n        return null;\r\n      }\r\n\r\n      // this.logger.logDebug('getreport response', JSON.stringify(response));\r\n\r\n      // For other browsers:\r\n      // Create a link pointing to the ObjectURL containing the blob.\r\n      // const data = window.URL.createObjectURL(response);\r\n      /*const link = document.createElement('a');\r\n      link.href = data;\r\n      link.download = 'hypertaskdata.csv';\r\n      link.click();\r\n      setTimeout(() => {\r\n        // For Firefox it is necessary to delay revoking the ObjectURL\r\n        window.URL.revokeObjectURL(data);\r\n      }, 100);*/\r\n\r\n      // SAVE DOWNLOADED FILE\r\n      const result = await this.file.writeFile(this.file.externalRootDirectory + '/Download',\r\n                                               'hypertaskdata.csv',\r\n                                               response,\r\n                                               {replace: true});\r\n\r\n      // console.log('result:', result.nativeURL);\r\n\r\n      return result.nativeURL;\r\n    } catch (error) {\r\n      // console.log('DOWNLOAD ERROR : ', error);\r\n      this.logger.logError(new Error('downloadAllData failed'), { key: 'error', value: JSON.stringify(error)});\r\n      throwError('downloadAllData failed').toPromise();\r\n    }\r\n  }\r\n\r\n  public async permanentlyDeleteAccount(userId: string): Promise<boolean> {\r\n    const url = this.getApiUrlCall('api/User');\r\n    const headers = await this.getHttpHeaders();\r\n\r\n    let params = new HttpParams();\r\n    params = params.append('userId', userId);\r\n\r\n    try {\r\n      const response = await this.http.delete<any>(url, { params, headers }).toPromise();\r\n      // console.log('DELETE RESPONSE : ', response);\r\n      if (response == null) {\r\n        return null;\r\n      }\r\n\r\n      // this.logger.logDebug('getreport response', JSON.stringify(response));\r\n\r\n      return true;\r\n    } catch (error) {\r\n      // console.log('DELETE ERROR : ', error);\r\n      this.logger.logError(new Error('delete account failed'), { key: 'error', value: JSON.stringify(error)});\r\n      throwError('delete account failed').toPromise();\r\n    }\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { ApplicationInsights, IExceptionTelemetry, IEventTelemetry } from '@microsoft/applicationinsights-web';\r\nimport { ActivatedRouteSnapshot, ResolveEnd, Router } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Subscription } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { ILogger } from '../interfaces/i-logger';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApplicationInsightsService implements ILogger, OnDestroy {\r\n\r\n  private routerSubscription: Subscription;\r\n  private logs: string[] = [];\r\n  private maxLogsLines = 1000;\r\n\r\n  private appInsights = new ApplicationInsights({\r\n    config: {\r\n      instrumentationKey: environment.instrumentationKey,\r\n      enableCorsCorrelation: false,\r\n    }\r\n  });\r\n\r\n  constructor(private router: Router) {\r\n    const insight = this.appInsights.loadAppInsights();\r\n    this.routerSubscription = this.router.events.pipe(filter(event => event instanceof ResolveEnd)).subscribe((event: ResolveEnd) => {\r\n      const activatedComponent = this.getActivatedComponent(event.state.root);\r\n      if (activatedComponent) {\r\n        this.logPageView(`${activatedComponent.name} ${this.getRouteTemplate(event.state.root)}`, event.urlAfterRedirects);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.routerSubscription.unsubscribe();\r\n  }\r\n\r\n  public setUserId(userId: string): void {\r\n    this.appInsights.setAuthenticatedUserContext(userId);\r\n  }\r\n\r\n  public clearUserId(): void {\r\n    this.appInsights.clearAuthenticatedUserContext();\r\n  }\r\n\r\n  public logPageView(name?: string, uri?: string): void {\r\n    this.appInsights.trackPageView({ name, uri });\r\n  }\r\n\r\n\r\n  /**\r\n   * Logs into RAM to be displayed in the app\r\n   */\r\n  public logDebug(str1: string, str2: string = '', str3: string = '') {\r\n    const result = str1 + ' ' + str2 + ' ' + str3;\r\n\r\n    console.log(result);\r\n\r\n    this.logs.push(result);\r\n\r\n    if (this.logs.length === this.maxLogsLines) {\r\n      this.logs.splice(0, this.maxLogsLines * 0.5);\r\n      console.clear();\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  public logEvent(name: string, properties?: { [key: string]: string }, measurements?: { [key: string]: number }) {\r\n    this.logs.push(name, JSON.stringify(properties));\r\n\r\n    if (this.logs.length === this.maxLogsLines) {\r\n      this.logs.splice(0, this.maxLogsLines * 0.5);\r\n      console.clear();\r\n    }\r\n\r\n    const event: IEventTelemetry = {\r\n      name, measurements, properties\r\n    };\r\n    try {\r\n      this.appInsights.trackEvent(event, properties);\r\n      this.appInsights.flush(false);\r\n      console.log('tracking event successful', event);\r\n    } catch {\r\n      // console.log('error tracking event');\r\n    }\r\n  }\r\n\r\n  public logError(error: Error, properties?: { [key: string]: string }, measurements?: { [key: string]: number }) {\r\n    this.logs.push(error.name + ' ' + error.message + ' ' + JSON.stringify(properties));\r\n\r\n    if (this.logs.length === this.maxLogsLines) {\r\n      this.logs.splice(0, this.maxLogsLines * 0.5);\r\n      console.clear();\r\n    }\r\n\r\n    const exception: IExceptionTelemetry = {\r\n      error, measurements, properties,\r\n    };\r\n    this.appInsights.trackException(exception);\r\n    // console.log('Logged error : ', exception);\r\n    console.error('Logged error2 : ', error);\r\n  }\r\n\r\n  public logConsole(name: string, properties?: { [key: string]: string; }, measurements?: { [key: string]: number; }) {\r\n    console.log(name, properties, measurements);\r\n  }\r\n\r\n  private getActivatedComponent(snapshot: ActivatedRouteSnapshot): any {\r\n    if (snapshot.firstChild) {\r\n      return this.getActivatedComponent(snapshot.firstChild);\r\n    }\r\n\r\n    return snapshot.component;\r\n  }\r\n\r\n  private getRouteTemplate(snapshot: ActivatedRouteSnapshot): string {\r\n    let path = '';\r\n    if (snapshot.routeConfig) {\r\n      path += snapshot.routeConfig.path;\r\n    }\r\n\r\n    if (snapshot.firstChild) {\r\n      return path + this.getRouteTemplate(snapshot.firstChild);\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  public getDebugLogs(): string[] {\r\n    return this.logs;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\nimport { IAuthenticationService } from '../interfaces/i-authentication-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private auth: IAuthenticationService,\r\n              private router: Router) {\r\n  }\r\n\r\n  public async canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Promise<boolean> {\r\n\r\n    const isLoggedIn = await this.auth.currentUserIsAuthenticated();\r\n\r\n    if (isLoggedIn === true) {\r\n      return true;\r\n    } else {\r\n      this.redirectToLogin();\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private redirectToLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ILogger } from '../interfaces/i-logger';\r\nimport { IAuthenticationService } from '../interfaces/i-authentication-service';\r\nimport { User } from '@angular/fire/auth';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { first } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService implements IAuthenticationService {\r\n\r\n  //private isAuthenticated: boolean = false;\r\n\r\n  constructor(private logger: ILogger,\r\n              private auth: AngularFireAuth) {\r\n    /*auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        this.isAuthenticated = true;\r\n        console.log('USER IS SIGNED IN');\r\n      } else {\r\n        this.isAuthenticated = false;\r\n        console.log('USER IS NOT SIGNED IN');\r\n      }\r\n    });*/\r\n  }\r\n\r\n  public async currentUserIsAuthenticated(): Promise<boolean> {\r\n    const user = await this.auth.authState.pipe(first()).toPromise();;\r\n    if (user) {\r\n      //console.log('USER IS AUTHENTICATED');\r\n      return true;\r\n    } else {\r\n      //console.log('USER IS NOT AUTHENTICATED');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async getUserId(): Promise<string> {\r\n    //console.log('getUserId string');\r\n    const user = await this.getUser();\r\n    //console.log('getUserId got user', user);\r\n    if (user == null) {\r\n      return null;\r\n    } else {\r\n      //console.log('RETURNING USER ID : ', user.uid);\r\n      return user.uid;\r\n    }\r\n  }\r\n\r\n  public getUser(): Promise<User> { //todo capacitor\r\n    /*console.log('GETTING USER GETUSER()');\r\n    console.log('current user : ', this.auth.currentUser);\r\n    console.log('current user : ', this.auth.user);*/\r\n    //return this.auth.currentUser;\r\n    return this.auth.authState.pipe(first()).toPromise();\r\n  }\r\n\r\n  public async setLoginPersistance(): Promise<void> {\r\n    try {\r\n      //console.log('PERSISTANCE SET BEFORE');\r\n      await this.auth.setPersistence('local');\r\n      //console.log('PERSISTANCE SET AFTER');\r\n    } catch (error) {\r\n      //console.log('ERROR PERSISTANCE', error)\r\n      this.logger.logError(error);\r\n    }\r\n  }\r\n\r\n  public async getUserJsonWebToken(): Promise<string> {\r\n    const token = await (await this.auth.currentUser).getIdToken();\r\n    return token;\r\n  }\r\n\r\n  public async signInWithEmailPassword(email: string,\r\n                                       password: string) {\r\n    try {\r\n      const response = await this.auth.signInWithEmailAndPassword(email, password);\r\n      return response;\r\n    } catch (error) {\r\n      this.logger.logError(error);\r\n    }\r\n  }\r\n\r\n  public async createAccount(email: string,\r\n                             password: string): Promise<string> {\r\n    try {\r\n      const response = await this.auth.createUserWithEmailAndPassword(email, password);\r\n      return response.user.uid;\r\n    } catch (error) {\r\n      this.logger.logError(error);\r\n    }\r\n  }\r\n\r\n  public async logout(): Promise<void> {\r\n    //console.log('LOGOUT');\r\n    await this.auth.signOut();\r\n    return;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DTOBugReport } from '../models/DTO/dto-bug-report';\r\nimport { IApiProvider } from '../interfaces/i-api-provider';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BugReportService {\r\n\r\n  constructor(private apiProvider: IApiProvider) { }\r\n\r\n  public async SendReport(report: DTOBugReport): Promise<boolean> {\r\n    if (report.Title.length > 200) {\r\n      report.Title = report.Title.substring(0, 200);\r\n    }\r\n\r\n    if (report.Description != null && report.Description.length > 20000) {\r\n      report.Description = report.Description.substring(0, 20000);\r\n    }\r\n\r\n    const success = await this.apiProvider.sendReport(report);\r\n    return success;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { throwError } from 'rxjs';\r\nimport { DTOGetCalendarTaskRequest } from '../models/DTO/dto-get-calendar-task-request';\r\nimport { DTOCalendarTask } from '../models/DTO/dto-calendar-task';\r\nimport DateUtils from '../shared/date-utils';\r\nimport { CalendarTask } from '../models/Core/calendar-task';\r\nimport { CalendarTaskNotFoundError } from '../models/Exceptions/CalendarTaskNotFoundError';\r\nimport { IApiProvider } from '../interfaces/i-api-provider';\r\nimport { ILocalStorageService } from '../interfaces/i-local-storage-service';\r\nimport { StatType } from '../models/Core/custom-stat.enum';\r\nimport { TaskFrequency } from '../models/Core/task-frequency.enum';\r\nimport { ILogger } from '../interfaces/i-logger';\r\nimport { TaskHistory } from '../models/Core/task-history';\r\nimport { DayOfWeek } from '../models/Core/day-of-week.enum';\r\nimport { DateService } from './date.service';\r\nimport { IDataSyncLocalService } from '../interfaces/i-data-sync-local-service';\r\nimport NumberUtils from '../shared/number-utils';\r\nimport { DatePipe } from '@angular/common';\r\nimport { TaskGroup } from '../models/Core/task-group';\r\nimport { UserService } from './user.service';\r\nimport { DTOTaskGroup } from '../models/DTO/dto-task-group';\r\nimport { EventData, EventService } from './event.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CalendarTaskService {\r\n\r\n  public static UnassignedId: string = 'unassigned';\r\n\r\n  // public allTasksNoOrder: CalendarTask[] = [];\r\n  public allGroups: TaskGroup[] = [];\r\n  public currentProgressTotal: number;\r\n  public currentProgressDone: number;\r\n  public currentProgressText: string;\r\n  public currentProgressValue: number;\r\n  public enableDragAndDrop: boolean;\r\n\r\n  constructor(private apiProvider: IApiProvider,\r\n              private local: ILocalStorageService,\r\n              private localDataSync: IDataSyncLocalService,\r\n              private logger: ILogger,\r\n              private dateService: DateService,\r\n              private datepipe: DatePipe,\r\n              private userService: UserService,\r\n              private eventService: EventService) { }\r\n\r\n  public getAllPresentTasks(): CalendarTask[] {\r\n    const result: CalendarTask[] = [];\r\n\r\n    const dateStart = new Date();\r\n    console.log('getAllPresentTasks (EXPONENTIAL)', dateStart.toISOString());\r\n    // TODO: BIG NONO this is exponential\r\n    for (const group of this.allGroups) {\r\n      for (const task of group.Tasks) {\r\n        if (task.Void !== true &&\r\n            ((task.Frequency !== TaskFrequency.Once &&\r\n              task.Frequency !== TaskFrequency.UntilDone) ||\r\n              !task.Histories.some(t => t.TaskDone &&\r\n                                        !t.Void &&\r\n                                        t.DoneWorkDate < this.dateService.GetTodayWorkDate()))) {\r\n          result.push(task);\r\n        }\r\n      }\r\n    }\r\n    console.log('getAllPresentTasks DONE (EXPONENTIAL)', dateStart.toISOString());\r\n\r\n    return result;\r\n  }\r\n\r\n  public getAllTasks(): CalendarTask[] {\r\n    const result: CalendarTask[] = [];\r\n\r\n    for (const group of this.allGroups) {\r\n      for (const task of group.Tasks) {\r\n        result.push(task);\r\n      }\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public getTask(calendarTaskId: string): CalendarTask {\r\n    // TODO : Use some kind of index instead ?\r\n    for (const group of this.allGroups) {\r\n      for (const task of group.Tasks) {\r\n        if (task.CalendarTaskId === calendarTaskId) {\r\n          return task;\r\n        }\r\n      }\r\n    }\r\n\r\n    // console.log('CalendartaskId = ', calendarTaskId);\r\n    // console.log('AllGroups = ', this.allGroups);\r\n    throw new CalendarTaskNotFoundError('getTask : Unable to find calendar task index while setting as sent 1');\r\n  }\r\n\r\n  public getTaskFromStatType(statType: StatType) {\r\n    for (const group of this.allGroups) {\r\n      for (const task of group.Tasks) {\r\n        if (task.StatType === statType) {\r\n          return task;\r\n        }\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Inserts task in RAM and adds to queue to insert in Local\r\n   * Tasks also get reordered, groups are set to visible // TODO : we might want to move this in tasklist in event\r\n   */\r\n  public async insertCalendarTask(task: CalendarTask): Promise<boolean> {\r\n\r\n    task.InsertDate = new Date();\r\n    task.UpdateDate = new Date();\r\n\r\n    this.logger.logEvent('inserting task', { key: 'task', value: JSON.stringify(task)});\r\n    // console.log('INSERTING TASK', task);\r\n\r\n    this.eventService.emit(new EventData(EventService.EventIds.SyncRequired, null));\r\n\r\n    // INITIALIZE VALUES\r\n    if (task.GroupId == null) {\r\n      task.GroupId = CalendarTaskService.UnassignedId;\r\n    }\r\n    if (task.InitialGroupId == null) {\r\n      task.InitialGroupId = task.GroupId;\r\n    }\r\n    if (task.InitialAbsolutePosition == null) {\r\n      task.InitialAbsolutePosition = 500;\r\n    }\r\n\r\n    task.Sent = false;\r\n\r\n    // CHECK IF ALREADY EXISTS\r\n    const alreadyExists = this.getAllTasks().some(p => p.CalendarTaskId === task.CalendarTaskId);\r\n    if (alreadyExists === true) {\r\n      this.logger.logError(new Error('Task already exists'));\r\n      return false;\r\n    }\r\n\r\n    // CHECK IF ABSOLUTEPOSITION ALREADY EXISTS AND SORT ACCORDINGLY\r\n    const existingTasks = this.getAllPresentTasks().filter(p => !p.Void &&\r\n                                                                p.AbsolutePosition === task.AbsolutePosition &&\r\n                                                                p.GroupId === task.GroupId);\r\n    if (existingTasks.length > 0) {\r\n      // console.log('Position already exists, reordering tasks, task =, InitialPosition=', existingTasks, task.InitialAbsolutePosition);\r\n\r\n      // Push\r\n      const group = this.getGroup(task.GroupId);\r\n      group.Tasks.push(task);\r\n      await this.reassignOrderTask(task); // it's very long we have to optimize this, It gets inserted here\r\n    } else {\r\n      // console.log('Position does not already exist, InitialPosition=', task.InitialAbsolutePosition);\r\n\r\n      // Push\r\n      const group = this.getGroup(task.GroupId);\r\n      group.Tasks.push(task);\r\n      group.Tasks = this.getSortedTasksFromTasks(group.Tasks);\r\n    }\r\n\r\n    this.setGroupsVisible();\r\n\r\n    await this.localDataSync.queueInsertCalendarTask(task.toDTO());\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Inserts tasks in RAM and adds to queue to insert in Local\r\n   * Tasks also get reordered, groups are set to visible\r\n   */\r\n  public async insertCalendarTasks(tasks: CalendarTask[]): Promise<boolean> {\r\n\r\n    this.logger.logEvent('inserting task', { key: 'task', value: JSON.stringify(tasks)});\r\n    // console.log('INSERTING TASK', task);\r\n\r\n    this.eventService.emit(new EventData(EventService.EventIds.SyncRequired, null));\r\n\r\n    // INITIALIZE VALUES\r\n    for (const task of tasks) {\r\n      task.InsertDate = new Date();\r\n      task.UpdateDate = new Date();\r\n\r\n      if (task.GroupId == null) {\r\n        task.GroupId = CalendarTaskService.UnassignedId;\r\n      }\r\n      if (task.InitialGroupId == null) {\r\n        task.InitialGroupId = task.GroupId;\r\n      }\r\n      if (task.InitialAbsolutePosition == null) {\r\n        task.InitialAbsolutePosition = 500;\r\n      }\r\n\r\n      task.Sent = false;\r\n\r\n      // CHECK IF ALREADY EXISTS\r\n      const alreadyExists = this.getAllTasks().some(p => p.CalendarTaskId === task.CalendarTaskId);\r\n      if (alreadyExists === true) {\r\n        this.logger.logError(new Error('Task already exists'));\r\n        return false;\r\n      }\r\n\r\n      // CHECK IF ABSOLUTEPOSITION ALREADY EXISTS AND SORT ACCORDINGLY\r\n      const existingTasks = this.getAllPresentTasks().filter(p => !p.Void &&\r\n                                                                  p.AbsolutePosition === task.AbsolutePosition &&\r\n                                                                  p.GroupId === task.GroupId);\r\n      if (existingTasks.length > 0) {\r\n        // console.log('Position already exists, reordering tasks, task =, InitialPosition=', existingTasks, task.InitialAbsolutePosition);\r\n\r\n        // Push\r\n        const group = this.getGroup(task.GroupId);\r\n        group.Tasks.push(task);\r\n        await this.reassignOrderTask(task); // it's very long we have to optimize this, It gets inserted here\r\n      } else {\r\n        // console.log('Position does not already exist, InitialPosition=', task.InitialAbsolutePosition);\r\n\r\n        // Push\r\n        const group = this.getGroup(task.GroupId);\r\n        group.Tasks.push(task);\r\n        group.Tasks = this.getSortedTasksFromTasks(group.Tasks);\r\n      }\r\n    }\r\n\r\n    this.setGroupsVisible();\r\n\r\n    await this.localDataSync.queueInsertCalendarTasks(tasks.map(p => p.toDTO()));\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Updates task into RAM, reorder tasks,\r\n   * sets groups to visible // TODO : we might want to move this in tasklist in event\r\n   */\r\n  public async updateCalendarTask(task: CalendarTask): Promise<boolean> {\r\n    // log too long which includes all histories\r\n    this.logger.logEvent('updating task', { key: 'task', value: JSON.stringify(task)});\r\n\r\n    // console.log('Updating task', task);\r\n    task.UpdateDate = new Date();\r\n\r\n    this.eventService.emit(new EventData(EventService.EventIds.SyncRequired, null));\r\n\r\n    this.replaceTaskInRam(task);\r\n\r\n    if ((task.AbsolutePosition !== task.InitialAbsolutePosition ||\r\n         task.InitialGroupId !== task.GroupId) &&\r\n        task.Void  === false) {\r\n      await this.reassignOrderTask(task);\r\n    }\r\n\r\n    this.setGroupsVisible();\r\n    await this.updateTaskAsyncNoPositionCheck(task, false);\r\n    return true;\r\n  }\r\n\r\n  private replaceTaskInRam(task: CalendarTask) {\r\n    const targetGroup = this.getGroup(task.GroupId);\r\n    console.log('replacing in ram', targetGroup, task.GroupId, task, this.allGroups);\r\n\r\n    if (task.InitialGroupId !== task.GroupId) {\r\n      // remove from old group\r\n      const oldGroup = this.getGroup(task.InitialGroupId);\r\n      if (oldGroup != null) {\r\n        const oldIndex = oldGroup.Tasks.findIndex(p => p.CalendarTaskId === task.CalendarTaskId);\r\n        if (oldIndex !== -1) {\r\n          oldGroup.Tasks.splice(oldIndex, 1);\r\n        }\r\n      }\r\n      // remove from target group\r\n      if (targetGroup != null) {\r\n        const newIndex = targetGroup.Tasks.findIndex(p => p.CalendarTaskId === task.CalendarTaskId);\r\n        if (newIndex !== -1) {\r\n          console.log('removing from target group');\r\n          targetGroup.Tasks.splice(newIndex, 1);\r\n        }\r\n      }\r\n      // add into new group\r\n      targetGroup.Tasks.push(task);\r\n    } else {\r\n      console.log('TARGET GROUP BEFORE', targetGroup.Tasks.map(p => p.AbsolutePosition));\r\n      const index = targetGroup.Tasks.findIndex(p => p.CalendarTaskId === task.CalendarTaskId);\r\n      targetGroup.Tasks[index] = task;\r\n      console.log('TARGET GROUP AFTER', targetGroup.Tasks.map(p => p.AbsolutePosition));\r\n    }\r\n\r\n    console.log('replaced in ram', targetGroup);\r\n  }\r\n\r\n  public async reassignOrderTask(task: CalendarTask): Promise<void> {\r\n    const difference = task.AbsolutePosition - task.InitialAbsolutePosition;\r\n    const lowest = Math.min(task.AbsolutePosition, task.InitialAbsolutePosition);\r\n    const highest = Math.max(task.AbsolutePosition, task.InitialAbsolutePosition);\r\n\r\n    // console.log('Lowest Highest', lowest, highest, task.AbsolutePosition, task.InitialAbsolutePosition);\r\n\r\n    // Get Group\r\n    const groupIndex = this.allGroups.findIndex(p => p.GroupId === task.GroupId); // TODO: Function to get group\r\n    const group = this.allGroups[groupIndex];\r\n\r\n    // console.log('reordering positions : ', group.Tasks.map(p => p.AbsolutePosition));\r\n\r\n    /*this.logger.logEvent('REORDERING POSITIONS',\r\n    {\r\n      key: 'absolutepositions',\r\n      value: JSON.stringify(group.Tasks.map(p => p.AbsolutePosition))\r\n    });*/\r\n\r\n    if (NumberUtils.checkIfDuplicateExists(group.Tasks.filter(p => p.CalendarTaskId !== task.CalendarTaskId)\r\n                                                      .map(p => p.AbsolutePosition))) { // reorder all if 2 are the same\r\n\r\n      // this.logger.logEvent('Update all tasks', { key: 'task.CalendarTaskId', value: JSON.stringify(task.UserId)});\r\n      await this.reorderGroupTasks(task); // reorder group tasks, HERE WE ARE ADDING IT\r\n    } else {\r\n      // this.logger.logEvent('Update NOT all tasks', { key: 'task.CalendarTaskId', value: JSON.stringify(task.UserId)});\r\n\r\n      const tasksToReorder = group.Tasks.filter(p => p.AbsolutePosition >= lowest &&\r\n                                                     p.AbsolutePosition <= highest &&\r\n                                                     p.CalendarTaskId !== task.CalendarTaskId);\r\n      // console.log('TASKS TO REORDER', tasksToReorder);\r\n      for (const currentTask of tasksToReorder) {\r\n        if (difference < 0) {\r\n          const newPosition = currentTask.AbsolutePosition + 1;\r\n          // console.log('DIFFERENCE NEGATIVE NEW POSITION = ', newPosition);\r\n          currentTask.AbsolutePosition = newPosition;\r\n          currentTask.InitialAbsolutePosition = newPosition;\r\n        } else {\r\n          const newPosition = currentTask.AbsolutePosition - 1;\r\n          // console.log('DIFFERENCE POSITIVE NEW POSITION = ', newPosition);\r\n          currentTask.AbsolutePosition = newPosition;\r\n          currentTask.InitialAbsolutePosition = newPosition;\r\n        }\r\n      }\r\n\r\n      group.Tasks = this.getSortedTasksFromTasks(group.Tasks);\r\n      // console.log('GROUPS TASKS ', group.Tasks);\r\n\r\n      await this.updateTaskAsyncNoPositionCheckBatch(tasksToReorder);\r\n    }\r\n\r\n    // console.log('reordering positions : ', group.Tasks.map(p => p.AbsolutePosition));\r\n  }\r\n\r\n  public getGroup(groupId: string) {\r\n    const groupIndex = this.allGroups.findIndex(p => p.GroupId === groupId);\r\n    if (groupIndex !== -1) {\r\n      return this.allGroups[groupIndex];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reorders the tasks in a group. Checks if two have the same position, the new one will take it's place\r\n   * Also queues updates to local\r\n   */\r\n  public async reorderGroupTasks(task: CalendarTask) {\r\n    // console.log('REORDER GROUP', task);\r\n    const group = this.getGroup(task.GroupId);\r\n\r\n    const tasks = group.Tasks.sort((x, y) => x.AbsolutePosition > y.AbsolutePosition ||\r\n                                             (x.AbsolutePosition === y.AbsolutePosition &&\r\n                                              x.InitialAbsolutePosition < y.InitialAbsolutePosition) ? 1 : -1);\r\n\r\n    let positionIterator = 1;\r\n    for (const currentTask of tasks) {\r\n      currentTask.AbsolutePosition = positionIterator++;\r\n      currentTask.InitialAbsolutePosition = currentTask.AbsolutePosition;\r\n    }\r\n\r\n    group.Tasks = this.getSortedTasksFromTasks(group.Tasks);\r\n\r\n    await this.updateTaskAsyncNoPositionCheckBatch(tasks);\r\n  }\r\n\r\n  private async updateTaskAsyncNoPositionCheck(task: CalendarTask,\r\n                                               synced: boolean = true) {\r\n    // console.log('updateTaskAsyncNoPositionCheck', task, synced);\r\n    // TODO : We might need to assign the task to group tasks\r\n    task.Synced = synced;\r\n    await this.localDataSync.queueUpdateCalendarTask(task.toDTO(), synced);\r\n    return true;\r\n  }\r\n\r\n  private async updateTaskAsyncNoPositionCheckBatch(tasks: CalendarTask[],\r\n                                                    synced: boolean = true) {\r\n    // console.log('updateTaskAsyncNoPositionCheckBatch', tasks, synced);\r\n    // TODO : We might need to assign the tasks to group tasks\r\n    tasks.forEach(p => p.Synced = synced);\r\n    await this.localDataSync.queueUpdateCalendarTasks(tasks.map(p => p.toDTO()), synced);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Reload all tasks from server and updates them into local storage (without queue)\r\n   */\r\n  public async getAllTodoFromServer(request: DTOGetCalendarTaskRequest): Promise<DTOCalendarTask[]> {\r\n    const resultRemote = await this.apiProvider.getTasks(request);\r\n\r\n    console.log('RESULT FROM SERVER', resultRemote);\r\n\r\n    // todo: try to move this out of this class\r\n    if (resultRemote != null && resultRemote.length > 0) {\r\n      this.setSyncedToTrue(resultRemote);\r\n      // await this.local.setCalendarTasks(resultRemote, false);\r\n      return resultRemote;\r\n    } else {\r\n      this.logger.logError(new Error('updating task'));\r\n      return throwError('unable to get data from server').toPromise();\r\n    }\r\n  }\r\n\r\n  public async reloadAllGroupsAndTasksLocal(): Promise<void> {\r\n    try {\r\n\r\n      console.log('reloadAllGroupsAndTasksLocal');\r\n\r\n      let dtoTasks: DTOCalendarTask[] = [];\r\n      let dtoGroups: DTOTaskGroup[] = [];\r\n\r\n      dtoTasks = await this.local.getCalendarTasks(false);\r\n      dtoGroups = await this.local.getGroups(false);\r\n\r\n      // console.log('GOT TASKS AND GROUPS LOCAL', dtoTasks, dtoGroups);\r\n\r\n      this.processAndAssignAllGroupsAndTasks(dtoTasks, dtoGroups);\r\n    } catch (error) {\r\n      // console.log('Error refreshing local', error);\r\n      this.logger.logError(error);\r\n    }\r\n  }\r\n\r\n  public async processAndAssignAllGroupsAndTasks(dtoTasks: DTOCalendarTask[], dtoGroups: DTOTaskGroup[]): Promise<void> {\r\n    try {\r\n      // ASSIGN TASKS + REORDER + SET PROGRESS + SET VISIBLE\r\n      // console.log('dtogroups', dtoGroups);\r\n      this.allGroups = dtoGroups.map(p => TaskGroup.fromDTO(p));\r\n      this.assignTasksAndProcessUnassigned(dtoTasks);\r\n      this.sortTasksAndGroups();\r\n      this.setProgressText(this.dateService.currentWorkDate);\r\n      this.setGroupsVisible();\r\n\r\n      const notifs = dtoTasks.filter(p => p.NotificationId === 1 && p.Void === false);\r\n      if (notifs.length > 1) {\r\n        this.logger.logError(new Error('More than 1 notif has NotificationId = 1'));\r\n      }\r\n    } catch (error) {\r\n      // console.log('Error processAllGroupsAndTasks local', error);\r\n      this.logger.logError(error);\r\n    }\r\n  }\r\n\r\n  // todo: try to move this out of this class\r\n  private setSyncedToTrue(resultRemote: DTOCalendarTask[]) {\r\n    resultRemote.forEach(p => {\r\n      p.Synced = true;\r\n      p.Sent = true;\r\n      p.Histories.forEach(t => {\r\n        t.Synced = true;\r\n        t.Sent = true;\r\n      });\r\n    });\r\n  }\r\n\r\n  public async getTaskListDTORequest(): Promise<DTOGetCalendarTaskRequest> {\r\n    const request = new DTOGetCalendarTaskRequest();\r\n    request.userId = await this.userService.getCurrentUserId();\r\n    // console.log('USERID TEST = ', request.userId);\r\n    request.IncludeVoid = false;\r\n    request.DateStart = DateUtils.YearAgo();\r\n    request.DateEnd = DateUtils.Tomorrow();\r\n    return request;\r\n  }\r\n\r\n  public getTaskHistoryNoVoid(task: CalendarTask,\r\n                              workDate: Date): TaskHistory {\r\n    if (task.Void === true) {\r\n      return new TaskHistory();\r\n    }\r\n\r\n    if (task.InsertDate != null && this.dateService.GetWorkDate(task.InsertDate) > workDate) {\r\n      return new TaskHistory();\r\n    }\r\n\r\n    const histories = task.GetDoneHistoriesNoVoid(workDate);\r\n\r\n    if (histories != null && histories.length > 0) {\r\n      if (histories.length === 1) {\r\n        return histories[0];\r\n      } else {\r\n        if (histories.filter(p => p.InsertDate != null).length === 0) {\r\n          this.logger.logEvent('histories.filter(p => p.InsertDate != null).length === 0',\r\n          {\r\n            key: 'histories',\r\n            value: JSON.stringify(histories)\r\n          });\r\n          const indexNotSkipped = histories.findIndex(p => p.TaskSkipped === false);\r\n          if (indexNotSkipped !== -1) {\r\n            return histories[indexNotSkipped];\r\n          } else {\r\n            this.logger.logEvent('returning histories[0]',\r\n            {\r\n              key: 'histories',\r\n              value: JSON.stringify(histories)\r\n            });\r\n            return histories[0];\r\n          }\r\n        } else {\r\n          return histories.filter(p => p.InsertDate != null)\r\n                          .sort((a, b) => {\r\n                            return b.InsertDate.getTime() - a.InsertDate.getTime();\r\n                          })[0];\r\n        }\r\n      }\r\n    } else {\r\n      return new TaskHistory();\r\n    }\r\n  }\r\n\r\n  public isDone(task: CalendarTask,\r\n                taskHistoryNoVoid: TaskHistory): boolean {\r\n    // console.log('Origin isDone should only be called once');\r\n    if (task.Frequency === TaskFrequency.Once ||\r\n        task.Frequency === TaskFrequency.UntilDone) {\r\n      return task.Histories.some(p => !p.Void && p.TaskDone);\r\n    } else {\r\n      return taskHistoryNoVoid.TaskDone;\r\n    }\r\n  }\r\n\r\n  public isDoneAtDate(task: CalendarTask,\r\n                      workDate: Date,\r\n                      taskHistoryNoVoid: TaskHistory): boolean {\r\n    // console.log('Origin IsDoneAtDate');\r\n    if (task.Frequency === TaskFrequency.Once ||\r\n      task.Frequency === TaskFrequency.UntilDone) {\r\n      return task.GetDoneHistoriesNoVoid(workDate)\r\n                 .some(p => p.TaskDone);\r\n    } else {\r\n      return taskHistoryNoVoid.TaskDone;\r\n    }\r\n  }\r\n\r\n  public getDoneWorkDate(task: CalendarTask): Date {\r\n    // console.log('[getDoneWorkDate] This is exponential');\r\n    const doneHistories = task.Histories.filter(p => !p.Void && p.TaskDone);\r\n    if (doneHistories != null && doneHistories.length > 0) {\r\n      return doneHistories[0].DoneWorkDate;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public isSkipped(taskHistoryNoVoid: TaskHistory): boolean {\r\n    // console.log('Origin IsSkipped');\r\n    return taskHistoryNoVoid.TaskSkipped;\r\n  }\r\n\r\n  public isDoneOrSkipped(task: CalendarTask,\r\n                         workDate: Date): boolean {\r\n    // console.log('Origin IsDoneOrSkipped');\r\n    const history = this.getTaskHistoryNoVoid(task, workDate);\r\n    if (history.DoneWorkDate != null || history.TaskSkipped) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // TODO : This is called twice on loading, which calls everything twice\r\n  public isShown(task: CalendarTask,\r\n                 day: DayOfWeek,\r\n                 workDate: Date): boolean {\r\n\r\n    if (task.Void === true) {\r\n      return false;\r\n    }\r\n\r\n    if (task.InsertDate != null && this.dateService.GetWorkDate(task.InsertDate) > workDate) {\r\n      return false;\r\n    }\r\n\r\n    if (task.SkipUntil != null &&\r\n        task.SkipUntil > workDate) {\r\n        return false;\r\n      }\r\n\r\n    if (task.Frequency === TaskFrequency.Daily) {\r\n      return task.RequiredDays.some(t => t === day);\r\n    } else if (task.Frequency === TaskFrequency.Once) {\r\n      return DateUtils.datesAreEqual(task.AssignedDate, workDate);\r\n    } else if (task.Frequency === TaskFrequency.UntilDone) {\r\n      const doneWorkDate = this.getDoneWorkDate(task);\r\n      if (doneWorkDate != null) {\r\n        return doneWorkDate >= workDate;\r\n      } else {\r\n        return task.AssignedDate <= workDate;\r\n      }\r\n    }\r\n  }\r\n\r\n  public hasNote(task: CalendarTask,\r\n                 workDate: Date): boolean {\r\n    // console.log('Origin hasNote');\r\n    const history = this.getTaskHistoryNoVoid(task, workDate);\r\n    return history != null && history.Comment != null && history.Comment.length > 0;\r\n  }\r\n\r\n  public getPreviousDayTaskHistoryNoVoid(task: CalendarTask,\r\n                                         minusDays: number): TaskHistory {\r\n    // console.log('[2]datesAreEqual getPreviousDayTaskHistoryNoVoid');\r\n    const targetWorkDate = DateUtils.AddDays(DateUtils.Today(), - minusDays);\r\n    const history = task.GetDoneHistoriesNoVoid(targetWorkDate)[0];\r\n    if (history != null) {\r\n      return history;\r\n    } else {\r\n      return new TaskHistory();\r\n    }\r\n  }\r\n\r\n  public removeDuplicates(set) {\r\n    const seen = {};\r\n    return set.filter((item: TaskHistory) => {\r\n        const k = item.TaskHistoryId;\r\n        return seen.hasOwnProperty(k) ? false : (seen[k] = true);\r\n    });\r\n  }\r\n\r\n  public SetHistoriesMap(task: CalendarTask): void {\r\n    // console.log('Setting Histories Map', task.Name);\r\n    let firstWorkDate: Date;\r\n    task.HistoriesMap.clear();\r\n\r\n    // TODO : Remove Temporary patch ? Put in place in 2020-06-04 because somehow some duplicates got created\r\n    task.Histories = this.removeDuplicates(task.Histories);\r\n\r\n    for (const history of task.Histories) {\r\n      if (history.Void) {\r\n        continue;\r\n      }\r\n\r\n      if (history.DoneWorkDate == null) { // patch for retro compatibility but hurts performance\r\n        history.DoneWorkDate = this.dateService.GetWorkDate(history.DoneDate);\r\n      }\r\n\r\n      let existingHistories = task.HistoriesMap.get(history.DoneWorkDate.toISOString());\r\n      if (existingHistories == null) {\r\n        existingHistories = [];\r\n      }\r\n      existingHistories.push(history);\r\n      task.HistoriesMap.set(history.DoneWorkDate.toISOString(), existingHistories);\r\n\r\n      if (history.DoneWorkDate < firstWorkDate || firstWorkDate == null) {\r\n        firstWorkDate = history.DoneWorkDate;\r\n      }\r\n    }\r\n    task.MinimumStartingMinusDay = DateUtils.daysBetween(firstWorkDate, new Date());\r\n    // console.log('minimumstartingminusday = ', task.MinimumStartingMinusDay);\r\n  }\r\n\r\n  public getTaskResult(currentTask: CalendarTask, workDate: Date): string {\r\n    // console.log('Origin getTaskResult');\r\n    const history = this.getTaskHistoryNoVoid(currentTask, workDate);\r\n\r\n    if (currentTask.isTime()) {\r\n      return this.datepipe.transform(history.TaskResult, 'HH:mm');\r\n    } else if (currentTask.isDuration()) {\r\n      return history.getDurationString();\r\n    } else {\r\n      return String(history.TaskResult);\r\n    }\r\n  }\r\n\r\n  public getTaskResultFromHistory(currentTask: CalendarTask, history: TaskHistory): string {\r\n    // console.log('Origin getTaskResult');\r\n    if (currentTask.isTime()) {\r\n      return this.datepipe.transform(history.TaskResult, 'HH:mm');\r\n    } else if (currentTask.isDuration()) {\r\n      return history.getDurationString();\r\n    } else {\r\n      return String(history.TaskResult);\r\n    }\r\n  }\r\n\r\n\r\n  /////////////////////////////////////////////////////////////\r\n  ////////////////////     GROUPS     /////////////////////////\r\n  /////////////////////////////////////////////////////////////\r\n\r\n  public async assignTasksAndProcessUnassigned(dtoTasks: DTOCalendarTask[]): Promise<void> {\r\n    // console.log('DTOTASKS', dtoTasks, this.getAllTasks());\r\n    // Last position\r\n    let position = 1;\r\n    if (this.allGroups.filter(p => p.GroupId !== CalendarTaskService.UnassignedId).length > 0) {\r\n      position = Math.max(...this.allGroups.map(p => p.Position)) + 1;\r\n    }\r\n\r\n    const group1 = new TaskGroup();\r\n    group1.Name = 'Unassigned';\r\n    group1.Position = position;\r\n    group1.InitialPosition = position;\r\n    group1.ColorHex = '#D1D1D1';\r\n    group1.isVisible = true;\r\n    group1.isUnassigned = true;\r\n    group1.GroupId = CalendarTaskService.UnassignedId;\r\n    this.allGroups.push(group1);\r\n\r\n    // TODO : This is extremely innefficient\r\n    // Add tasks to groups + convert from DTO\r\n    for (const task of dtoTasks) {\r\n      const index = this.allGroups.findIndex(p => p.GroupId === task.GroupId);\r\n\r\n      if (index >= 0) {\r\n        this.allGroups[index].Tasks.push(CalendarTask.fromDTO(task));\r\n      } else {\r\n        //task.GroupId = null;\r\n        task.GroupId = CalendarTaskService.UnassignedId;\r\n        group1.Tasks.push(CalendarTask.fromDTO(task));\r\n      }\r\n    }\r\n\r\n    // console.log('4444 assign tasks done');\r\n  }\r\n\r\n  public sortTasksAndGroups() {\r\n    for (const group of this.allGroups) {\r\n      group.Tasks = group.Tasks.sort((x, y) => x.AbsolutePosition > y.AbsolutePosition ? 1 : -1);\r\n\r\n      // CREATE HISTORYMAP\r\n      // TODO : Not sure we need this ? taskListResult.filter(p => p.Frequency !== TaskFrequency.UntilDone || p.AssignedDate != null);\r\n      for (const task of group.Tasks) {\r\n        this.SetHistoriesMap(task);\r\n      }\r\n    }\r\n\r\n    // SORT GROUPS\r\n    this.allGroups = this.allGroups.sort((x, y) => x.Position > y.Position ? 1 : -1);\r\n  }\r\n\r\n  public setGroupsVisible() {\r\n    // console.log('SETGROUPSVISIBLE');\r\n    for (const group of this.allGroups) {\r\n      if (group.Void === true || group.Tasks.length === 0) {\r\n        // console.log('GROUP ' + group.Name + 'NOT VISIBLE BECAUSE VOIDED OR EMPTY');\r\n        group.isVisible = false;\r\n      } else {\r\n        if (group.Tasks.length === 0 ||\r\n          !group.Tasks.some(p => this.isShown(p,\r\n            this.dateService.currentWorkDate.getDay(),\r\n            this.dateService.currentWorkDate))) {\r\n          // console.log('GROUP ' + group.Name + 'NOT VISIBLE BECAUSE NO PRESENT TASK');\r\n          group.isVisible = false;\r\n        } else {\r\n          // console.log('GROUP ' + group.Name + 'VISIBLE BECAUSE PREVENT TASK');\r\n          group.isVisible = true;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public async getAllGroupsFromServer(): Promise<DTOTaskGroup[]> {\r\n    //console.log('getAllGroupsFromServer');\r\n    const userId = await this.userService.getCurrentUserId();\r\n    const resultRemote = await this.apiProvider.getGroups(userId);\r\n\r\n    // todo: try to move this out of this class\r\n    if (resultRemote != null && resultRemote.length > 0) {\r\n\r\n      console.log('RESULT FROM SERVER GROUPS', resultRemote);\r\n\r\n      this.setGroupSyncedToTrue(resultRemote);\r\n\r\n      // await this.local.setGroups(resultRemote, false);\r\n      return resultRemote;\r\n    } else {\r\n      this.logger.logError(new Error('updating task'));\r\n      throw new Error('unable to get data from server');\r\n    }\r\n  }\r\n\r\n  private setGroupSyncedToTrue(resultRemote: DTOTaskGroup[]) {\r\n    resultRemote.forEach(p => {\r\n      p.Synced = true;\r\n      p.Sent = true;\r\n    });\r\n  }\r\n\r\n  public async insertGroup(group: TaskGroup): Promise<void> {\r\n\r\n    //console.log('INSERTING GROUP ', group);\r\n\r\n    group.UpdateDate = new Date();\r\n    group.InsertDate = new Date();\r\n\r\n    this.eventService.emit(new EventData(EventService.EventIds.SyncRequired, null));\r\n\r\n    // Check if AbsolutePosition already exists\r\n    const existingGroups = this.allGroups.filter(p => p.Position === group.Position);\r\n    if (existingGroups.length > 0) {\r\n        group.InitialPosition = Math.max(...this.allGroups.map(p => p.Position)) + 1;\r\n        // console.log('Position already exists, reordering tasks, task =, InitialPosition=', existingTasks, group.InitialPosition);\r\n        await this.reorderGroups(group); // it's very long we have to optimize this\r\n    } else {\r\n      // console.log('Position does not already exist, InitialPosition=', group.InitialPosition);\r\n    }\r\n\r\n    this.allGroups.push(group);\r\n\r\n    this.allGroups = this.getSortedGroups(this.allGroups);\r\n\r\n    await this.localDataSync.queueInsertGroup(group.toDTO());\r\n    await this.localDataSync.queueUpdateCalendarTasks(group.Tasks.map(p => p.toDTO()), false);\r\n    this.eventService.emit(new EventData(EventService.EventIds.SyncRequired, null));\r\n\r\n    // REMOVE TASKS FROM OTHER GROUPS\r\n    // TODO : This is very innefficient\r\n    const otherGroups = this.allGroups.filter(p => p.GroupId !== group.GroupId);\r\n    for (const otherGroup of otherGroups) {\r\n      for (const task of group.Tasks) {\r\n        if (otherGroup.Tasks.map(p => p.CalendarTaskId).some(p => p === task.CalendarTaskId)) {\r\n          // console.log('REMOVING FROM OTHER GROUP : ', task.Name);\r\n          otherGroup.Tasks = otherGroup.Tasks.filter(p => p.CalendarTaskId !== task.CalendarTaskId);\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setGroupsVisible(); // TODO: This is probably inefficient\r\n  }\r\n\r\n  public async updateGroup(group: TaskGroup): Promise<boolean> {\r\n    console.log('UPDATING GROUP', group);\r\n    group.UpdateDate = new Date();\r\n\r\n    // REORDER\r\n    if (group.Position !== group.InitialPosition &&\r\n        group.Void  === false) {\r\n      // console.log('reordering task necessary', new Date().toISOString());\r\n      await this.reorderGroups(group);\r\n    }\r\n\r\n    //console.log('NEW GROUP ORDER : ', this.allGroups);\r\n\r\n    await this.localDataSync.queueUpdateGroup(group.toDTO(), false);\r\n\r\n    // REMOVE TASKS FROM OTHER GROUPS\r\n    // TODO : This is very innefficient\r\n    const otherGroups = this.allGroups.filter(p => p.GroupId !== group.GroupId);\r\n    for (const otherGroup of otherGroups) {\r\n      for (const task of group.Tasks) {\r\n        if (otherGroup.Tasks.map(p => p.CalendarTaskId).some(p => p === task.CalendarTaskId)) {\r\n          // console.log('REMOVING FROM OTHER GROUP : ', task.Name);\r\n          otherGroup.Tasks = otherGroup.Tasks.filter(p => p.CalendarTaskId !== task.CalendarTaskId);\r\n        }\r\n      }\r\n    }\r\n\r\n    // Put back tasks into unassigned for void\r\n    if (group.Void === true) {\r\n      const toUpdateTasks: CalendarTask[] = [];\r\n      const unassignedGroup = this.getGroup(CalendarTaskService.UnassignedId);\r\n      for (const task of this.getAllTasks()) {\r\n        if (task.GroupId === group.GroupId) {\r\n          task.GroupId = CalendarTaskService.UnassignedId;\r\n          // console.log('Setting to sync = false', task);\r\n          task.Synced = false;\r\n          unassignedGroup.Tasks.push(task);\r\n          // console.log('UNASSIGNED GROUP', unassignedGroup);\r\n          toUpdateTasks.push(task);\r\n        }\r\n      }\r\n\r\n      if (toUpdateTasks.length > 0) {\r\n        console.log('ToUpdateGroups');\r\n        await this.localDataSync.queueUpdateCalendarTasks(toUpdateTasks.map(p => p.toDTO()), false); \r\n      }\r\n\r\n      // Remove from groups if voided\r\n      // Update : cant do that because if we delete it has to stay in memory\r\n      // const index = this.allGroups.findIndex(p => p.GroupId === group.GroupId);\r\n      // this.allGroups.splice(index, 1);\r\n    }\r\n\r\n    this.eventService.emit(new EventData(EventService.EventIds.SyncRequired, null));\r\n\r\n    this.setGroupsVisible();\r\n\r\n    return true;\r\n  }\r\n\r\n  public getUnassignedGroup(): TaskGroup {\r\n    const index = this.allGroups.findIndex(p => p.isUnassigned === true);\r\n    return this.allGroups[index];\r\n  }\r\n\r\n  public async reorderGroups(group: TaskGroup): Promise<void> {\r\n    const difference = group.Position - group.InitialPosition;\r\n    const lowest = Math.min(group.Position, group.InitialPosition);\r\n    const highest = Math.max(group.Position, group.InitialPosition);\r\n\r\n    let groups = this.allGroups\r\n                     .filter(p => p.Position >= lowest &&\r\n                                  p.Position <= highest);\r\n\r\n    this.logger.logEvent('REORDERING GROUP POSITIONS',\r\n    {\r\n      key: 'positions',\r\n      value: JSON.stringify(groups.map(p => p.Position))\r\n    });\r\n\r\n    if (NumberUtils.checkIfDuplicateExists(groups.filter(p => p.GroupId !== group.GroupId)\r\n                                                 .map(p => p.Position))) { // reorder all if 2 are the same\r\n\r\n      this.logger.logEvent('Update all tasks', { key: 'group.userId', value: JSON.stringify(group.UserId)});\r\n\r\n      await this.reorderAllGroups(group);\r\n    } else {\r\n\r\n      this.logger.logEvent('Update NOT all tasks', { key: 'group.userId', value: JSON.stringify(group.UserId)});\r\n\r\n      // reorder only between current and new Id\r\n      groups = groups.filter(p => p.Position >= lowest &&\r\n                                  p.Position <= highest &&\r\n                                  p.GroupId !== group.GroupId);\r\n\r\n      for (const currentGroup of groups) {\r\n\r\n        if (difference < 0) {\r\n          const newPosition = currentGroup.Position + 1;\r\n          currentGroup.Position = newPosition;\r\n          currentGroup.InitialPosition = newPosition;\r\n        } else {\r\n          const newPosition = currentGroup.Position - 1;\r\n          currentGroup.Position = newPosition;\r\n          currentGroup.InitialPosition = newPosition;\r\n        }\r\n      }\r\n\r\n      console.log('REORDERED GROUPS : ', groups);\r\n\r\n      this.reorderAllRamGroups();\r\n\r\n      await this.updateGroupsAsyncNoPositionCheckBatch(groups);\r\n    }\r\n\r\n    // this.logger.logEvent('Update completed');\r\n  }\r\n\r\n  public async reorderAllGroups(group: TaskGroup) {\r\n    console.log('reorder all groups', group);\r\n    let groups = this.allGroups\r\n                    .filter(p => p.GroupId !== group.GroupId);\r\n    groups.push(group);\r\n    groups = groups.sort((x, y) => x.Position > y.Position ? 1 : -1);\r\n\r\n    console.log('sorted groups', groups);\r\n\r\n    let positionIterator = 1;\r\n    for (const g of groups) {\r\n      g.Position = positionIterator++;\r\n      g.InitialPosition = g.InitialPosition;\r\n    }\r\n\r\n    await this.updateGroupsAsyncNoPositionCheckBatch(groups);\r\n  }\r\n\r\n  public reorderAllRamGroups(): void {\r\n    this.allGroups = this.allGroups.sort((x, y) => x.Position > y.Position ? 1 : -1);\r\n  }\r\n\r\n  private async updateGroupsAsyncNoPositionCheckBatch(groups: TaskGroup[],\r\n                                                      synced: boolean = true) {\r\n    console.log('updateGroupsAsyncNoPositionCheckBatch', groups, synced);\r\n    groups.forEach(p => p.Synced = synced);\r\n    for (const group of groups) {\r\n      const index = this.allGroups.findIndex(p => p.GroupId === group.GroupId);\r\n      this.allGroups[index] = group;\r\n    }\r\n\r\n    await this.localDataSync.queueUpdateGroups(groups.map(p => p.toDTO()), synced);\r\n    return true;\r\n  }\r\n\r\n  private getSortedGroups(taskListResult: TaskGroup[]): TaskGroup[] {\r\n    return taskListResult.sort((a, b) => {\r\n                              const diff = a.Position - b.Position;\r\n                              if (diff) {\r\n                                return diff;\r\n                              }\r\n                            });\r\n  }\r\n\r\n  public getSortedTasksFromTasks(tasks: CalendarTask[]): CalendarTask[] {\r\n    const result = tasks.sort((x, y) => x.AbsolutePosition > y.AbsolutePosition ||\r\n                                        (x.AbsolutePosition === y.AbsolutePosition &&\r\n                                         x.InitialAbsolutePosition < y.InitialAbsolutePosition) ? 1 : -1);\r\n\r\n    result.forEach(p => p.InitialAbsolutePosition = p.AbsolutePosition);\r\n    return result;\r\n  }\r\n\r\n  public setProgressText(currentWorkDate: Date) {\r\n    this.currentProgressTotal = 0;\r\n    this.currentProgressDone = 0;\r\n    const currentWorkDay = currentWorkDate.getDay();\r\n    // Completed Text // most be done lazy loading\r\n    for (const group of this.allGroups) {\r\n      // Set Local progress\r\n      group.ProgressTotal = group.Tasks.filter(p =>\r\n        this.isShown(p, currentWorkDay, currentWorkDate) ||\r\n        this.isSkipped(this.getTaskHistoryNoVoid(p, currentWorkDate))\r\n      ).length;\r\n      // console.log('PROGRESS TOTAL ' + group.Name, group.ProgressTotal);\r\n\r\n      group.ProgressDone = group.Tasks.filter(p => p.Void !== true &&\r\n                                                   this.isDoneOrSkipped(p,\r\n                                                   currentWorkDate)).length;\r\n      // Increment max for the top progress\r\n      this.currentProgressTotal += group.ProgressTotal;\r\n      this.currentProgressDone += group.ProgressDone;\r\n\r\n      // Set Text\r\n      group.ProgressText = group.ProgressDone.toString() + '/' + group.ProgressTotal.toString();\r\n    }\r\n\r\n    this.currentProgressText = this.currentProgressDone.toString() + '/' + this.currentProgressTotal.toString();\r\n    this.currentProgressValue = this.currentProgressTotal === 0 ? 0 : this.currentProgressDone / this.currentProgressTotal;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ReleaseNote } from '../models/Core/release-note';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ILocalStorageService } from '../interfaces/i-local-storage-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChangelogService {\r\n\r\n  constructor(//private appVersion: AppVersion,\r\n              private storage: ILocalStorageService,\r\n              private alertCtrl: AlertController,\r\n              private translate: TranslateService) { }\r\n\r\n  public async showChangeLogsAndSetToViewed(): Promise<void> {\r\n    /*const currentVersion = await this.appVersion.getVersionNumber(); TODO CAPACITOR\r\n    const shouldViewChangeLog = await this.storage.shouldViewChangeLog(currentVersion);\r\n    if (shouldViewChangeLog === true) {\r\n      const releaseNotes = this.getReleaseNote(currentVersion);\r\n      if (releaseNotes != null) {\r\n        const message: string = this.getFormattedReleaseNotes(releaseNotes);\r\n\r\n        const alert = await this.alertCtrl.create({\r\n          message,\r\n          buttons: [\r\n            {\r\n              text: 'Ok',\r\n              handler: () => {\r\n                this.storage.setChangeLogToViewed(currentVersion);\r\n              }\r\n            },\r\n          ]\r\n        });\r\n\r\n        await alert.present();\r\n      }\r\n    }*/\r\n  }\r\n\r\n  public async showAllChangeLogs(): Promise<void> {\r\n      const releaseNotes = this.getReleaseNotes();\r\n      if (releaseNotes != null) {\r\n        const message: string = this.getAllFormattedReleaseNotes(releaseNotes);\r\n        const alert = await this.alertCtrl.create({\r\n          message,\r\n          buttons: [\r\n            {\r\n              text: 'Ok',\r\n            },\r\n          ]\r\n        });\r\n\r\n        await alert.present();\r\n      }\r\n  }\r\n\r\n  private getFormattedReleaseNotes(releaseNotes: ReleaseNote) {\r\n    const lines: string[] = [];\r\n\r\n    if (releaseNotes.BugFixesEn.length > 0) {\r\n      if (this.translate.currentLang === 'en') {\r\n        lines.push('BUG FIXES :<br/>');\r\n        releaseNotes.BugFixesEn.forEach(p => lines.push('- ' + p + '<br/>'));\r\n      } else {\r\n        lines.push('BUGS CORRIGÉS :<br/>');\r\n        releaseNotes.BugFixesFr.forEach(p => lines.push('- ' + p + '<br/>'));\r\n      }\r\n    }\r\n\r\n    if (releaseNotes.FeaturesEn.length > 0) {\r\n      if (this.translate.currentLang === 'en') {\r\n        lines.push('FEATURES :<br/>');\r\n        releaseNotes.FeaturesEn.forEach(p => lines.push('- ' + p + '<br/>'));\r\n      } else {\r\n        lines.push('FONCTIONNALITÉS :<br/>');\r\n        releaseNotes.FeaturesFr.forEach(p => lines.push('- ' + p + '<br/>'));\r\n      }\r\n    }\r\n\r\n    return lines.join('<br>');\r\n  }\r\n\r\n  private getAllFormattedReleaseNotes(releaseNotes: ReleaseNote[]) {\r\n    const lines: string[] = [];\r\n    const sortedNotes = releaseNotes.reverse();\r\n\r\n    for (const note of sortedNotes) {\r\n      lines.push('Version ' + note.Version);\r\n      lines.push('<br>');\r\n      lines.push('<br>');\r\n      lines.push(this.getFormattedReleaseNotes(note));\r\n      lines.push('<br>');\r\n      lines.push('=======================');\r\n      lines.push('<br>');\r\n    }\r\n\r\n    // console.log(lines.join(''));\r\n\r\n    return lines.join('');\r\n  }\r\n\r\n  public getReleaseNote(version: string): ReleaseNote {\r\n    const allNotes = this.getReleaseNotes();\r\n\r\n    const releventNotes = allNotes.filter(p => p.Version === version);\r\n\r\n    if (releventNotes != null && releventNotes.length === 1) {\r\n      return releventNotes[0];\r\n    } else {\r\n      // TODO: throw error\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private getReleaseNotes(): ReleaseNote[] {\r\n    const releaseNotes: ReleaseNote[] = [];\r\n\r\n    let releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.0.7';\r\n    releaseNote.BugFixesEn.push('The timer pause button was not working properly because ' +\r\n                              'the start button was not resseting its paused state');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.0.8';\r\n    releaseNote.FeaturesEn.push('A new AddComment button was added which enables the user to ' +\r\n                             'add a comment on a Task Result');\r\n    releaseNote.FeaturesEn.push('The current task result is now part of the result charts');\r\n    releaseNote.FeaturesEn.push('Feedback can now be sent using the Sent Feedback button in the main menu');\r\n    releaseNote.FeaturesEn.push('The buttons on the menu are now all the same size');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.0.9';\r\n    releaseNote.FeaturesEn.push('Added Task Frequencies : Once and Once until done. Available in task creation or task editting');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.0.10';\r\n    releaseNote.FeaturesEn.push('Tasklist buttons layout alignment changed');\r\n    releaseNote.FeaturesEn.push('Create and Edit task layout changed');\r\n    releaseNote.BugFixesEn.push('The application should minimize instead of stopping when clicking back button');\r\n    releaseNote.BugFixesEn.push('Task name and position is now validated');\r\n    releaseNote.BugFixesEn.push('Task assigned date can\\'t be null for Once tasks');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.0.12';\r\n    releaseNote.FeaturesEn.push('Added message: Checking for update on Checking for update button');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.0.14';\r\n    releaseNote.BugFixesEn.push('Fixed timer when device is sleeping on android');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.0.16';\r\n    releaseNote.FeaturesEn.push('Removed all login options except email');\r\n    releaseNote.FeaturesEn.push('French option added (not yet fully functionnal)');\r\n    releaseNote.BugFixesEn.push('Assigned date can now be later than the current year');\r\n    releaseNote.BugFixesEn.push('Previous and Next date buttons now work properly');\r\n    releaseNote.BugFixesEn.push('Results entered are now instantly shown');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.0.17';\r\n    releaseNote.BugFixesEn.push('Results entered are now instantly shown');\r\n    releaseNote.BugFixesEn.push('Data synchronisation doesn\\'t modify display anymore');\r\n    releaseNote.BugFixesEn.push('Synchronization problems fixed');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.0.18';\r\n    releaseNote.BugFixesEn.push('Non reccuring tasks will stop appearing after they are done');\r\n    releaseNote.BugFixesEn.push('Started or paused timer will reappear if you change date and come back');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.0';\r\n    releaseNote.FeaturesEn.push('The next task does\\'t get selected anymore');\r\n    releaseNote.FeaturesEn.push('Starting the timer only shows the timer');\r\n    releaseNote.FeaturesEn.push('The stats only get displayed when click on the stats button');\r\n    releaseNote.FeaturesEn.push('Stats for Sleeping time and for Fasting time added');\r\n    releaseNote.FeaturesEn.push('Stats for 1 week, 1 month, 3 months or 1 year available');\r\n    releaseNote.FeaturesEn.push('Task selection menu added, and automatically appears when user has no task yet');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.1';\r\n    releaseNote.FeaturesEn.push('Added back button to create task component');\r\n    releaseNote.FeaturesEn.push('Stats always shown when clicking on Show Stats');\r\n    releaseNote.FeaturesEn.push('Task card buttons rearranged into a grid');\r\n    releaseNote.FeaturesEn.push('Bigger mininum stat rectangle size');\r\n    releaseNote.FeaturesEn.push('Changed DateTime format for task durations');\r\n    releaseNote.FeaturesEn.push('Seconds are displayed and can be entered for durations');\r\n    releaseNote.FeaturesEn.push('Done duration task can be resumed');\r\n    releaseNote.FeaturesEn.push('Most buttons are now hidden when viewing the future');\r\n    releaseNote.BugFixesEn.push('Stats start from -1 instead of -8');\r\n    releaseNote.BugFixesEn.push('Timer now isnt displayed when a task is done');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.2';\r\n    releaseNote.FeaturesEn.push('Added a majority of french translations');\r\n    releaseNote.BugFixesEn.push('Fixed multiple timer issues');\r\n    releaseNote.BugFixesEn.push('Fixed multiple duration issues');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.13';\r\n    releaseNote.BugFixesEn.push('Fixed broken app');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.4';\r\n    releaseNote.FeaturesEn.push('Ionic updated to version 5');\r\n    releaseNote.FeaturesEn.push('Create Task and Edit Task UI improved');\r\n    releaseNote.BugFixesEn.push('Create non-recurring task now gets created as non-recurring');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.5';\r\n    releaseNote.BugFixesEn.push('Fixed stats buttons localization');\r\n    releaseNote.BugFixesEn.push('Fixed Single day vs Until done on Create/Edit task');\r\n    releaseNote.BugFixesEn.push('Local data isn\\'t accessible from another account');\r\n    releaseNote.BugFixesEn.push('Can\\'t create a daily task where there is no selected required days');\r\n    releaseNote.FeaturesEn.push('Comment is displayed after adding comment');\r\n    releaseNote.FeaturesEn.push('Cards get unselected when changing date');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.6';\r\n    releaseNote.BugFixesEn.push('Fixed some translations that were not loading properly');\r\n    releaseNote.BugFixesEn.push('Fixed resume timer which was bugged when phone was sleeping');\r\n    releaseNote.BugFixesEn.push('Duration now show as HH:mm in stats instead of total seconds');\r\n    releaseNote.BugFixesEn.push('Menu title position fixed');\r\n    releaseNote.BugFixesEn.push('Until Done task doesn\\'t appear one month later anymore');\r\n    releaseNote.FeaturesEn.push('Language preference is now saved');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.7';\r\n    releaseNote.BugFixesEn.push('Lazy load stats + graph in order to improve performance');\r\n    releaseNote.BugFixesEn.push('Used push component update instead of function binding to greatly improve performance');\r\n    releaseNote.FeaturesEn.push('Added popup to validate time of day for end of day tasks');\r\n    releaseNote.FeaturesEn.push('Hidden show stats button for Once tasks');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.8';\r\n    releaseNote.BugFixesEn.push('Fixed Results that were not showing');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.9';\r\n    releaseNote.FeaturesEn.push('Default task position can be chosen');\r\n    releaseNote.BugFixesEn.push('Release notes button was not working');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.10';\r\n    releaseNote.FeaturesEn.push('Skip until button added for non-recurring tasks');\r\n    releaseNote.FeaturesEn.push('Skip All button added for previous days where not all tasks have been completed');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.11';\r\n    releaseNote.BugFixesEn.push('Resume button doesn\\'t show after voiding a task');\r\n    releaseNote.BugFixesEn.push('Added comment is shown');\r\n    releaseNote.BugFixesEn.push('Prod and Dev are different environments');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.13';\r\n    releaseNote.FeaturesEn.push('Changelog messages also available in french');\r\n    releaseNote.FeaturesFr.push('Messages de mises à jour disponibles en français');\r\n    releaseNote.FeaturesEn.push('We can choose bug/feature when sending feedback');\r\n    releaseNote.FeaturesFr.push('On peut choisir entre bug/feature lorsqu\\'on envoie du feedback');\r\n    releaseNote.BugFixesEn.push('Improved performance');\r\n    releaseNote.BugFixesFr.push('Amélioration de performance');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.14';\r\n    releaseNote.BugFixesEn.push('Improved some french localizations');\r\n    releaseNote.BugFixesFr.push('Amélioration du français');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.15';\r\n    releaseNote.BugFixesEn.push('Fixed decimal value which was not working in french');\r\n    releaseNote.BugFixesFr.push('Corrigé les valeurs décimales qui ne fonctionnaient pas en français');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.16';\r\n    releaseNote.BugFixesEn.push('Fixed time value which was not working in french');\r\n    releaseNote.BugFixesFr.push('Corrigé les valeurs de temps qui ne fonctionnaient pas en français');\r\n    releaseNote.BugFixesEn.push('Fixed comments which were not working in french');\r\n    releaseNote.BugFixesFr.push('Corrigé les commentaires qui ne fonctionnaient pas en français');\r\n    releaseNote.BugFixesEn.push('Fixed changelogs which were displayed in english');\r\n    releaseNote.BugFixesFr.push('Corrigé la liste de changements qui apparaissait en anglais');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.17';\r\n    releaseNote.FeaturesEn.push('Added save icon in task selection page');\r\n    releaseNote.FeaturesFr.push('Ajouté un icône de sauvegarde sur la page de sélection de tâches');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.18';\r\n    releaseNote.FeaturesEn.push('Added native back button functionality');\r\n    releaseNote.FeaturesFr.push('Ajouté fonctionalité de bouton retour natif');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.19';\r\n    releaseNote.BugFixesEn.push('Centered text in task selection page');\r\n    releaseNote.BugFixesFr.push('Centré le text dans la page de sélection de tâches');\r\n    releaseNote.BugFixesEn.push('When backing out of editting task, there is no warning popup if nothing was changed');\r\n    releaseNote.BugFixesFr.push('Lorsque la page de modification de tâche est fermée il n\\'y a plus de message ' +\r\n                                'd\\'avertissement si la tâche n\\'a pas été modifiée');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.20';\r\n    releaseNote.FeaturesEn.push('Statistics now display today\\'s value');\r\n    releaseNote.FeaturesFr.push('Les statistiques affichent maintenant la valeur d\\'aujourd\\'hui');\r\n    releaseNote.BugFixesEn.push('Fixed statistics display bugs');\r\n    releaseNote.BugFixesFr.push('Corrigé des bugs d\\'affichage de statistiques');\r\n    releaseNote.BugFixesEn.push('Fixed future false results that were shown');\r\n    releaseNote.BugFixesFr.push('Enlevé des faux résultats futurs qui s\\'affichaient');\r\n    releaseNote.BugFixesEn.push('Fixed future buttons that were not dissapearing');\r\n    releaseNote.BugFixesFr.push('Corrigé boutons futurs qui ne dispasaissaient pas');\r\n    releaseNote.BugFixesEn.push('Added loading animation when postponing');\r\n    releaseNote.BugFixesFr.push('Ajouté une animation lors d\\'une remise à plus tard');\r\n    releaseNote.BugFixesEn.push('Fixed progress bar that was showing wrong numbers');\r\n    releaseNote.BugFixesFr.push('Corrigé la barre de progrès qui indiquait des mauvais chiffres');\r\n    releaseNote.BugFixesEn.push('Removed loading popup for Resume Timer');\r\n    releaseNote.BugFixesFr.push('Enlevé le popup de chargement lors de continuer timer');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.21';\r\n    releaseNote.FeaturesEn.push('New users can choose language before choosing tasks');\r\n    releaseNote.FeaturesFr.push('Les nouveaux utilisateurs peuvent choisir leur langue avant de choisir leur tâches');\r\n    releaseNote.FeaturesEn.push('Tasks selection cards are smaller');\r\n    releaseNote.FeaturesFr.push('Les cartes de la sélection de tâches sont plus petites');\r\n    releaseNote.BugFixesEn.push('Task type was not working properly in Edit Task');\r\n    releaseNote.BugFixesFr.push('Type de tâche ne fonctionnait pas correctement dans Modifier Tâche');\r\n    releaseNote.BugFixesEn.push('Task selection cards were not saved properly');\r\n    releaseNote.BugFixesFr.push('La sélection de tâche ne s\\'enregistrait pas');\r\n    releaseNote.BugFixesEn.push('Old tasks were appearing in position selection');\r\n    releaseNote.BugFixesFr.push('Anciennes tâches qui apparaîssaient dans la sélection de la position');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.22';\r\n    releaseNote.BugFixesEn.push('Task reordering was not working properly');\r\n    releaseNote.BugFixesFr.push('L\\'ordre des tâches ne fonctionnait pas bien');\r\n    releaseNote.BugFixesEn.push('History doesn\\'t get deleted when modifying task');\r\n    releaseNote.BugFixesFr.push('L\\'historique ne se fait plus supprimer lors de modification de tâche');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.23';\r\n    releaseNote.FeaturesEn.push('Task reordering improved');\r\n    releaseNote.FeaturesFr.push('Amélioration du changement de l\\'ordre des tâches');\r\n    releaseNote.FeaturesEn.push('Added max, average, total for stats');\r\n    releaseNote.FeaturesFr.push('Ajouté max, moyenne et total pour les statistiques');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.25';\r\n    releaseNote.FeaturesEn.push('Task reordering improved');\r\n    releaseNote.FeaturesFr.push('Amélioration du changement de l\\'ordre des tâches');\r\n    releaseNote.FeaturesEn.push('Settings page added');\r\n    releaseNote.FeaturesFr.push('Ajout d\\'une page de configuration');\r\n    releaseNote.FeaturesEn.push('End of day setting added');\r\n    releaseNote.FeaturesFr.push('Ajout de configuration d\\'heure de fin de journée');\r\n    releaseNote.BugFixesEn.push('Stat maximum is 0 when there is no data');\r\n    releaseNote.BugFixesFr.push('La statistique maximum est 0 lorsqu\\'aucune donnée');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.26';\r\n    releaseNote.FeaturesEn.push('Dates displayed on horizontal axis on charts');\r\n    releaseNote.FeaturesFr.push('Dates affichées sur l\\'axe horizontal sur les graphiques');\r\n    releaseNote.BugFixesEn.push('Tasks reordering improved');\r\n    releaseNote.BugFixesFr.push('Changement d\\'ordre des tâches amélioré');\r\n    releaseNote.BugFixesEn.push('Fixed wrong day total');\r\n    releaseNote.BugFixesFr.push('Corrigé bug total de la journée qui n\\'était pas bon');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.27';\r\n    releaseNote.FeaturesEn.push('Added a tab to separate chart from data details');\r\n    releaseNote.FeaturesFr.push('Ajouté un onglet pour séparer les graphiques des détails des données');\r\n    releaseNote.BugFixesEn.push('Default position was broken');\r\n    releaseNote.BugFixesFr.push('Position par défaut ne fonctionnait plus');\r\n    releaseNote.BugFixesEn.push('Improved performance');\r\n    releaseNote.BugFixesFr.push('Amélioré performance');\r\n    releaseNote.BugFixesEn.push('Postpone button now always appears on postponable tasks');\r\n    releaseNote.BugFixesFr.push('Bouton Remettre apparaît toujours sur les tâches remettables');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.28';\r\n    releaseNote.BugFixesEn.push('Too long to load task stats');\r\n    releaseNote.BugFixesFr.push('Trop long à charger les statistiques d\\'une tâche');\r\n    releaseNote.BugFixesEn.push('Display bug for duration');\r\n    releaseNote.BugFixesFr.push('Bug d\\'affichage pour les durées');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.29';\r\n    releaseNote.FeaturesEn.push('Added completion rate stats');\r\n    releaseNote.FeaturesFr.push('Ajouté taux de complétion dans les statistiques');\r\n    releaseNote.BugFixesEn.push('Task position displayed for debugging purposes');\r\n    releaseNote.BugFixesFr.push('Position des tâches affichée pour débugger');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.30';\r\n    releaseNote.FeaturesEn.push('Refreshing while a timer is on will prompt a warning');\r\n    releaseNote.FeaturesFr.push('Ajout d\\'un avertissement lorsqu\\'on rafraichit pendant qu\\'un timer est en marche');\r\n    releaseNote.BugFixesEn.push('Reload from server doesn\\'t delete your local data');\r\n    releaseNote.BugFixesFr.push('Rafraîchir n\\'écrase pas vos données locales');\r\n    releaseNote.BugFixesEn.push('Task assigned tomorrow doesn\\'t appear today');\r\n    releaseNote.BugFixesFr.push('Tâches assignées à demain n\\'apparaissent pas aujourd\\'hui');\r\n    releaseNote.BugFixesEn.push('Problem with created task ordering');\r\n    releaseNote.BugFixesFr.push('Problème d\\'ordre de nouvelle tâche créée');\r\n    releaseNote.BugFixesEn.push('Pause and resume buttons were sometimes dissapearing');\r\n    releaseNote.BugFixesFr.push('Les boutons Pause et Continuer disparaissaient parfois');\r\n    releaseNote.BugFixesEn.push('Deleting a task was sometimes too slow');\r\n    releaseNote.BugFixesFr.push('Effacer une tâche était parfois trop lent');\r\n    releaseNote.BugFixesEn.push('New task\\'s statistics were crashing the application');\r\n    releaseNote.BugFixesFr.push('Les statistiques d\\'une nouvelle tâche faisait planter l\\'application');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.31';\r\n    releaseNote.BugFixesEn.push('Fixed bug where data was not saved');\r\n    releaseNote.BugFixesFr.push('Corrigé bug où les données n\\'étaient pas sauvegardées');\r\n    releaseNote.BugFixesEn.push('Automated current date update');\r\n    releaseNote.BugFixesFr.push('Changement de la date courante automatique');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.32';\r\n    releaseNote.BugFixesEn.push('Fixed bug where note could not be added');\r\n    releaseNote.BugFixesFr.push('Corrigé bug où les notes ne pouvaient pas être ajoutées');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.39';\r\n    releaseNote.BugFixesEn.push('Fixed timer that dissapeared when it was a resumed timer');\r\n    releaseNote.BugFixesFr.push('Corrigé timer qui disparaissait lorsqu\\'il était reparti');\r\n    releaseNote.BugFixesEn.push('Fixed bug when selecting tasks');\r\n    releaseNote.BugFixesFr.push('Corrigé bug lors de la sélection de tâches');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.40';\r\n    releaseNote.BugFixesEn.push('Fixed task selection that was not working properly');\r\n    releaseNote.BugFixesFr.push('Corrigé sélection de tâche qui ne fonctionnait pas bien');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.41';\r\n    releaseNote.BugFixesEn.push('Fixed sleeping stats bug');\r\n    releaseNote.BugFixesFr.push('Corrigé bug de statistiques de sommeil');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.42';\r\n    releaseNote.BugFixesEn.push('Tasks shown in ordering popup are now only present and future tasks');\r\n    releaseNote.BugFixesFr.push('Les tâches montrées dans le changement d\\'ordre ne sont que les tâches présentes et futures');\r\n    releaseNote.BugFixesEn.push('New task shows only stats from date creation');\r\n    releaseNote.BugFixesFr.push('Les statistiques montrées ne sont que les statistiques depuis la création de la tâche');\r\n    releaseNote.BugFixesEn.push('Time Sleep was sometimes saved with the wrong date');\r\n    releaseNote.BugFixesFr.push('L\\'Heure de sommeil était parfois enregistrée avec la mauvaise date');\r\n    releaseNote.BugFixesEn.push('Fixed an error when creating a task');\r\n    releaseNote.BugFixesFr.push('Corrigé une erreur lorsqu\\'une tâche est créée');\r\n    releaseNote.BugFixesEn.push('Improved reordering performance');\r\n    releaseNote.BugFixesFr.push('Amélioré la performance du changement d\\'ordre');\r\n    // releaseNote.FeaturesEn.push('Automatically select the current time when entering a time');\r\n    // releaseNote.FeaturesFr.push('L\\'Heure présente est sélectionnée automatiquement lorsqu\\'on entre une heure');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.44';\r\n    releaseNote.BugFixesEn.push('Fixed database locked bug');\r\n    releaseNote.BugFixesFr.push('Corrigé bug de base de donnée gelée');\r\n    releaseNote.BugFixesEn.push('Fixed reordering bug');\r\n    releaseNote.BugFixesFr.push('Corrigé bug de changement d\\'ordre');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.45';\r\n    releaseNote.BugFixesEn.push('Fixed reordering bug');\r\n    releaseNote.BugFixesFr.push('Corrigé bug de changement d\\'ordre');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.46';\r\n    releaseNote.FeaturesEn.push('Added privacy policy');\r\n    releaseNote.FeaturesFr.push('Ajout d\\'une politique de confidentialité');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.49';\r\n    releaseNote.FeaturesEn.push('Changed application name');\r\n    releaseNote.FeaturesFr.push('Changé le nom de l\\'application');\r\n    releaseNote.FeaturesEn.push('Changed icon');\r\n    releaseNote.FeaturesFr.push('Changé l\\'icône');\r\n    releaseNote.FeaturesEn.push('Removed splash screen');\r\n    releaseNote.FeaturesFr.push('Enlevé le splash screen');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.50';\r\n    releaseNote.FeaturesEn.push('Added Terms and conditions');\r\n    releaseNote.FeaturesFr.push('Ajouté Termes et conditions');\r\n    releaseNote.FeaturesEn.push('Timer doesn\\'t dissapear when creating a task');\r\n    releaseNote.FeaturesFr.push('Le timer ne disparaît pas lorsqu\\'on crée une tâche');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.51';\r\n    releaseNote.BugFixesEn.push('Sometimes tasks were getting created twice');\r\n    releaseNote.BugFixesFr.push('Parfois les tâches étaient créées deux fois');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.54';\r\n    releaseNote.BugFixesEn.push('Initial loading and date change loading is slightly faster');\r\n    releaseNote.BugFixesFr.push('Le chargement et changement de date est un peu plus rapide');\r\n    releaseNote.BugFixesEn.push('Improved performance when creating/inserting tasks or results');\r\n    releaseNote.BugFixesFr.push('Amélioration de la performance lors de création/modification de tâches et de résultats');\r\n    releaseNote.BugFixesEn.push('Stats get pre-loaded by a background thread');\r\n    releaseNote.BugFixesFr.push('Les statistiques sont pré-chargées par un processus en arrière plan');\r\n    releaseNote.BugFixesEn.push('Fix error when logging out');\r\n    releaseNote.BugFixesFr.push('Corrigé erreur lors du logout');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.55';\r\n    releaseNote.BugFixesEn.push('Fixed timer that wasn\\'t working');\r\n    releaseNote.BugFixesFr.push('Corrigé timer qui ne fonctionnait plus');\r\n    releaseNote.BugFixesEn.push('Fixed stats that were not working');\r\n    releaseNote.BugFixesFr.push('Corrigé statistiques qui ne fonctionnaient pas');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.56';\r\n    releaseNote.BugFixesEn.push('Fixed stats that were not showing');\r\n    releaseNote.BugFixesFr.push('Corrigé statistiques qui ne s\\'affichaient pas');\r\n    releaseNote.FeaturesEn.push('Removed some loading spinners');\r\n    releaseNote.FeaturesFr.push('Enlevé quelque spinners de chargement');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.57';\r\n    releaseNote.BugFixesEn.push('Calendar is smaller');\r\n    releaseNote.BugFixesFr.push('Le calendrier est plus petit');\r\n    releaseNote.BugFixesEn.push('Assigned date is now changed with a calendar');\r\n    releaseNote.BugFixesFr.push('La date assignée est maintenant changée avec un calendrier');\r\n    releaseNote.BugFixesEn.push('Time sleep now appears at the top of the charts');\r\n    releaseNote.BugFixesFr.push('L\\'Heure de sommeil apparaît maintenant au sommet des graphiques');\r\n    releaseNote.BugFixesEn.push('Stopped displaying confirmation popup when entering 18:30 last meal');\r\n    releaseNote.BugFixesFr.push('Enlevé le popup de confirmation lorsqu\\'on entre un dernier repas à 18h30');\r\n    releaseNote.FeaturesEn.push('Stop trying to sync when offline');\r\n    releaseNote.FeaturesFr.push('Ne plus essayer de synchroniser lorsque hors ligne');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.58';\r\n    releaseNote.BugFixesEn.push('The progress bar works when entering the application');\r\n    releaseNote.BugFixesFr.push('La barre de progrès fonctionne lorsqu\\'on entre dans l\\'application');\r\n    releaseNote.BugFixesEn.push('Lock ui when reloading');\r\n    releaseNote.BugFixesFr.push('UI gelé lors du chargement');\r\n    releaseNote.BugFixesEn.push('All \\'yes\\' buttons are on the right on dialogs');\r\n    releaseNote.BugFixesFr.push('Tous les boutons \\'oui\\' sont à droite dans les dialogues');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.59';\r\n    releaseNote.BugFixesEn.push('Removed loading popup when deleting a task');\r\n    releaseNote.BugFixesFr.push('Enlevé le popup de chargement lorsqu\\'une tâche est supprimée');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.61';\r\n    releaseNote.FeaturesEn.push('Improved create/edit task UI as well as settings UI');\r\n    releaseNote.FeaturesFr.push('Amélioré le UI de la création/modification de tâches ainsi que les configurations');\r\n    releaseNote.FeaturesEn.push('Improved Landscape usability');\r\n    releaseNote.FeaturesFr.push('Amélioré l\\'utilisabilité du mode paysage');\r\n    releaseNote.FeaturesEn.push('Added option to not sync data on server for privacy');\r\n    releaseNote.FeaturesFr.push('Ajouté option pour ne pas synchroniser sur un serveur pour confidentialité');\r\n    releaseNote.BugFixesEn.push('Bug in task ordering fixed');\r\n    releaseNote.BugFixesFr.push('Corrigé bug sur l\\'ordre des tâches');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.64';\r\n    releaseNote.BugFixesEn.push('Changed timepicker implementation');\r\n    releaseNote.BugFixesFr.push('Changé implémentation du timepicker');\r\n    releaseNote.BugFixesEn.push('Tasks don\\'t get created multiple times when spamming');\r\n    releaseNote.BugFixesFr.push('Les tâches ne se font pas créer plusieurs fois si on spam');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.66';\r\n    releaseNote.BugFixesEn.push('Bug in task ordering fixed');\r\n    releaseNote.BugFixesFr.push('Corrigé bug sur l\\'ordre des tâches');\r\n    releaseNote.FeaturesEn.push('Inactive accounts are deleted after one year');\r\n    releaseNote.FeaturesFr.push('Les comptes inactifs sont supprimés après un an d\\'inactivité');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.67';\r\n    releaseNote.BugFixesEn.push('Bug in task ordering fixed');\r\n    releaseNote.BugFixesFr.push('Corrigé bug sur l\\'ordre des tâches');\r\n    releaseNote.BugFixesEn.push('Entering empty number value doesn\\'t save');\r\n    releaseNote.BugFixesFr.push('Ne rien entrer lorsqu\\'on entre un nombre ne sauvegarde pas');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.68';\r\n    releaseNote.BugFixesEn.push('Enter time for end of day is now centered');\r\n    releaseNote.BugFixesFr.push('Entrer l\\'heure de fin de journée le popup est maintenant centré');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.80';\r\n    releaseNote.BugFixesEn.push('Fixed database is locked problem');\r\n    releaseNote.BugFixesFr.push('Corrigé un problème de base de donnée barrée');\r\n    releaseNote.BugFixesEn.push('Accelerated initial loading');\r\n    releaseNote.BugFixesFr.push('Chargement initial accéléré');\r\n    releaseNote.BugFixesEn.push('Added more logs for debugging');\r\n    releaseNote.BugFixesFr.push('Ajouté des logs pour le débuggage');\r\n    releaseNote.BugFixesEn.push('Fixed bug where data would keep trying to save because of duplicate id');\r\n    releaseNote.BugFixesFr.push('Corrigé bug de donnée qui essaie toujours de sauvegarder à cause d\\'un id dupliqué');\r\n    releaseNote.BugFixesEn.push('Faster login load');\r\n    releaseNote.BugFixesFr.push('Chargement plus rapide lors du login');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.1.87';\r\n    releaseNote.FeaturesEn.push('Added icons on buttons');\r\n    releaseNote.FeaturesFr.push('Ajouté des icônes sur des boutons');\r\n    releaseNote.FeaturesEn.push('Notes can be browsed, updated and deleted in the Notes menu');\r\n    releaseNote.FeaturesFr.push('Nouveau menu Notes ou on peut naviguer, dans les notes et les mettre à jour ou les supprimer');\r\n    releaseNote.FeaturesEn.push('Added cancel timer button');\r\n    releaseNote.FeaturesFr.push('Ajouté bouton pour annuler timer');\r\n    // releaseNote.FeaturesEn.push('Added \"...\" button on the task list header to access quick configs but it\\'s only mocked for now');\r\n    // releaseNote.FeaturesFr.push('Ajouté un bouton \"...\" en haut de la liste de tâches mais ce n\\'est pas encore fonctionnel');\r\n    releaseNote.FeaturesEn.push('Added calendar to pick date when clicking on current day');\r\n    releaseNote.FeaturesFr.push('Ajouté un calendrier pour choisir la date lorsqu\\'on clique sur la journée présente');\r\n    releaseNote.FeaturesEn.push('Timers are now persistent (saved locally on the phone, not on server)');\r\n    releaseNote.FeaturesFr.push('Les timers sont maintenant sauvegardés dans la base de donnée (locale seulement, pas sur le serveur)');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.2.16';\r\n    releaseNote.FeaturesEn.push('Added task groups, all tasks are now assigned to a group which has a name, color, order');\r\n    releaseNote.FeaturesFr.push('Ajouté des groupes de tâches, toutes les tâches sont maintenant assignées à un groupe qui a un nom, ' +\r\n                                'une couleur et un ordre');\r\n    releaseNote.FeaturesEn.push('Improved UI');\r\n    releaseNote.FeaturesFr.push('Amélioré UI');\r\n    releaseNote.FeaturesEn.push('Changed app name to HyperTask');\r\n    releaseNote.FeaturesFr.push('Changé le nom de l\\'application pour HyperTask');\r\n    releaseNote.FeaturesEn.push('Updated icon to match app colors');\r\n    releaseNote.FeaturesFr.push('Mis à jour l\\'icône pour matcher avec les couleurs de l\\'application');\r\n    releaseNote.FeaturesEn.push('Removed text on main buttons, icons only');\r\n    releaseNote.FeaturesFr.push('Enlevé le texte sur les boutons principaux, il n\\'y a que des icônes maintenant');\r\n    releaseNote.FeaturesEn.push('Popups to enter result doesn\\'t fade anymore when clicking outside of the box');\r\n    releaseNote.FeaturesFr.push('Les popups pour entrer le résultat ne se ferment plus lorsqu\\'on clique à côté');\r\n    releaseNote.FeaturesEn.push('Added popover menus');\r\n    releaseNote.FeaturesFr.push('Ajouté menus en popup');\r\n    releaseNote.BugFixesEn.push('Prevent sending empty feedback');\r\n    releaseNote.BugFixesFr.push('Empêcher d\\'envoyer du feedback vide');\r\n    releaseNote.BugFixesEn.push('Fixed local database synchronization issues');\r\n    releaseNote.BugFixesFr.push('Corrigé problèmes de synchronisation de données locales');\r\n    releaseNote.BugFixesEn.push('Changed event handling to improve performance');\r\n    releaseNote.BugFixesFr.push('Changé gestion d\\'événements pour améliorer la performance');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.3.00';\r\n    releaseNote.FeaturesEn.push('Added daily notifications for individual tasks');\r\n    releaseNote.FeaturesFr.push('Ajouté des notifications journalières pour les tâches individuelles');\r\n    releaseNote.FeaturesEn.push('Added ... button on the main page for a new popover menu');\r\n    releaseNote.FeaturesFr.push('Ajouté bouton ... sur la page principale pour un nouveau menu popover');\r\n    releaseNote.FeaturesEn.push('Added Prioritize vs Execute');\r\n    releaseNote.FeaturesFr.push('Ajouté Prioriser ou Exécuter');\r\n    releaseNote.FeaturesEn.push('Added drag and drop');\r\n    releaseNote.FeaturesFr.push('Ajouté glisser-déposer');\r\n    releaseNote.FeaturesEn.push('Added option to create group when creating a task');\r\n    releaseNote.FeaturesFr.push('Ajouté option pour créer un group lorsqu\\'on crée une tâche');\r\n    releaseNote.FeaturesEn.push('Added auto-focus on some inputs');\r\n    releaseNote.FeaturesFr.push('Ajouté auto-focus à quelque endroits');\r\n    releaseNote.FeaturesEn.push('Added walkthrough for first time users');\r\n    releaseNote.FeaturesFr.push('Ajouté tutoriel pour les nouveaux utilisateurs');\r\n    releaseNote.FeaturesEn.push('Removed language choice, will focus on only english for the start and minimize maintenance requirement');\r\n    releaseNote.FeaturesFr.push('Enlevé choix de langue, nous allons focusser seulement sur l\\'anglais au début pour minimizer la ' +\r\n    'maintenance');\r\n    releaseNote.FeaturesEn.push('Moved \"Skip All\" button to new popover menu');\r\n    releaseNote.FeaturesFr.push('Bougé \"Tout sauter\" dans un nouveau menu popover');\r\n    releaseNote.FeaturesEn.push('Added \"Postpone All\" button to group popover menu');\r\n    releaseNote.FeaturesFr.push('Ajout \"Tout remettre\" dans le menu popover de groupe');\r\n    // to add later\r\n    // releaseNote.FeaturesEn.push('Added popover with action suggestions when skipped modulo 7 days in a row');\r\n    // releaseNote.FeaturesFr.push('Ajouté un popover avec des actions suggérées lorsqu\\'une tâche est sautée 7 modulo fois de suite');\r\n    releaseNote.FeaturesEn.push('Added cross-device auto-sync');\r\n    releaseNote.FeaturesFr.push('Ajouté synchronisation automatique inter-appareils');\r\n    releaseNote.FeaturesEn.push('Added retrieval/deletion of data for privacy compliance');\r\n    releaseNote.FeaturesFr.push('Ajout du téléchargement ou suppression des données pour conformité de confidentialité');\r\n    releaseNote.BugFixesEn.push('Fixed Skip All bugs');\r\n    releaseNote.BugFixesFr.push('Corrigé des bugs pour tout sauter');\r\n    releaseNote.BugFixesEn.push('Fixed popups that could appears multiple times when lagging');\r\n    releaseNote.BugFixesFr.push('Corrigé des popups qui apparaissaient plusieurs fois lorsque ça laggais');\r\n    releaseNote.BugFixesEn.push('Fixed timers that were not accurate');\r\n    releaseNote.BugFixesFr.push('Corrigé timers qui n\\'étaient pas précis');\r\n    releaseNote.FeaturesEn.push('When changing task schedule type, ask if you want to change to the default group');\r\n    releaseNote.FeaturesFr.push('Lorsque la fréquence de la tâche est changée, demander si vous voulez changer au groupe par défaut');\r\n    releaseNote.FeaturesEn.push('Added setting option to lock in portrait mode');\r\n    releaseNote.FeaturesFr.push('Ajouté option de barrer l\\'écran en mode portrait');\r\n    releaseNotes.push(releaseNote);\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.3.4';\r\n    releaseNote.FeaturesEn.push('First version of pre-release');\r\n    releaseNote.FeaturesFr.push('Première version du pre-release');\r\n\r\n    releaseNote = new ReleaseNote();\r\n    releaseNote.Version = '0.3.6';\r\n    releaseNote.FeaturesEn.push('Improved performance');\r\n    releaseNote.FeaturesFr.push('Amélioré la performance');\r\n\r\n    return releaseNotes;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DataSyncServerService } from './data-sync-server-service';\r\nimport ThreadUtils from '../shared/thread.utils';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CalendarTaskService } from './calendar-task.service';\r\nimport { TaskHistoryService } from './task-history.service';\r\nimport { ApiHttpError } from '../models/Exceptions/ApiHttpError';\r\nimport { EventService } from './event.service';\r\nimport { ILogger } from '../interfaces/i-logger';\r\nimport { IDataSyncLocalService } from '../interfaces/i-data-sync-local-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataSyncService2 {\r\n\r\n  // NOTE : We should make sure the task is put again in queue if it fails ?\r\n\r\n  private API_HTTP_ERROR_COUNT: number = 0;\r\n  private API_HTTP_ERROR_DATE: Date;\r\n  private ThreadTasks: ThreadTask[] = [];\r\n\r\n  constructor(private localDataSync: IDataSyncLocalService,\r\n              private serverDataSync: DataSyncServerService,\r\n              //private notificationService: NotificationService, TODO CAPACITOR\r\n              private logger: ILogger,\r\n              private eventService: EventService) {\r\n    this.eventService.on(EventService.EventIds.Resume, () => {\r\n      console.log('Datasync On Resume');\r\n      this.queueTransaction(new ServerGetLatestSyncThreadTask());\r\n      this.queueTransaction(new ServerSyncThreadTask()); // OPTIONAL\r\n      this.queueTransaction(new NotificationThreadTask());\r\n    });\r\n\r\n    this.eventService.on(EventService.EventIds.SyncRequired, () => {\r\n      console.log('Datasync On Sync Required');\r\n      this.queueTransaction(new LocalSyncThreadTask());\r\n      this.queueTransaction(new ServerSyncThreadTask());\r\n      this.queueTransaction(new NotificationThreadTask());\r\n    });\r\n\r\n    this.eventService.on(EventService.EventIds.OnStartSync, () => {\r\n      console.log('OnStartSync Required');\r\n      this.queueTransaction(new ServerGetLatestSyncThreadTask());\r\n      this.queueTransaction(new LocalSyncThreadTask());\r\n      this.queueTransaction(new ServerSyncThreadTask());\r\n      this.queueTransaction(new NotificationThreadTask());\r\n    });\r\n  }\r\n\r\n  public async checkForSyncRepeat(): Promise<void> {\r\n    while (true) {\r\n      console.log('checkForSyncRepeat');\r\n      try {\r\n        if (this.ThreadTasks.length > 0) {\r\n          const initialName = this.ThreadTasks[0].name;\r\n          console.log('------ PROCESSING THREAD TASK : ' + this.ThreadTasks[0].name, initialName, this.ThreadTasks);\r\n          await this.ThreadTasks[0].processTransaction(this.localDataSync, this.serverDataSync, /*this.notificationService, */ this.logger);\r\n          console.log('++++++ THREAD TASK COMPLETED : ' + this.ThreadTasks[0].name, initialName, this.ThreadTasks);\r\n          this.ThreadTasks.splice(0, 1);\r\n        } /*else {\r\n          console.log('xxxxxx - NO TASK TO PROCESS - xxxxxx');\r\n        }*/\r\n      } catch (error) {\r\n\r\n        // HANDLE API ERRORS\r\n        if (error instanceof ApiHttpError) {\r\n          // console.log('INSTANCE OF API ERROR');\r\n          this.API_HTTP_ERROR_COUNT ++;\r\n          this.API_HTTP_ERROR_DATE = new Date();\r\n        }\r\n\r\n        this.logger.logDebug('Error checking for sync repeat');\r\n        this.logger.logError(error);\r\n      } finally {\r\n        await ThreadUtils.sleep(1500); // todo capacitor\r\n      }\r\n    }\r\n  }\r\n\r\n  public queueTransaction(task: ThreadTask) {\r\n    this.logger.logDebug('queuing Transaction sync 2: ' + task.name);\r\n    if (this.ThreadTasks.length === 0) {\r\n      this.logger.logDebug('>>>>>>>>>>>>> No tasks queued : ', task.name);\r\n      this.ThreadTasks.push(task);\r\n      this.logger.logDebug('>>>>>>>>>>>>> Queue : ' + this.ThreadTasks);\r\n      return;\r\n    }\r\n\r\n    if (this.ThreadTasks.filter((u, i) => i >= 1 || u.isStarted === true).some(t => t.name === task.name)) { // queue if already at [0] and started\r\n      this.logger.logDebug('>>>>>>>>>>>>> CANT QUEUE ALREADY EXISTS: ' + task.name);\r\n      this.logger.logDebug('>>>>>>>>>>>>> Queue : ' + this.ThreadTasks);\r\n      /*if (task.name === 'Notification') {\r\n        return;\r\n      }*/\r\n\r\n      return;\r\n    }\r\n\r\n    // tslint:disable-next-line:prefer-for-of\r\n    for (let i = 0; i < this.ThreadTasks.length; i++) {\r\n      if (task.priority < this.ThreadTasks[i].priority) {\r\n        this.logger.logDebug('>>>>>>>>> priority i=' + i + ' ' + task.name + ' < ' + this.ThreadTasks[i].name);\r\n\r\n        if (this.ThreadTasks[i].isStarted === true) {\r\n          this.ThreadTasks[i].cancelToken.cancelRequested = true;\r\n          this.logger.logDebug('>>>>>>>>>>> Thread already started, requesting cancellation ' + this.ThreadTasks[i].name);\r\n        }\r\n\r\n        // cant insert at 0 (already started)\r\n        if (i === 0 && this.ThreadTasks.length > 0) {\r\n          // check if other higher priority\r\n          if (this.ThreadTasks.length == 1)\r\n          {\r\n            this.logger.logDebug('>>>>>>>>>>> Inserting at : ' + 1 + ' ' + task.name + ' ' + this.ThreadTasks);\r\n            this.insertAt(this.ThreadTasks, 1, task);\r\n            this.logger.logDebug('>>>>>>>>>>>>> Queue : ' + this.ThreadTasks);\r\n          }\r\n          else {\r\n            for (let j = 1; j < this.ThreadTasks.length; j++) {\r\n              if (task.priority < this.ThreadTasks[j].priority) {\r\n                this.logger.logDebug('>>>>>>>>>>> Inserting at J : ' + j + ' ' + task.name + ' ' + this.ThreadTasks);\r\n                this.insertAt(this.ThreadTasks, j, task);\r\n                this.logger.logDebug('>>>>>>>>>>>>> Queue : ' + this.ThreadTasks);\r\n                return;\r\n              }\r\n            }\r\n        \r\n            this.logger.logDebug('>>>>>>>>>>>>>> Inserting at the end: ' + this.ThreadTasks);\r\n            this.ThreadTasks.push(task);\r\n            this.logger.logDebug('>>>>>>>>>>>>> Queue : ' + this.ThreadTasks);\r\n            return;\r\n          }\r\n        } else {\r\n          this.logger.logDebug('>>>>>>>>>>> Inserting at : ' + i + ' ' + task.name + ' ' + this.ThreadTasks);\r\n          this.insertAt(this.ThreadTasks, i, task);\r\n          this.logger.logDebug('>>>>>>>>>>>>> Queue : ' + this.ThreadTasks);\r\n        }\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    for (const t of this.ThreadTasks) {\r\n      if (task.priority < t.priority) {\r\n        this.logger.logDebug('>>>>>>>>>>>>> Inserting before : ' + t + ' ' + this.ThreadTasks);\r\n        this.ThreadTasks.unshift(task);\r\n        this.logger.logDebug('>>>>>>>>>>>>> Queue : ' + this.ThreadTasks);\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.logger.logDebug('>>>>>>>>>>>>>> Inserting at the end: ' + this.ThreadTasks);\r\n    this.ThreadTasks.push(task);\r\n    this.logger.logDebug('>>>>>>>>>>>>> Queue : ' + this.ThreadTasks);\r\n    return;\r\n  }\r\n\r\n  public insertAt(array, index, ...elementsArray) {\r\n    array.splice(index, 0, ...elementsArray);\r\n  }\r\n}\r\n\r\nabstract class ThreadTask {\r\n  public cancelToken: CancellationToken = new CancellationToken();\r\n  public priority: number;\r\n  public isStarted: boolean;\r\n  public name: string;\r\n\r\n  abstract processTransaction(localDataSync: IDataSyncLocalService,\r\n                              serverDataSync: DataSyncServerService,\r\n                              /*notificationService: NotificationService,*/\r\n                              logger: ILogger): Promise<boolean>;\r\n}\r\n\r\n// Notifications need to be checked when :\r\n// - Resume\r\n// - Application start\r\n// - Action is done\r\nclass NotificationThreadTask implements ThreadTask {\r\n  public cancelToken: CancellationToken = new CancellationToken();\r\n  public priority = 4;\r\n  public isStarted: boolean;\r\n  public name = 'Notification';\r\n\r\n  public async processTransaction(localDataSync: IDataSyncLocalService,\r\n                                  serverDataSync: DataSyncServerService,\r\n                                  /*notificationService: NotificationService,*/\r\n                                  logger: ILogger): Promise<boolean> {\r\n    try {\r\n      logger.logDebug('NotificationThreadTask');\r\n      //await notificationService.refreshNotifications(); TODO Capacitor\r\n      return true;\r\n    } catch (error) {\r\n      logger.logError(error);\r\n      alert('Error processing thread task 1');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n// Need to be checked when :\r\n// - An action is done\r\nclass LocalSyncThreadTask implements ThreadTask {\r\n  public cancelToken: CancellationToken = new CancellationToken();\r\n  public priority = 1;\r\n  public isStarted: boolean;\r\n  public name = 'LocalSync';\r\n\r\n  public async processTransaction(localDataSync: IDataSyncLocalService,\r\n                                  serverDataSync: DataSyncServerService,\r\n                                  /*notificationService: NotificationService,*/\r\n                                  logger: ILogger): Promise<boolean> {\r\n    try {\r\n      logger.logDebug('LOCALSYNCTHREAD' + localDataSync);\r\n      await localDataSync.processQueue();\r\n      logger.logDebug('LOCALSYNCTHREAD END');\r\n      return true;\r\n    } catch (error) {\r\n      logger.logError(error);\r\n      alert('Error processing thread task 2');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n// Need to be checked when :\r\n// - all of the time ?\r\n// - after local sync\r\n// - as long as there is something to transmit\r\nclass ServerSyncThreadTask implements ThreadTask {\r\n  public cancelToken: CancellationToken = new CancellationToken();\r\n  public priority = 2;\r\n  public isStarted: boolean;\r\n  public name = 'ServerSync';\r\n\r\n  public async processTransaction(localDataSync: IDataSyncLocalService,\r\n                                  serverDataSync: DataSyncServerService,\r\n                                  /*notificationService: NotificationService,*/\r\n                                  logger: ILogger): Promise<boolean> {\r\n    try {\r\n      logger.logDebug('SERVERSYNCTHREAD');\r\n      await serverDataSync.processQueue();\r\n      logger.logDebug('SERVERSYNCTHREAD DONE');\r\n      return true;\r\n    } catch (error) {\r\n      logger.logError(error);\r\n      alert('Error processing thread task 3');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\n// Need to be checked when :\r\n// - Resume\r\n// - Application start\r\nclass ServerGetLatestSyncThreadTask implements ThreadTask {\r\n  public cancelToken: CancellationToken = new CancellationToken();\r\n  public priority = 3;\r\n  public isStarted: boolean;\r\n  public name = 'GetLatestServer';\r\n\r\n  public async processTransaction(localDataSync: IDataSyncLocalService,\r\n                                  serverDataSync: DataSyncServerService,\r\n                                  /*notificationService: NotificationService,*/\r\n                                  logger: ILogger): Promise<boolean> {\r\n    try {\r\n      logger.logDebug('GetLatest');\r\n      // logger.logDebug('SERVERGETLATESTSYNCTHREAD');\r\n      await serverDataSync.GetLatest(this.cancelToken);\r\n      logger.logDebug('GetLatest END');\r\n      return true;\r\n    } catch (error) {\r\n      logger.logError(error);\r\n      alert('Error processing thread task 4');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport class CancellationToken {\r\n  public cancelRequested: boolean = false;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DTOCalendarTask } from '../models/DTO/dto-calendar-task';\r\nimport { DTOTaskHistory } from '../models/DTO/dto-task-history';\r\nimport { IDataSyncLocalService } from '../interfaces/i-data-sync-local-service';\r\nimport { ILocalStorageService } from '../interfaces/i-local-storage-service';\r\nimport { DTOTaskTimer } from '../models/DTO/dto-timer';\r\nimport { DTOTaskGroup } from '../models/DTO/dto-task-group';\r\nimport { ILogger } from '../interfaces/i-logger';\r\nimport { EventData, EventService } from './event.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataSyncLocalService implements IDataSyncLocalService {\r\n\r\n  private transactionQueue: Transaction[] = [];\r\n\r\n  constructor(private localStorage: ILocalStorageService,\r\n              private logger: ILogger,\r\n              private eventService: EventService) { }\r\n\r\n  public allDataIsSynced(): Promise<boolean> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  public async getUnsynchronized(): Promise<string[]> {\r\n    const result: string[] = [];\r\n\r\n    for (const transaction of this.transactionQueue) {\r\n      result.push(JSON.stringify(transaction.transactionObject));\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  public async processQueue(): Promise<void> {\r\n    console.log('PROCESSING QUEUE');\r\n    while (this.transactionQueue.length > 0) {\r\n      const transaction = this.transactionQueue.shift();\r\n\r\n      const success = await transaction.processTransaction(this.localStorage, this.logger);\r\n      if (!success) {\r\n        this.logger.logError(new Error('Failed to process transaction'),\r\n                             { key: 'transaction', value: JSON.stringify(transaction)});\r\n      }\r\n    }\r\n\r\n    console.log('QUEUE PROCESSED');\r\n    this.eventService.emit(new EventData(EventService.EventIds.LocalSyncCompleted, null));\r\n\r\n    return;\r\n  }\r\n\r\n  public async queueInsertCalendarTask(task: DTOCalendarTask): Promise<any> {\r\n    if (task == null) {\r\n      return;\r\n    }\r\n\r\n    const transaction = new TaskTransaction();\r\n    transaction.transactionType = TransactionType.Insert;\r\n    transaction.transactionObject = task;\r\n    this.transactionQueue.push(transaction);\r\n    return;\r\n  }\r\n\r\n  public async queueUpdateCalendarTask(task: DTOCalendarTask, synced: boolean = false): Promise<any> {\r\n    if (task == null) {\r\n      return;\r\n    }\r\n\r\n    task.Synced = synced;\r\n\r\n    const transaction = new TaskTransaction();\r\n    transaction.transactionType = TransactionType.Update;\r\n    transaction.transactionObject = task;\r\n\r\n    this.transactionQueue.push(transaction);\r\n    return;\r\n  }\r\n\r\n  public async queueUpdateCalendarTasks(tasks: DTOCalendarTask[], synced: boolean = false): Promise<any> {\r\n    if (tasks == null || tasks.length === 0) {\r\n      return;\r\n    }\r\n\r\n    tasks.forEach(p => p.Synced = synced);\r\n\r\n    const transaction = new TasksTransaction();\r\n    transaction.transactionType = TransactionType.Update;\r\n    transaction.transactionObject = tasks;\r\n\r\n    this.transactionQueue.push(transaction);\r\n\r\n    return;\r\n  }\r\n\r\n  public async queueInsertCalendarTasks(tasks: DTOCalendarTask[]): Promise<any> {\r\n    if (tasks == null || tasks.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const transaction = new TasksTransaction();\r\n    transaction.transactionType = TransactionType.Insert;\r\n    transaction.transactionObject = tasks;\r\n    this.transactionQueue.push(transaction);\r\n    return;\r\n  }\r\n\r\n  public async queueInsertTaskHistory(history: DTOTaskHistory): Promise<any> {\r\n    if (history == null) {\r\n      return;\r\n    }\r\n\r\n    const transaction = new TaskHistoryTransaction();\r\n    transaction.transactionType = TransactionType.Insert;\r\n    transaction.transactionObject = history;\r\n    this.transactionQueue.push(transaction);\r\n    return;\r\n  }\r\n\r\n  public async queueInsertTaskHistories(histories: DTOTaskHistory[]): Promise<any> {\r\n    if (histories == null || histories.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const transaction = new TaskHistoriesTransaction();\r\n    transaction.transactionType = TransactionType.Insert;\r\n    transaction.transactionObject = histories;\r\n    this.transactionQueue.push(transaction);\r\n    return;\r\n  }\r\n\r\n  public async queueUpdateTaskHistory(history: DTOTaskHistory): Promise<any> {\r\n    if (history == null) {\r\n      return;\r\n    }\r\n\r\n    history.Synced = false;\r\n\r\n    const transaction = new TaskHistoryTransaction();\r\n    transaction.transactionType = TransactionType.Update;\r\n    transaction.transactionObject = history;\r\n    this.transactionQueue.push(transaction);\r\n    return;\r\n  }\r\n\r\n  public async queueUpdateTaskHistories(histories: DTOTaskHistory[]): Promise<any> {\r\n    if (histories == null || histories.length === 0) {\r\n      return;\r\n    }\r\n\r\n    histories.forEach(p => p.Synced = false);\r\n\r\n    const transaction = new TaskHistoriesTransaction();\r\n    transaction.transactionType = TransactionType.Update;\r\n    transaction.transactionObject = histories;\r\n    this.transactionQueue.push(transaction);\r\n    return;\r\n  }\r\n\r\n  public async queueInsertTimer(timer: DTOTaskTimer): Promise<any> {\r\n    if (timer == null) {\r\n      return;\r\n    }\r\n\r\n    const transaction = new TimerTransaction();\r\n    transaction.transactionType = TransactionType.Insert;\r\n    transaction.transactionObject = timer;\r\n    this.transactionQueue.push(transaction);\r\n    console.log('queued timer', this.transactionQueue);\r\n    return;\r\n  }\r\n\r\n  public async queueUpdateTimer(timer: DTOTaskTimer): Promise<any> {\r\n    if (timer == null) {\r\n      return;\r\n    }\r\n\r\n    timer.isSynced = false;\r\n\r\n    const transaction = new TimerTransaction();\r\n    transaction.transactionType = TransactionType.Update;\r\n    transaction.transactionObject = timer;\r\n    this.transactionQueue.push(transaction);\r\n    return;\r\n  }\r\n\r\n  public async queueInsertGroup(group: DTOTaskGroup): Promise<any> {\r\n    if (group == null) {\r\n      return;\r\n    }\r\n\r\n    const transaction = new GroupTransaction();\r\n    transaction.transactionType = TransactionType.Insert;\r\n    transaction.transactionObject = group;\r\n    this.transactionQueue.push(transaction);\r\n    return;\r\n  }\r\n\r\n  public async queueInsertGroups(groups: DTOTaskGroup[]): Promise<any> {\r\n    if (groups == null || groups.length === 0) {\r\n      return;\r\n    }\r\n\r\n    const transaction = new GroupsTransaction();\r\n    transaction.transactionType = TransactionType.Insert;\r\n    transaction.transactionObject = groups;\r\n    this.transactionQueue.push(transaction);\r\n    return;\r\n  }\r\n\r\n  public async queueUpdateGroup(group: DTOTaskGroup, synced: boolean = false): Promise<any> {\r\n    if (group == null) {\r\n      return;\r\n    }\r\n\r\n    group.Synced = synced;\r\n\r\n    const transaction = new GroupTransaction();\r\n    transaction.transactionType = TransactionType.Update;\r\n    transaction.transactionObject = group;\r\n    this.transactionQueue.push(transaction);\r\n    return;\r\n  }\r\n\r\n  public async queueUpdateGroups(groups: DTOTaskGroup[], synced: boolean = false): Promise<any> {\r\n\r\n    console.log('queueUpdateGroups', groups);\r\n\r\n    if (groups == null || groups.length === 0) {\r\n      return;\r\n    }\r\n\r\n    groups.forEach(p => p.Synced = synced);\r\n\r\n    const transaction = new GroupsTransaction();\r\n    transaction.transactionType = TransactionType.Update;\r\n    transaction.transactionObject = groups;\r\n    this.transactionQueue.push(transaction);\r\n    return;\r\n  }\r\n}\r\n\r\nabstract class Transaction {\r\n  public transactionObject: any;\r\n  public transactionType: TransactionType;\r\n\r\n  abstract processTransaction(localService: ILocalStorageService,\r\n                              logger: ILogger): Promise<boolean>;\r\n}\r\n\r\nclass TaskTransaction implements Transaction {\r\n  public transactionType: TransactionType;\r\n  public transactionObject: DTOCalendarTask;\r\n\r\n  public async processTransaction(localService: ILocalStorageService,\r\n                                  logger: ILogger): Promise<boolean> {\r\n    try {\r\n      if (this.transactionType === TransactionType.Insert) {\r\n        await localService.insertCalendarTask(this.transactionObject as DTOCalendarTask);\r\n      } else if (this.transactionType === TransactionType.Update) {\r\n        await localService.updateCalendarTask(this.transactionObject as DTOCalendarTask, this.transactionObject.Synced);\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      logger.logError(error,\r\n                      { key: 'transaction', value: JSON.stringify(this.transactionObject)});\r\n      alert('Error processing transaction1');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nclass TasksTransaction implements Transaction {\r\n  public transactionType: TransactionType;\r\n  public transactionObject: DTOCalendarTask[];\r\n\r\n  public async processTransaction(localService: ILocalStorageService,\r\n                                  logger: ILogger): Promise<boolean> {\r\n    try {\r\n      if (this.transactionType === TransactionType.Insert) {\r\n        await localService.insertCalendarTasks(this.transactionObject as DTOCalendarTask[]);\r\n      } else if (this.transactionType === TransactionType.Update) {\r\n        // console.log('ALLO', this.transactionObject);\r\n        await localService.updateCalendarTasks(this.transactionObject as DTOCalendarTask[], this.transactionObject[0].Synced);\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      logger.logError(error,\r\n                      { key: 'transaction', value: JSON.stringify(this.transactionObject)});\r\n      alert('Error processing transaction2');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nclass TaskHistoryTransaction implements Transaction {\r\n  public transactionType: TransactionType;\r\n  public transactionObject: DTOTaskHistory;\r\n\r\n  public async processTransaction(localService: ILocalStorageService,\r\n                                  logger: ILogger): Promise<boolean> {\r\n    try {\r\n      if (this.transactionType === TransactionType.Insert) {\r\n        // console.log('PROCESSTRANSACTION INSERT HISTORY', this.transactionObject as DTOTaskHistory);\r\n        await localService.insertTaskHistory(this.transactionObject as DTOTaskHistory);\r\n      } else if (this.transactionType === TransactionType.Update) {\r\n        // console.log('PROCESSTRANSACTION UPDATE HISTORY', this.transactionObject as DTOTaskHistory);\r\n        await localService.updateTaskHistory(this.transactionObject as DTOTaskHistory);\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      logger.logError(error,\r\n                      { key: 'transaction', value: JSON.stringify(this.transactionObject)});\r\n      alert('Error processing transaction 3');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nclass TaskHistoriesTransaction implements Transaction {\r\n  public transactionType: TransactionType;\r\n  public transactionObject: DTOTaskHistory[];\r\n\r\n  public async processTransaction(localService: ILocalStorageService,\r\n                                  logger: ILogger): Promise<boolean> {\r\n    try {\r\n      if (this.transactionType === TransactionType.Insert) {\r\n        // console.log('PROCESSTRANSACTION INSERT HISTORY', this.transactionObject as DTOTaskHistory);\r\n        await localService.insertTaskHistories(this.transactionObject as DTOTaskHistory[]);\r\n      } else if (this.transactionType === TransactionType.Update) {\r\n        await localService.updateTaskHistories(this.transactionObject as DTOTaskHistory[]);\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      logger.logError(error,\r\n                      { key: 'transaction', value: JSON.stringify(this.transactionObject)});\r\n      alert('Error processing transaction 4');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nclass TimerTransaction implements Transaction {\r\n  public transactionType: TransactionType;\r\n  public transactionObject: DTOTaskTimer;\r\n\r\n  public async processTransaction(localService: ILocalStorageService,\r\n                                  logger: ILogger): Promise<boolean> {\r\n    try {\r\n      if (this.transactionType === TransactionType.Insert) {\r\n        console.log('QUEUE PROCESS INSERT TIMER', this.transactionObject);\r\n        await localService.insertTimer(this.transactionObject as DTOTaskTimer);\r\n      } else if (this.transactionType === TransactionType.Update) {\r\n        await localService.updateTimer(this.transactionObject as DTOTaskTimer);\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      logger.logError(error,\r\n                      { key: 'transaction', value: JSON.stringify(this.transactionObject)});\r\n      alert('Error processing transaction 5');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nclass GroupTransaction implements Transaction {\r\n  public transactionType: TransactionType;\r\n  public transactionObject: DTOTaskGroup;\r\n\r\n  public async processTransaction(localService: ILocalStorageService,\r\n                                  logger: ILogger): Promise<boolean> {\r\n    try {\r\n      if (this.transactionType === TransactionType.Insert) {\r\n        console.log('ALLO2');\r\n        await localService.insertGroup(this.transactionObject as DTOTaskGroup);\r\n      } else if (this.transactionType === TransactionType.Update) {\r\n        await localService.updateGroup(this.transactionObject as DTOTaskGroup, this.transactionObject.Synced);\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      logger.logError(error,\r\n                      { key: 'transaction', value: JSON.stringify(this.transactionObject)});\r\n      alert('Error processing transaction 5');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nclass GroupsTransaction implements Transaction {\r\n  public transactionType: TransactionType;\r\n  public transactionObject: DTOTaskGroup[];\r\n\r\n  public async processTransaction(localService: ILocalStorageService,\r\n                                  logger: ILogger): Promise<boolean> {\r\n    try {\r\n      if (this.transactionType === TransactionType.Insert) {\r\n        await localService.insertGroups(this.transactionObject as DTOTaskGroup[]);\r\n      } else if (this.transactionType === TransactionType.Update) {\r\n        await localService.updateGroups(this.transactionObject as DTOTaskGroup[], true);\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      logger.logError(error,\r\n                      { key: 'transaction', value: JSON.stringify(this.transactionObject)});\r\n      alert('Error processing transaction 6');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nenum TransactionType {\r\n  Insert = 0,\r\n  Update = 1\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LocalStorageService } from './local-storage.service';\r\nimport { DTOTaskHistory } from '../models/DTO/dto-task-history';\r\nimport { DTOCalendarTask } from '../models/DTO/dto-calendar-task';\r\nimport { CalendarTaskService } from './calendar-task.service';\r\nimport { IApiProvider } from '../interfaces/i-api-provider';\r\nimport { ILocalStorageService } from '../interfaces/i-local-storage-service';\r\nimport { CalendarTaskNotFoundError } from '../models/Exceptions/CalendarTaskNotFoundError';\r\nimport { TaskHistoryNotFoundError } from '../models/Exceptions/TaskHistoryNotFoundError';\r\nimport { ILogger } from '../interfaces/i-logger';\r\nimport { NetworkService, ConnectionStatus } from './network.service';\r\nimport { UserService } from './user.service';\r\nimport { UserConfig } from '../models/Core/user-config';\r\nimport { DTOTaskGroup } from '../models/DTO/dto-task-group';\r\nimport { GroupNotFoundError } from '../models/Exceptions/GroupNotFoundError';\r\nimport { throwError } from 'rxjs';\r\nimport { EventData, EventService } from './event.service';\r\nimport DateUtils from '../shared/date-utils';\r\nimport { DTOUser } from '../models/DTO/dto-user';\r\nimport { LoadingController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { CancellationToken } from './data-sync-2.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataSyncServerService {\r\n\r\n  public static GetLatestRequired: boolean = false;\r\n  public static SyncRequired: boolean = false;\r\n  public static GetLatestStarted: boolean = false;\r\n  public static GetLatestInvalid: boolean = false;\r\n  public static ApplicationLoaded: boolean = false;\r\n  public static GetLatestRequiredReason: string = '';\r\n\r\n  constructor(private local: ILocalStorageService,\r\n              private apiProvider: IApiProvider,\r\n              private calendarTaskService: CalendarTaskService,\r\n              private logger: ILogger,\r\n              private network: NetworkService,\r\n              private userService: UserService,\r\n              private eventService: EventService,\r\n              private loadingController: LoadingController,\r\n              private translate: TranslateService) {\r\n    this.eventService.on(EventService.EventIds.SyncRequired, async () => {\r\n      DataSyncServerService.SyncRequired = true;\r\n      DataSyncServerService.GetLatestInvalid = true;\r\n    });\r\n  }\r\n\r\n  public async allDataIsSynced(): Promise<boolean> {\r\n    // console.log('allDataIsSynced');\r\n    const allTasks = await this.local.getCalendarTasks(false);\r\n    const unsyncedTaskData = allTasks.filter(p => p.Synced === false ||\r\n                                                  p.Sent === false ||\r\n                                                  p.Histories.some(t => t.Sent === false ||\r\n                                                                        t.Synced === false));\r\n\r\n    const storedGroups = await this.local.getGroups(false);\r\n    const unsyncedGroupData = storedGroups.filter(p => p.Synced === false || p.Sent === false);\r\n\r\n    if (unsyncedTaskData != null && unsyncedTaskData.length > 0) {\r\n      // console.log('unsynced data:', unsyncedTaskData);\r\n    } else {\r\n      // console.log('no unsynced data:', unsyncedTaskData);\r\n    }\r\n\r\n    const result = unsyncedTaskData == null ||\r\n                   unsyncedTaskData.length === 0 ||\r\n                   unsyncedGroupData == null ||\r\n                   unsyncedGroupData.length === 0;\r\n\r\n    return result;\r\n  }\r\n\r\n  public async getUnsynchronized(): Promise<string[]> {\r\n    console.log('getUnsynchronized');\r\n    // this.logger.logEvent('getUnsynchronized');\r\n    await this.local.waitForDbAvailable('getUnsynchronized');\r\n\r\n    const result: string[] = [];\r\n\r\n    LocalStorageService.currentlyUsed = true;\r\n\r\n    let storedTasks = await this.local.getCalendarTasks(true);\r\n\r\n    // console.log('got1 CheckForUnsynchronize');\r\n\r\n    if (storedTasks != null) {\r\n      const unSentTasks = storedTasks.filter(p => p.Sent === false);\r\n\r\n      if (unSentTasks != null && unSentTasks.length > 0) {\r\n        // console.log('sendUnsentTasks');\r\n        result.push('unSentTasks');\r\n        result.push(JSON.stringify(unSentTasks));\r\n        result.push('');\r\n      }\r\n    }\r\n\r\n    // console.log('getting1 CheckForUnsynchronize');\r\n\r\n    storedTasks = await this.local.getCalendarTasks(true);\r\n\r\n    // console.log('got2 CheckForUnsynchronize');\r\n\r\n    if (storedTasks != null) {\r\n      const unSyncedTasks = storedTasks.filter(p => p.Sent === true && p.Synced === false);\r\n\r\n      if (unSyncedTasks != null && unSyncedTasks.length > 0) {\r\n        result.push('unSyncedTasks');\r\n        result.push(JSON.stringify(unSyncedTasks));\r\n        result.push('');\r\n      }\r\n    }\r\n\r\n    // console.log('getting1 CheckForUnsynchronize');\r\n\r\n    storedTasks = await this.local.getCalendarTasks(true);\r\n\r\n    // console.log('got3 CheckForUnsynchronize');\r\n\r\n    if (storedTasks != null) {\r\n      const unSentHistories = this.getUnsentHistories(storedTasks);\r\n\r\n      if (unSentHistories != null && unSentHistories.length > 0) {\r\n        result.push('unSentHistories');\r\n        result.push(JSON.stringify(unSentHistories));\r\n        result.push('');\r\n      }\r\n    }\r\n\r\n    // console.log('getting1 CheckForUnsynchronize');\r\n\r\n    storedTasks = await this.local.getCalendarTasks(true);\r\n\r\n    // console.log('got4 CheckForUnsynchronize');\r\n\r\n    if (storedTasks != null) {\r\n      const unSyncedHistories = this.getUnsyncedHistories(storedTasks);\r\n\r\n      if (unSyncedHistories != null && unSyncedHistories.length > 0) {\r\n        result.push('unSyncedHistories');\r\n        result.push(JSON.stringify(unSyncedHistories));\r\n        result.push('');\r\n      }\r\n    }\r\n\r\n    // UNSENT GROUPS\r\n    const storedGroups = await this.local.getGroups(true);\r\n    if (storedGroups != null) {\r\n      const unSentGroups = this.getUnsentGroups(storedGroups);\r\n\r\n      if (unSentGroups != null && unSentGroups.length > 0) {\r\n        result.push('unSentGroups');\r\n        result.push(JSON.stringify(unSentGroups));\r\n        result.push('');\r\n      }\r\n    }\r\n\r\n    // UNSYNCED GROUPS\r\n    if (storedGroups != null) {\r\n      const unSyncedGroups = this.getUnsyncedGroups(storedGroups);\r\n\r\n      console.log('UNSYNCED GROUPPPS ', unSyncedGroups);\r\n\r\n      if (unSyncedGroups != null && unSyncedGroups.length > 0) {\r\n        result.push('unSyncedGroups');\r\n        result.push(JSON.stringify(unSyncedGroups));\r\n        result.push('');\r\n      }\r\n    }\r\n\r\n    // this.logger.logEvent('ending getUnsynchronized');\r\n\r\n    LocalStorageService.currentlyUsed = false;\r\n\r\n    return result;\r\n  }\r\n\r\n  private async processUnsynchronized(): Promise<boolean> {\r\n    //console.log('processUnsynchronized');\r\n    // TODO : Remove this as soon as it's stable\r\n    // const syncStart = new Date();\r\n    //this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, LOCKING');\r\n\r\n    await this.local.waitForDbAvailable('checkForUnsynchronized');\r\n\r\n    LocalStorageService.currentlyUsed = true;\r\n\r\n    let success = true;\r\n\r\n    // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, LOCKED, GETTING TASKS');\r\n    // console.log('%% CHECK FOR UNSYNCHRONIZED, LOCKED, GETTING TASKS', DateUtils.getTimeSince(syncStart));\r\n\r\n    // await ThreadUtils.sleep(5000);\r\n\r\n    let storedTasks = await this.local.getCalendarTasks(true);\r\n\r\n    // console.log('got1 CheckForUnsynchronize');\r\n\r\n    if (storedTasks != null) {\r\n      const unSentTasks = storedTasks.filter(p => p.Sent === false);\r\n\r\n      if (unSentTasks != null && unSentTasks.length > 0) {\r\n        // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, SEND UNSENT TASKS', JSON.stringify(unSentTasks));\r\n        if (await this.sendUnsentTasks(unSentTasks) === false) {\r\n          success = false;\r\n        }\r\n        // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, SEND UNSENT TASKS DONE');\r\n      }\r\n    }\r\n\r\n    // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, GET TASKS AGAIN');\r\n\r\n    storedTasks = await this.local.getCalendarTasks(true);\r\n\r\n    // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, GOT TASKS AGAIN');\r\n\r\n    if (storedTasks != null) {\r\n      const unSyncedTasks = storedTasks.filter(p => p.Sent === true && p.Synced === false);\r\n\r\n      if (unSyncedTasks != null && unSyncedTasks.length > 0) {\r\n        // console.log('unSyncedTasks : ', unSyncedTasks);\r\n        // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, SYNC UNSYNCED TASKS', JSON.stringify(unSyncedTasks));\r\n        if (await this.syncUnsyncedTasks(unSyncedTasks) === false) {\r\n          success = false;\r\n        }\r\n        // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, SYNC UNSYNCED TASKS DONE');\r\n      }\r\n    }\r\n\r\n    // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, GET TASKS AGAIN 2');\r\n\r\n    storedTasks = await this.local.getCalendarTasks(true);\r\n\r\n    // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, GOT TASKS AGAIN 2');\r\n\r\n    if (storedTasks != null) {\r\n      // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, GET UNSENT HISTORIES');\r\n      const unSentHistories = this.getUnsentHistories(storedTasks);\r\n      // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, GOT UNSENT HISTORIES');\r\n\r\n      if (unSentHistories != null && unSentHistories.length > 0) {\r\n        // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, SEND UNSENT HISTORIES', JSON.stringify(unSentHistories));\r\n        if (await this.sendUnsentHistories(unSentHistories) === false) {\r\n          success = false;\r\n        }\r\n        // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, SEND UNSENT HISTORIES DONE');\r\n      }\r\n    }\r\n\r\n    // console.log('getting1 CheckForUnsynchronize');\r\n    // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, GET TASKS AGAIN 3');\r\n\r\n    storedTasks = await this.local.getCalendarTasks(true);\r\n\r\n    // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, GOT TASKS AGAIN 3');\r\n\r\n    // console.log('got4 CheckForUnsynchronize');\r\n\r\n    if (storedTasks != null) {\r\n      // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, GET UNSYNCED HISTORIES');\r\n      const unSyncedHistories = this.getUnsyncedHistories(storedTasks);\r\n      // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, GOT UNSYNCED HISTORIES');\r\n\r\n      if (unSyncedHistories != null && unSyncedHistories.length > 0) {\r\n        // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, SYNC UNSYNCED HISTORIES');\r\n        if (await this.syncUnsyncedHistories(unSyncedHistories) === false) {\r\n          success = false;\r\n        }\r\n        // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, SYNC UNSYNCED HISTORIES DONE');\r\n      }\r\n    }\r\n\r\n    // UNSENT GROUPS\r\n    // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, GETTING GROUPS 1');\r\n    let storedGroups = await this.local.getGroups(true);\r\n    // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, GOT GROUPS 1');\r\n    if (storedGroups != null) {\r\n      const unSentGroups = this.getUnsentGroups(storedGroups);\r\n\r\n      if (unSentGroups != null && unSentGroups.length > 0) {\r\n        // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, SEND UNSENT GROUPS');\r\n        if (await this.sendUnsentGroups(unSentGroups) === false) {\r\n          success = false;\r\n        }\r\n        // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, SEND UNSENT GROUPS DONE');\r\n      }\r\n    }\r\n\r\n    // UNSYNCED GROUPS\r\n    this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, GETTING GROUPS 2');\r\n    storedGroups = await this.local.getGroups(true);\r\n    this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, GOT GROUPS 2');\r\n    if (storedGroups != null) {\r\n      const unSyncedGroups = this.getUnsyncedGroups(storedGroups);\r\n\r\n      console.log('UNSYNCED GROUPS', unSyncedGroups);\r\n\r\n      if (unSyncedGroups != null && unSyncedGroups.length > 0) {\r\n        this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, SYNC UNSYNCED GROUPS');\r\n        if (await this.syncUnsyncedGroups(unSyncedGroups) === false) {\r\n          success = false;\r\n        }\r\n        // this.logger.logDebug('%% CHECK FOR UNSYNCHRONIZED, SYNC UNSYNCED GROUPS DONE');\r\n      }\r\n    }\r\n\r\n    // this.logger.logDebug('%% ENDING CHECKFORUNSYNCHRONIZED, UNLOCKING');\r\n    // this.logger.logEvent('ending CheckForUnsynchronize');\r\n\r\n    LocalStorageService.currentlyUsed = false;\r\n\r\n    if (success === true) {\r\n      DataSyncServerService.SyncRequired = false;\r\n      this.logger.logDebug('%% SERVER SYNC COMPLETED, LOCKING');\r\n      this.eventService.emit(new EventData(EventService.EventIds.ServerSyncCompleted, null));\r\n\r\n      // console.log('SYNC NOT REQUIRED ANYMORE');\r\n      return true;\r\n    } else {\r\n      // console.log('SYNC NOT SUCCESSFUL, STILL REQUIRED');\r\n      return false;\r\n    }\r\n\r\n    // this.logger.logDebug('%% ENDING CHECKFORUNSYNCHRONIZED, UNLOCKED');\r\n  }\r\n\r\n  private getUnsentHistories(storedTasks: DTOCalendarTask[]): DTOTaskHistory[] {\r\n    const unSentHistories: DTOTaskHistory[] = [];\r\n    storedTasks.forEach(p => p.Histories.forEach(t => {\r\n      if (t.Sent === false) {\r\n        unSentHistories.push(t);\r\n      }\r\n    }));\r\n\r\n    return unSentHistories;\r\n  }\r\n\r\n  private getUnsyncedHistories(storedTasks: any): any {\r\n    const unSynchedHistories: DTOTaskHistory[] = [];\r\n    storedTasks.forEach(p => p.Histories.forEach(t => {\r\n      if (t.Sent === true && t.Synced === false) {\r\n        unSynchedHistories.push(t);\r\n      }\r\n    }));\r\n\r\n    return unSynchedHistories;\r\n  }\r\n\r\n  private getUnsentGroups(storedGroups: DTOTaskGroup[]): DTOTaskGroup[] {\r\n    const unSentGroups: DTOTaskGroup[] = [];\r\n    storedGroups.forEach(p => {\r\n      if (p.Sent === false) {\r\n        unSentGroups.push(p);\r\n      }\r\n    });\r\n\r\n    return unSentGroups;\r\n  }\r\n\r\n  private getUnsyncedGroups(storedGroups: DTOTaskGroup[]): DTOTaskGroup[] {\r\n    const unSyncedGroups: DTOTaskGroup[] = [];\r\n    storedGroups.forEach(p => {\r\n      if (p.Sent === true && p.Synced === false) {\r\n        unSyncedGroups.push(p);\r\n      }\r\n    });\r\n\r\n    return unSyncedGroups;\r\n  }\r\n\r\n  private async sendUnsentTasks(unSentTasks: DTOCalendarTask[]): Promise<boolean> {\r\n    try {\r\n      /*this.logger.logEvent('sendUnsentTasks', {\r\n        key: 'unSentTasks',\r\n        value: JSON.stringify(unSentTasks)\r\n      });*/\r\n      const calendarTaskIds = await this.apiProvider.insertCalendarTasks(unSentTasks);\r\n\r\n      /*this.logger.logEvent('sendUnsentTasks calendarTaskIds', {\r\n        key: 'calendarTaskIds',\r\n        value: JSON.stringify(calendarTaskIds)\r\n      });*/\r\n\r\n      if (calendarTaskIds != null) {\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        for (const {item, index} of unSentTasks.map((item, index) => ({ item, index }))) {\r\n          await this.setCalendarTaskAsSent(item.CalendarTaskId, true);\r\n        }\r\n\r\n        // this.logger.logEvent('sendUnsentTasks Done');\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      this.logger.logError(error, { key: 'unsentTasks', value: JSON.stringify(unSentTasks)});\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private async syncUnsyncedTasks(unSyncedTasks: DTOCalendarTask[]): Promise<boolean> {\r\n    try {\r\n      /*this.logger.logEvent('syncUnsyncedTasks', {\r\n        key: 'unSyncedTasks',\r\n        value: JSON.stringify(unSyncedTasks)\r\n      });*/\r\n      const success = await this.apiProvider.updateCalendarTasks(unSyncedTasks);\r\n      if (success) {\r\n        for (const history of unSyncedTasks) {\r\n          await this.setCalendarTaskAsSynced(history.CalendarTaskId);\r\n        }\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      this.logger.logError(error, { key: 'unSyncedTasks', value: JSON.stringify(unSyncedTasks)});\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private async sendUnsentHistories(unSentHistories: DTOTaskHistory[]): Promise<boolean> {\r\n    try {\r\n      this.logger.logEvent('sendUnsentHistories', {\r\n        key: 'unSentHistories',\r\n        value: JSON.stringify(unSentHistories)\r\n      });\r\n\r\n      // this.logger.logDebug('sending unsent histories');\r\n      const taskHistoryIds = await this.apiProvider.insertTaskHistories(unSentHistories);\r\n      // this.logger.logDebug('taskHistoryIds', JSON.stringify(taskHistoryIds));\r\n      if (taskHistoryIds != null) {\r\n        for (const history of unSentHistories) {\r\n          await this.setTaskHistoryAsSent(history.CalendarTaskId,\r\n                                          history.TaskHistoryId);\r\n        }\r\n      } else {\r\n        this.logger.logEvent('sendUnsentHistories FAILURE (taskHistoryIds == null)', {\r\n          key: 'history',\r\n          value: JSON.stringify(history)\r\n        });\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      this.logger.logError(error, { key: 'unSentHistories', value: JSON.stringify(unSentHistories)});\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private async syncUnsyncedHistories(unSyncedHistories: DTOTaskHistory[]): Promise<boolean> {\r\n    try {\r\n      this.logger.logEvent('syncUnsyncedHistories', {\r\n        key: 'syncUnsyncedHistories',\r\n        value: JSON.stringify(unSyncedHistories)\r\n      });\r\n      const success = await this.apiProvider.updateTaskHistories(unSyncedHistories);\r\n      if (success) {\r\n        for (const history of unSyncedHistories) {\r\n          /*this.logger.logEvent('syncUnsyncedHistories success', {\r\n            key: 'history',\r\n            value: JSON.stringify(history)\r\n          });*/\r\n          await this.setTaskHistoryAsSynced(history.CalendarTaskId, history.TaskHistoryId);\r\n        }\r\n      } else {\r\n        this.logger.logEvent('syncUnsyncedHistories FAILURE (success==false)', {\r\n          key: 'history',\r\n          value: JSON.stringify(history)\r\n        });\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      this.logger.logError(error, { key: 'unSyncedHistories', value: JSON.stringify(unSyncedHistories)});\r\n\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private async sendUnsentGroups(unSentGroups: DTOTaskGroup[]): Promise<boolean> {\r\n    try {\r\n      /*this.logger.logEvent('unSentGroups', {\r\n        key: 'unSentGroups',\r\n        value: JSON.stringify(unSentGroups)\r\n      });*/\r\n\r\n      let success = true;\r\n      for (const group of unSentGroups) {\r\n        // console.log('API INSERT GROUP', group);\r\n        if (await this.apiProvider.insertGroup(group) === false) {\r\n          this.logger.logError(new Error('Unable to send group'),\r\n                           { key: 'transaction', value: JSON.stringify(group)});\r\n          success = false;\r\n        }\r\n      }\r\n\r\n      if (success === true) {\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        for (const {item, index} of unSentGroups.map((item, index) => ({ item, index }))) {\r\n          await this.setGroupAsSent(item.GroupId);\r\n        }\r\n\r\n        // this.logger.logEvent('sendUnsentGroups Done');\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      this.logger.logError(error, { key: 'sendUnsentGroups', value: JSON.stringify(unSentGroups)});\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private async syncUnsyncedGroups(unSyncedGroups: DTOTaskGroup[]): Promise<boolean> {\r\n    try {\r\n      console.log('syncUnsyncedGroups');\r\n\r\n      this.logger.logEvent('unSyncedGroups', {\r\n        key: 'unSyncedGroups',\r\n        value: JSON.stringify(unSyncedGroups)\r\n      });\r\n\r\n      let success = true;\r\n      for (const group of unSyncedGroups) {\r\n        if (await this.apiProvider.updateGroup(group) === false) {\r\n          // TODO : Add error\r\n          this.logger.logError(new Error('Unable to sync group'),\r\n                               { key: 'transaction', value: JSON.stringify(group)});\r\n          success = false;\r\n        }\r\n      }\r\n\r\n      if (success === true) {\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        for (const {item, index} of unSyncedGroups.map((item, index) => ({ item, index }))) {\r\n          await this.setGroupAsSynced(item.GroupId);\r\n        }\r\n\r\n        // this.logger.logEvent('syncUnsyncedGroups Done');\r\n      }\r\n\r\n      return true;\r\n    } catch (error) {\r\n      this.logger.logError(error, { key: 'syncUnsyncedGroups', value: JSON.stringify(unSyncedGroups)});\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async setCalendarTaskAsSent(oldCalendarTaskId: string, alreadyLocked: boolean = false): Promise<void> {\r\n    // console.log('oldtaskid vs new', oldCalendarTaskId, newCalendarTaskId);\r\n    // TODO: Check if we can get this from local instead\r\n    const task = this.calendarTaskService.getTask(oldCalendarTaskId);\r\n    if (task == null) {\r\n      this.logger.logError(new Error('Unable to find calendar task index while setting as sent 2'), {\r\n        key: 'allTasks',\r\n        value: JSON.stringify(this.calendarTaskService.getAllTasks())\r\n      });\r\n      throw new CalendarTaskNotFoundError('Unable to find calendar task index while setting as sent 3');\r\n    }\r\n\r\n    task.Synced = true;\r\n    task.Sent = true;\r\n\r\n    // console.log('KKKKKKKKKK Updating date for task', task.Name);\r\n    await this.updateLastActivityDateFromDate(task.UpdateDate, alreadyLocked);\r\n\r\n    await this.local.updateSyncedCalendarTask(task.toDTO(), alreadyLocked);\r\n  }\r\n\r\n  private async updateLastActivityDateFromDate(updateDate: Date, alreadyLocked: boolean): Promise<void> {\r\n    if (updateDate == null) {\r\n      this.logger.logDebug('Update date is null');\r\n      updateDate = new Date();\r\n    }\r\n\r\n    if (UserService.currentUser.LastActivityDate.getTime() < updateDate.getTime()) {\r\n      // console.log('XXXXXXXXX UPDATE LAST ACTIVITY DATE', updateDate);\r\n      this.logger.logDebug('Last activity date updated : old = ' + UserService.currentUser.LastActivityDate.toISOString());\r\n      this.logger.logDebug('Last activity date updated : new = ' + updateDate.toISOString());\r\n      UserService.currentUser.LastActivityDate = updateDate;\r\n      await this.local.setUser(DTOUser.FromUser(UserService.currentUser), alreadyLocked);\r\n      // Save local ?\r\n    }\r\n  }\r\n\r\n  public async setCalendarTaskAsSynced(calendarTaskId: string): Promise<void> {\r\n    // TODO: Check if we can get this from local instead\r\n    const task = this.calendarTaskService.getTask(calendarTaskId);\r\n    if (task == null) {\r\n      this.logger.logError(new Error('Unable to find calendar task index while setting as synced'), {\r\n        key: 'allTasks',\r\n        value: JSON.stringify(this.calendarTaskService.getAllTasks())\r\n      });\r\n      throw new CalendarTaskNotFoundError('Unable to find calendar task index while setting as synced');\r\n    }\r\n\r\n    task.Synced = true;\r\n\r\n    // console.log('KKKKKKKKKK Updating date for calendarTask', task.Name);\r\n    await this.updateLastActivityDateFromDate(task.UpdateDate, true);\r\n\r\n    await this.local.updateSyncedCalendarTask(task.toDTO(), true);\r\n  }\r\n\r\n  public async setTaskHistoryAsSent(calendarTaskId: string,\r\n                                    historyId: string): Promise<void> {\r\n    // TODO: Check if we can get this from local instead\r\n    // this.logger.logDebug('## SET TASK HISTORY AS SENT ', calendarTaskId + ' ' + historyId);\r\n    const task = this.calendarTaskService.getTask(calendarTaskId);\r\n    // this.logger.logDebug('## SET TASK HISTORY GOT TASK ', task.Name);\r\n\r\n    const historyIndex = task.Histories.findIndex(p => p.TaskHistoryId === historyId);\r\n\r\n    /*const count = task.Histories.filter(p => p.TaskHistoryId === historyId);\r\n    if (count.length > 1) {\r\n      this.logger.logDebug('@@@@ MORE THAN ONE TASK =  ', JSON.stringify(count));\r\n    }*/\r\n\r\n    // this.logger.logDebug('## SET TASK HISTORY INDEX =  ', JSON.stringify(historyIndex));\r\n\r\n    if (historyIndex === -1) {\r\n\r\n      this.logger.logDebug('## Unable to find task history while setting as sent, HistoriesIds = ',\r\n                           JSON.stringify(task.Histories.map(p => p.TaskHistoryId)));\r\n\r\n      // console.log('Unable to find task history while setting as sent, presumably because its only in localstorage');\r\n      this.logger.logError(new Error('Unable to find task history while setting as sent'), {\r\n        key: 'task.Histories',\r\n        value: JSON.stringify(task.Histories)\r\n      });\r\n      this.logger.logError(new Error('Unable to find task history while setting as sent2'), {\r\n        key: 'ids',\r\n        value: 'calendarTaskId=' + calendarTaskId + ', historyId=' + historyId\r\n      });\r\n      throw new TaskHistoryNotFoundError('Unable to find task history while setting as sent');\r\n    }\r\n\r\n    const history = task.Histories[historyIndex]; // TODO : use map\r\n    history.Synced = true;\r\n    history.Sent = true;\r\n\r\n    // console.log('KKKKKKKKKK Updating date for history', history);\r\n    await this.updateLastActivityDateFromDate(history.UpdateDate, true);\r\n\r\n    // console.log('(SET AS SENT 1)', history);\r\n    // this.logger.logDebug('## SET TASK HISTORY AS SENT UPDATING', calendarTaskId, historyId);\r\n    await this.local.updateSyncedTaskHistory(history.toDTO(), true);\r\n    // this.logger.logDebug('## SET TASK HISTORY AS SENT UPDATED', calendarTaskId, historyId);\r\n  }\r\n\r\n  public async setTaskHistoryAsSynced(calendarTaskId: string,\r\n                                      newHistoryId: string): Promise<void> {\r\n    // TODO: Check if we can get this from local instead\r\n    // console.log('setTaskHistoryAsSynced', calendarTaskId, newHistoryId);\r\n    const task = this.calendarTaskService.getTask(calendarTaskId);\r\n\r\n    const historyIndex = task.Histories.findIndex(p => p.TaskHistoryId === newHistoryId); // TODO: USE MAP\r\n    if (historyIndex === -1) {\r\n      this.logger.logError(new Error('Unable to find task history while setting as synced'),\r\n                           {\r\n                             key: 'task.Histories',\r\n                             value: JSON.stringify(task.Histories)\r\n                           });\r\n      this.logger.logError(new Error('Unable to find task history while setting as synced2'),\r\n                           {\r\n                             key: 'newHistoryId',\r\n                             value: JSON.stringify(newHistoryId)\r\n                           });\r\n    }\r\n\r\n    const history = task.Histories[historyIndex]; // TODO: Use MAP\r\n    history.Synced = true;\r\n\r\n    // console.log('KKKKKKKKKK Updating date for history', history);\r\n    await this.updateLastActivityDateFromDate(history.UpdateDate, true);\r\n\r\n    await this.local.updateSyncedTaskHistory(history.toDTO(), true);\r\n  }\r\n\r\n  public async setGroupAsSent(groupId: string): Promise<void> {\r\n    // console.log('SET GROUP AS SENT', groupId);\r\n    // console.log('oldtaskid vs new', oldCalendarTaskId, newCalendarTaskId);\r\n    // TODO: Check if we can get this from local instead\r\n    const allGroups = this.calendarTaskService.allGroups;\r\n    const taskIndex = allGroups.findIndex(p => p.GroupId === groupId);\r\n    if (taskIndex === -1) {\r\n      this.logger.logError(new Error('Unable to find group index while setting as sent 2'), {\r\n        key: 'allGroups',\r\n        value: JSON.stringify(allGroups)\r\n      });\r\n      throw new GroupNotFoundError('Unable to find group index while setting as sent 3');\r\n    }\r\n\r\n    const group = allGroups[taskIndex];\r\n    group.Synced = true;\r\n    group.Sent = true;\r\n\r\n    // console.log('KKKKKKKKKK Updating date for group', group.Name);\r\n    await this.updateLastActivityDateFromDate(group.UpdateDate, true);\r\n\r\n    await this.local.updateSyncedGroup(group.toDTO());\r\n  }\r\n\r\n  public async setGroupAsSynced(groupId: string): Promise<void> {\r\n    // console.log('SET GROUP AS SYNCED', groupId, this.calendarTaskService.allGroups);\r\n    // console.log('oldtaskid vs new', oldCalendarTaskId, newCalendarTaskId);\r\n    // TODO: Check if we can get this from local instead\r\n    const allGroups = this.calendarTaskService.allGroups;\r\n    const taskIndex = allGroups.findIndex(p => p.GroupId === groupId);\r\n    if (taskIndex === -1) {\r\n      this.logger.logError(new Error('Unable to find group index while setting as sent 2'), {\r\n        key: 'allGroups',\r\n        value: JSON.stringify(allGroups)\r\n      });\r\n      throw new GroupNotFoundError('Unable to find group index while setting as sent 3');\r\n    }\r\n\r\n    const group = allGroups[taskIndex];\r\n    group.Synced = true;\r\n\r\n    // console.log('KKKKKKKKKK Updating date for group', group.Name);\r\n    await this.updateLastActivityDateFromDate(group.UpdateDate, true);\r\n\r\n    await this.local.updateGroup(group.toDTO(), true);\r\n  }\r\n\r\n  public async processQueue(): Promise<boolean> {\r\n    console.log('PROCESSING QUEUE SERVER SYNC');\r\n    if (this.calendarTaskService.getAllTasks().length > 0) {\r\n      console.log('CHECK FOR EVENTS : CONFIGS', (await this.userService.getCurrentUser()).Config);\r\n      // console.log('ENABLE7');\r\n      if (this.userService.getConfig(UserConfig.EnableCloudSyncKey) === true) {\r\n        const status = await this.network.getCurrentNetworkStatus();\r\n\r\n        if (status === ConnectionStatus.Online) {\r\n          // console.log('NETWORK STATUS ONLINE', status);\r\n          return await this.processUnsynchronized();\r\n        } else {\r\n          // console.log('DONT CHECK FOR EVENTS 3');\r\n        }\r\n      } else {\r\n        // console.log('DONT CHECK FOR EVENTS 2');\r\n      }\r\n    } else {\r\n      // console.log('DONT CHECK FOR EVENTS 1');\r\n      DataSyncServerService.SyncRequired = false;\r\n    }\r\n\r\n    // console.log('QUEUE PROCESSED SYNC SERVER');\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Reloads all groups and tasks from local or server.\r\n   * Used at the start of the application or when hitting refresh manually (for dev only, we can't put this in production)\r\n   */\r\n  public async reloadAllGroupsAndTasksServer(cancellationToken: CancellationToken,\r\n                                             lastActivityDate: Date = null,\r\n                                             apiUserConfigs: UserConfig = null): Promise<void> {\r\n    try {\r\n      console.log(\"reloading started\");\r\n\r\n      DataSyncServerService.GetLatestStarted = true;\r\n      DataSyncServerService.GetLatestInvalid = false;\r\n\r\n      let dtoTasks: DTOCalendarTask[] = [];\r\n      let dtoGroups: DTOTaskGroup[] = [];\r\n\r\n      dtoGroups = await this.calendarTaskService.getAllGroupsFromServer();\r\n\r\n      if (cancellationToken.cancelRequested === true) {\r\n        console.log('CANCELATION TOKEN CANCEL 1');\r\n        return;\r\n      }\r\n\r\n      dtoTasks = await this.calendarTaskService.getAllTodoFromServer((await this.calendarTaskService.getTaskListDTORequest()));\r\n      if (dtoTasks == null) {\r\n        this.logger.logError(new Error('Unable to reload tasks'));\r\n        return throwError('Unable to reload tasks').toPromise();\r\n      }\r\n\r\n      console.log(\"got tasks\");\r\n\r\n      // Check if everything is synced or else abort refresh to avoid conflict\r\n      if (await this.CanEndRefresh() === false) {\r\n        this.logger.logDebug('XXXXXXXXXXXX CANT REFRESH ABORT :( :(');\r\n        DataSyncServerService.GetLatestStarted = false;\r\n        DataSyncServerService.GetLatestRequired = true;\r\n        return;\r\n      } else {\r\n        if (lastActivityDate != null) {\r\n          this.logger.logDebug('XXXXXXXXXXXX CAN REFRESH :) :)', lastActivityDate.toISOString());\r\n        } else {\r\n          this.logger.logDebug('XXXXXXXXXXXX CAN REFRESH :) :)');\r\n        }\r\n      }\r\n\r\n      // TODO : lock database for this operation, save to local\r\n      // TODO : Test\r\n      const loading = await this.loadingController.create({\r\n        message: this.translate.instant('local-storage.refreshing-data'),\r\n      });\r\n      // await this.loadingController.dismiss(null, null, 'reload-server');\r\n      await loading.present();\r\n\r\n      await this.local.setGroupsAndTasks(dtoGroups, dtoTasks);\r\n      await this.calendarTaskService.processAndAssignAllGroupsAndTasks(dtoTasks, dtoGroups);\r\n\r\n      if (lastActivityDate != null) {\r\n        UserService.currentUser.LastActivityDate = lastActivityDate;\r\n\r\n        if (apiUserConfigs != null) {\r\n          // console.log('API CONFIGS : ', apiUserConfigs);\r\n          UserService.currentUser.Config = apiUserConfigs;\r\n        }\r\n\r\n        await this.local.setUser(DTOUser.FromUser(UserService.currentUser), false);\r\n      }\r\n\r\n      await loading.dismiss();\r\n\r\n      DataSyncServerService.GetLatestStarted = false;\r\n      DataSyncServerService.GetLatestRequired = false;\r\n      DataSyncServerService.GetLatestInvalid = false;\r\n      this.logger.logDebug('XXXXXXXXXXXX REFRESH COMPLETED');\r\n    } catch (error) {\r\n      DataSyncServerService.GetLatestStarted = false;\r\n      DataSyncServerService.GetLatestRequired = true;\r\n      DataSyncServerService.GetLatestRequiredReason = 'Reload failed';\r\n      // console.log('Error refreshing all', error);\r\n      this.logger.logError(error);\r\n    }\r\n  }\r\n\r\n  public async CanStartRefresh(): Promise<boolean> {\r\n    /*console.log('CAN REFRESH : ',\r\n                await this.allDataIsSynced(),\r\n                DataSyncServerService.SyncRequired,\r\n                DataSyncServerService.ApplicationLoaded);*/\r\n    return await this.allDataIsSynced() === true &&\r\n           DataSyncServerService.SyncRequired === false &&\r\n           DataSyncServerService.GetLatestStarted === false &&\r\n           DataSyncServerService.ApplicationLoaded === true;\r\n  }\r\n\r\n  public async CanEndRefresh(): Promise<boolean> {\r\n    // console.log('CAN REFRESH : ', await this.allDataIsSynced(),\r\n    // DataSyncServerService.SyncRequired, DataSyncServerService.GetLatestInvalid);\r\n    return await this.allDataIsSynced() === true &&\r\n           DataSyncServerService.SyncRequired === false &&\r\n           DataSyncServerService.GetLatestInvalid === false;\r\n  }\r\n\r\n  public async GetLatest(cancellationToken: CancellationToken): Promise<boolean> {\r\n    // console.log('GETLATEST');\r\n    const ready = await this.userService.awaitUserReady();\r\n    // console.log('USER IS READY', ready);\r\n\r\n    if (this.userService.getConfig(UserConfig.EnableCloudSyncKey) === true) { // Only sync if cloud is enabled\r\n      // console.log('SYNC ENABLED');\r\n      if (DataSyncServerService.GetLatestRequired === true) {\r\n        this.logger.logDebug('GET LATEST REQUIRED', DataSyncServerService.GetLatestRequiredReason);\r\n        // console.log('GETTING USER : ', UserService.currentUserId, new Date());\r\n        const DTOapiUser = await this.apiProvider.getUser(UserService.currentUserId);\r\n        const apiUser = DTOUser.ToUser(DTOapiUser);\r\n        // console.log('USER FROM API : ', apiUser);\r\n        if (apiUser == null) { // if account not yet created\r\n          return true;\r\n        }\r\n        if (DataSyncServerService.SyncRequired === true) {\r\n          return true;\r\n        }\r\n        if (cancellationToken.cancelRequested === true) {\r\n          console.log('CANCELATION TOKEN CANCEL 2');\r\n          return true;\r\n        }\r\n\r\n        // if (apiUser.LastActivityDate == null) {\r\n          // console.log('ACTIVITY DATE = NULL');\r\n          // user.LastActivityDate = (DateUtils.YearAgo()).toISOString();\r\n        // }\r\n\r\n        if (!DateUtils.dateTimeAreEqual(apiUser.LastActivityDate, UserService.currentUser.LastActivityDate) &&\r\n            DataSyncServerService.SyncRequired === false) {\r\n          this.logger.logDebug('GET LATEST REQUIRED USER NOT SYNCED');\r\n\r\n          if (UserService.currentUser.LastActivityDate == null) {\r\n            UserService.currentUser.LastActivityDate = DateUtils.YearAgo();\r\n          }\r\n\r\n          DataSyncServerService.GetLatestRequired = true;\r\n          DataSyncServerService.GetLatestRequiredReason = 'Last activity dates : ' +\r\n                                                          apiUser.LastActivityDate.toISOString() +\r\n                                                          ' ,' +\r\n                                                          UserService.currentUser.LastActivityDate.toISOString();\r\n\r\n          this.logger.logDebug('Users not synced : ' + DataSyncServerService.GetLatestRequiredReason);\r\n          // this.eventService.emit(new EventData(EventService.EventIds.ReloadFromServer, null));\r\n\r\n          if (await this.CanStartRefresh() === true) {\r\n            this.logger.logDebug('Can start refresh, STARTING REFRESH 2');\r\n            await this.reloadAllGroupsAndTasksServer(cancellationToken,\r\n                                                     apiUser.LastActivityDate,\r\n                                                     apiUser.Config);\r\n          } else {\r\n            this.logger.logDebug('Unable to refresh, retrying later');\r\n          }\r\n        } else {\r\n          this.logger.logDebug('USER SYNCED');\r\n          DataSyncServerService.GetLatestRequired = false;\r\n        }\r\n      } else {\r\n        this.logger.logDebug('GET LATEST NOT REQUIRED');\r\n      }\r\n    } else {\r\n      // console.log('SYNC NOT ENABLED');\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DataSyncServerService } from './data-sync-server-service';\r\nimport ThreadUtils from '../shared/thread.utils';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IDataSyncLocalService } from '../interfaces/i-data-sync-local-service';\r\n//import { NotificationService } from './notification.service';\r\nimport { ILogger } from '../interfaces/i-logger';\r\nimport DateUtils from '../shared/date-utils';\r\nimport { CalendarTaskService } from './calendar-task.service';\r\nimport { TaskHistoryService } from './task-history.service';\r\nimport { TaskHistory } from '../models/Core/task-history';\r\nimport { UserService } from './user.service';\r\nimport { IUserService } from '../interfaces/i-user-service';\r\nimport { UserConfig } from '../models/Core/user-config';\r\nimport { ApiHttpError } from '../models/Exceptions/ApiHttpError';\r\nimport { CancellationToken } from './data-sync-2.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataSyncService {\r\n\r\n  // private RETRY_SECONDS: number = environment.resyncSeconds;\r\n  private API_HTTP_ERROR_COUNT: number = 0;\r\n  private API_HTTP_ERROR_DATE: Date;\r\n\r\n  constructor(private localDataSync: IDataSyncLocalService,\r\n              private serverDataSync: DataSyncServerService,\r\n              //private notificationService: NotificationService,\r\n              private logger: ILogger,\r\n              private calendarTaskService: CalendarTaskService,\r\n              private historyService: TaskHistoryService,\r\n              private userService: IUserService) { }\r\n\r\n  public async checkForSyncRepeat(): Promise<void> {\r\n    while (true) {\r\n      try {\r\n        // console.log('CHECKFORSINC1');\r\n        await this.localDataSync.processQueue();\r\n\r\n        if (this.canProcessServerRequest()) {\r\n          if (await this.serverDataSync.processQueue() === true) {\r\n            // console.log('processqueue successful');\r\n            this.API_HTTP_ERROR_COUNT = 0;\r\n          }\r\n        }\r\n\r\n        // console.log('CHECKFORSINC2');\r\n        await this.localDataSync.processQueue();\r\n\r\n        if (this.canProcessServerRequest()) {\r\n          if (await this.serverDataSync.GetLatest(new CancellationToken()) === true) {\r\n            // console.log('get latest successful');\r\n            this.API_HTTP_ERROR_COUNT = 0;\r\n          }\r\n        }\r\n\r\n        // console.log('CHECKFORSINC3');\r\n\r\n        await this.localDataSync.processQueue();\r\n        //await this.notificationService.refreshNotifications(); // TODO CAPACITOR\r\n        // await this.processAutoSkip();\r\n      } catch (error) {\r\n\r\n        // HANDLE API ERRORS\r\n        if (error instanceof ApiHttpError) {\r\n          // console.log('INSTANCE OF API ERROR');\r\n          this.API_HTTP_ERROR_COUNT ++;\r\n          this.API_HTTP_ERROR_DATE = new Date();\r\n        }\r\n\r\n        this.logger.logDebug('Error checking for sync repeat');\r\n        this.logger.logError(error);\r\n      } finally {\r\n        await ThreadUtils.sleep(1000);\r\n      }\r\n    }\r\n  }\r\n\r\n  private canProcessServerRequest(): boolean {\r\n    const minimumTimeWait = this.getMinimumTimeWait();\r\n    if (this.API_HTTP_ERROR_COUNT > 0) {\r\n      const timeSinceLastError = DateUtils.getMillisecondsSince(this.API_HTTP_ERROR_DATE);\r\n      if (timeSinceLastError > minimumTimeWait) {\r\n        return true;\r\n      } else {\r\n        // console.log('CANNOT PROCESS SERVER REQUEST, NEED TO WAIT', minimumTimeWait);\r\n        return false;\r\n      }\r\n    } else {\r\n      // console.log('No Error');\r\n      return true;\r\n    }\r\n  }\r\n\r\n  private getMinimumTimeWait(): number {\r\n    const maxMinutesWait = 1;\r\n    const maxTimeWait = 1000 * 60 * maxMinutesWait;\r\n    const timeWait = Math.pow(2, this.API_HTTP_ERROR_COUNT) * 1000;\r\n    // console.log('timewait = ', timeWait);\r\n    return Math.min(maxTimeWait, timeWait);\r\n  }\r\n\r\n  // Wait for feature to be requested\r\n  public async processAutoSkip() {\r\n    if (this.userService.getConfig(UserConfig.AutoSkipAfter2DaysId) === true) {\r\n      // HAS TO KNOW IF ITS DONE ALREADY OR NOT\r\n      // console.log('skipping config is true');\r\n      const lastUpdateDate = new Date(this.userService.getConfig(UserConfig.AutoSkipAfter2DaysLastSkipDateId));\r\n      // console.log('Last Skip Date = ', lastUpdateDate);\r\n      const twoDaysAgo = DateUtils.AddDays(DateUtils.Today(), -2);\r\n\r\n      if (lastUpdateDate == null || DateUtils.datesAreEqual(lastUpdateDate, DateUtils.Today()) === false) {\r\n        // TODO : Not going to work if person doesnt use the app\r\n        // TODO : SHOW SKIP\r\n        // console.log('starting to process skip 2 days ago');\r\n        for (const group of this.calendarTaskService.allGroups) {\r\n          for (const task of group.Tasks) {\r\n            if (this.calendarTaskService.isShown(task, twoDaysAgo.getDay(), twoDaysAgo) &&\r\n                this.calendarTaskService.isDoneOrSkipped(task, twoDaysAgo) === false) {\r\n              // console.log('Skipping', task.Name);\r\n              const calendarTaskHistory: TaskHistory = await TaskHistory.createNew(null,\r\n                                                                                  false,\r\n                                                                                  true,\r\n                                                                                  new Date(),\r\n                                                                                  twoDaysAgo,\r\n                                                                                  task.CalendarTaskId,\r\n                                                                                  UserService.currentUserId);\r\n              // Send event to refresh ui ?\r\n              await this.historyService.insertTaskHistory(calendarTaskHistory);\r\n            }\r\n          }\r\n        }\r\n\r\n        // console.log('finished processing skip 2 days ago');\r\n        this.userService.setConfig(UserConfig.AutoSkipAfter2DaysLastSkipDateId, new Date());\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UserService } from './user.service';\r\nimport DateUtils from '../shared/date-utils';\r\nimport { UserConfig } from '../models/Core/user-config';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DateService {\r\n\r\n  private cachedWorkDates: Map<string, Date> = new Map<string, Date>();\r\n  private cachedEndOfDayTime: string;\r\n  public cachingEnabled: boolean = false;\r\n\r\n  public currentWorkDate: Date = new Date();\r\n\r\n  private weekdays = [\r\n    'create-task.sunday-abbreviation',\r\n    'create-task.monday-abbreviation',\r\n    'create-task.tuesday-abbreviation',\r\n    'create-task.wednesday-abbreviation',\r\n    'create-task.thursday-abbreviation',\r\n    'create-task.friday-abbreviation',\r\n    'create-task.saturday-abbreviation'\r\n  ];\r\n\r\n  private monthAbbrs = [\r\n    'task-list.january-abbreviation',\r\n    'task-list.february-abbreviation',\r\n    'task-list.march-abbreviation',\r\n    'task-list.april-abbreviation',\r\n    'task-list.may-abbreviation',\r\n    'task-list.june-abbreviation',\r\n    'task-list.july-abbreviation',\r\n    'task-list.august-abbreviation',\r\n    'task-list.september-abbreviation',\r\n    'task-list.october-abbreviation',\r\n    'task-list.november-abbreviation',\r\n    'task-list.december-abbreviation',\r\n  ];\r\n\r\n  private weekAbbrs = [\r\n    'task-list.sunday-abbreviation',\r\n    'task-list.monday-abbreviation',\r\n    'task-list.tuesday-abbreviation',\r\n    'task-list.wednesday-abbreviation',\r\n    'task-list.thursday-abbreviation',\r\n    'task-list.friday-abbreviation',\r\n    'task-list.saturday-abbreviation'\r\n  ];\r\n\r\n  constructor(private userService: UserService,\r\n              private translate: TranslateService) { }\r\n\r\n  public GetMonthAbbrs(): string[] {\r\n    return [\r\n      this.translate.instant(this.monthAbbrs[0]),\r\n      this.translate.instant(this.monthAbbrs[1]),\r\n      this.translate.instant(this.monthAbbrs[2]),\r\n      this.translate.instant(this.monthAbbrs[3]),\r\n      this.translate.instant(this.monthAbbrs[4]),\r\n      this.translate.instant(this.monthAbbrs[5]),\r\n      this.translate.instant(this.monthAbbrs[6]),\r\n      this.translate.instant(this.monthAbbrs[7]),\r\n      this.translate.instant(this.monthAbbrs[8]),\r\n      this.translate.instant(this.monthAbbrs[9]),\r\n      this.translate.instant(this.monthAbbrs[10]),\r\n      this.translate.instant(this.monthAbbrs[11]),\r\n    ];\r\n  }\r\n\r\n  public GetWeekAbbrs(): string[] {\r\n    return [\r\n      this.translate.instant(this.weekAbbrs[0]),\r\n      this.translate.instant(this.weekAbbrs[1]),\r\n      this.translate.instant(this.weekAbbrs[2]),\r\n      this.translate.instant(this.weekAbbrs[3]),\r\n      this.translate.instant(this.weekAbbrs[4]),\r\n      this.translate.instant(this.weekAbbrs[5]),\r\n      this.translate.instant(this.weekAbbrs[6]),\r\n    ];\r\n  }\r\n\r\n  public GetWorkDate(date: Date): Date {\r\n    /*console.log('GetWorkDate Fastest Possible');\r\n    return DateUtils.RemoveHours(new Date());*/\r\n\r\n    let dateSubString: string;\r\n    if (this.cachingEnabled === true) {\r\n      dateSubString = date.toISOString().substring(0, 13);\r\n\r\n      const cachedDate = this.cachedWorkDates.get(dateSubString);\r\n      if (cachedDate != null) {\r\n        // console.log('GetWorkDate from Cache');\r\n        return cachedDate;\r\n      }\r\n    }\r\n\r\n    const result = DateUtils.GetWorkDate(date, this.cachedEndOfDayTime == null ?\r\n                                                 this.cachedEndOfDayTime :\r\n                                                 this.userService.getConfig(UserConfig.EndOfDayTimeKey));\r\n\r\n    if (this.cachingEnabled === true) {\r\n      this.cachedWorkDates.set(dateSubString, result);\r\n    }\r\n\r\n    // console.log('GetWorkDate Regular');\r\n\r\n    return result;\r\n\r\n    /*console.log('GetWorkDate Regular');\r\n    return DateUtils.GetWorkDate(date, this.userService.getUserConfig().EndOfDayTime);*/\r\n  }\r\n\r\n  public ResetCaching(): void {\r\n    this.cachedEndOfDayTime = this.userService.getConfig(UserConfig.EndOfDayTimeKey);\r\n    this.cachedWorkDates.clear();\r\n  }\r\n\r\n  public GetTodayWorkDate(): Date {\r\n    return DateUtils.GetWorkDate(new Date(), this.cachedEndOfDayTime == null ?\r\n                                               this.cachedEndOfDayTime :\r\n                                               this.userService.getConfig(UserConfig.EndOfDayTimeKey));\r\n  }\r\n\r\n  public GetmmddFromMinusDays(minusDays: number, todayWorkDate: Date): string {\r\n    // console.log('getmmdd', minusDays, todayWorkDate, new Date().toISOString().substring(10));\r\n\r\n    const date = DateUtils.AddDays(todayWorkDate,\r\n                                   -1 * minusDays);\r\n\r\n    const ddmm = date.toISOString().slice(5, 10);\r\n\r\n    // const dayAbbr = this.translate.instant(this.weekdays[date.getDay()]);\r\n\r\n    // const result = dayAbbr + ' ' + ddmm;\r\n\r\n    return ddmm;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventService {\r\n\r\n  public static EventIds = class {\r\n    public static NotificationSyncedFalse = 'NotificationSyncedFalse';\r\n    public static ProgressBar = 'ProgressBar';\r\n    public static DateChanged = 'DateChanged';\r\n    public static SkipAllGroup = 'SkipAllGroup';\r\n    public static PostponeAllGroup = 'PostponeAllGroup';\r\n    public static CardReset = 'CardReset';\r\n    public static ToggleDragAndDrop = 'ToggleDragAndDrop';\r\n    public static TimerCancel = 'TimerCancel';\r\n    public static TimerComplete = 'TimerComplete';\r\n    public static TimerUnpause = 'TimerUnpause';\r\n    public static TimerResume = 'TimerResume';\r\n    public static TimerStart = 'TimerStart';\r\n    public static TimerPause = 'TimerPause';\r\n    public static ShowStats = 'ShowStats';\r\n    public static LanguageChanged = 'LanguageChanged';\r\n    public static Walkthrough = 'Walkthrough';\r\n    public static Resume = 'Resume';\r\n    public static HideStats = 'HideStats';\r\n    public static SkipAll = 'SkipAll';\r\n    public static SyncRequired = 'SyncRequired';\r\n    public static OnStartSync = 'OnStartSync';\r\n    public static SkipTask = 'SkipTask';\r\n    public static PostponeTask = 'PostponeTask';\r\n    public static DeleteTask = 'DeleteTask';\r\n    // public static EnableNotifications = 'DeleteTask';\r\n    public static LocalSyncCompleted = 'LocalSyncCompleted';\r\n    public static ServerSyncCompleted = 'ServerSyncCompleted';\r\n  };\r\n\r\n  private subject$ = new Subject();\r\n\r\n  constructor() { }\r\n\r\n  public emit(event: EventData) {\r\n    this.subject$.next(event);\r\n  }\r\n\r\n  public on(eventName: string, action: any): Subscription {\r\n    return this.subject$.pipe(\r\n      filter( (e: EventData) => e.name === eventName),\r\n      map( (e: EventData) => e.value)).subscribe(action);\r\n  }\r\n}\r\n\r\nexport class EventData {\r\n  name: string;\r\n  value: any;\r\n  constructor(name, value) {\r\n      this.name = name;\r\n      this.value = value;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FireworksService {\r\n\r\n  constructor() { }\r\n\r\n  public async GenerateFireworks() {\r\n    /*const fx = require('fireworks');*/\r\n    // console.log('fireworks', fx);\r\n\r\n    /*for (let i = 0 ; i < 10 ; i++) {\r\n      fx.fireworks({\r\n        x: (Math.random() * window.innerWidth) * 0.8 + window.innerWidth * 0.1,\r\n        y: (Math.random() * window.innerHeight) * 0.8 + window.innerHeight * 0.1,\r\n        colors: ['#4CAF50', '#2f80ed', '#D1D1D1'],\r\n        count: 10\r\n      });\r\n      await ThreadUtils.sleep(200);\r\n    }*/\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { DTOCalendarTask } from '../models/DTO/dto-calendar-task';\r\nimport { Storage } from '@ionic/storage';\r\nimport { DTOTaskHistory } from '../models/DTO/dto-task-history';\r\nimport { DatabaseLockedError } from '../models/Exceptions/DatabaseLockedError';\r\nimport { ILogger } from '../interfaces/i-logger';\r\nimport { ILocalStorageService } from '../interfaces/i-local-storage-service';\r\nimport ThreadUtils from '../shared/thread.utils';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { DTOUser } from '../models/DTO/dto-user';\r\nimport { DTOUserConfig } from '../models/DTO/dto-user-config';\r\nimport { DTOTaskTimer } from '../models/DTO/dto-timer';\r\nimport { DTOTaskGroup } from '../models/DTO/dto-task-group';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LocalStorageService implements ILocalStorageService {\r\n\r\n  public static currentlyUsed: boolean = false;\r\n  // TODO: Use non-static variable. For now it's assignation gets lost because of scoping issues\r\n  public static TIMER_KEY: string;\r\n  public static CALENDAR_TASK_KEY: string;\r\n  public static LAST_READ_CHANGELOG_VERSION_KEY: string = 'lastReadChangelogVersion';\r\n  public static USER_KEY: string = 'user';\r\n  public static GROUPS_KEY: string;\r\n  public static LastUsedDatabaseReason: string;\r\n\r\n  public Initialized: boolean = false;\r\n\r\n  constructor(private storage: Storage,\r\n              private logger: ILogger,\r\n              private translate: TranslateService) { }\r\n\r\n  public async insertCalendarTasks(tasks: DTOCalendarTask[]): Promise<any> {\r\n    try {\r\n      // this.logger.logDebug('{inserting task locally, LOCKING}', new Date().toISOString());\r\n      await this.lockLocalStorage(false, 'insertCalendarTasks');\r\n      // this.logger.logDebug('{inserting task locally, LOCKED, GETTING TASKS}', new Date().toISOString());\r\n      LocalStorageService.LastUsedDatabaseReason = 'insertCalendarTasks' + (new Date()).toISOString();\r\n\r\n      const localTasks = await this.getCalendarTasks(true);\r\n      // this.logger.logDebug('{inserting task locally, GOT TASKS, SETTING TASKS}', new Date().toISOString());\r\n      tasks.forEach(p => localTasks.push(p));\r\n      const result = await this.setCalendarTasks(localTasks, true);\r\n      // this.logger.logDebug('{inserting task locally, SET TASKS DONE}', new Date().toISOString());\r\n      return;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('unable to read from local database insertCalendarTasks1 ' + error));\r\n      alert('unable to read from local database 33');\r\n      return;\r\n    } finally {\r\n      // this.logger.logDebug('{insert task FINALLY UNLOCKING}', new Date().toISOString());\r\n      this.unlockLocalStorage(false);\r\n      // this.logger.logDebug('{insert task FINALLY UNLOCKED}', new Date().toISOString());\r\n    }\r\n  }\r\n\r\n  public async insertTaskHistories(histories: DTOTaskHistory[]): Promise<any> {\r\n    try {\r\n      /*this.logger.logDebug('inserting history locally (ATTEMPTING TO LOCK)',\r\n                            JSON.stringify(history),\r\n                            LocalStorageService.LastUsedDatabaseReason);*/\r\n      await this.lockLocalStorage(false, 'insertTaskHistories');\r\n      LocalStorageService.LastUsedDatabaseReason = 'insertTaskHistories_' + (new Date()).toISOString();\r\n\r\n      // this.logger.logDebug('inserting history locally (LOCKED)', JSON.stringify(history));\r\n      const tasks = await this.getUpdatedTasksHistoriesInserted(histories);\r\n      await this.setCalendarTasks(tasks, true);\r\n      // this.logger.logDebug('inserted history locally (UNLOCKING)', JSON.stringify(history));\r\n      return;\r\n    } catch (error) {\r\n      this.logger.logDebug('ERROR insertTaskHistory', JSON.stringify(error));\r\n      alert('unable inserting task histories');\r\n      return;\r\n    } finally {\r\n      this.unlockLocalStorage(false);\r\n    }\r\n  }\r\n\r\n  public async updateTaskHistories(histories: DTOTaskHistory[]): Promise<any> {\r\n    // console.log('updating history locally', history);\r\n    try {\r\n      await this.lockLocalStorage(false, 'updateTaskHistories');\r\n      LocalStorageService.LastUsedDatabaseReason = 'updateTaskHistories' + (new Date()).toISOString();\r\n\r\n      histories.forEach(p => p.Synced = false);\r\n      const tasks = await this.getUpdatedTasksHistoriesUpdated(histories);\r\n      await this.setCalendarTasks(tasks, true);\r\n      return;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('unable to read from local database updateTaskHistories1 ' + error));\r\n      alert('unable to read from local database 77');\r\n      return;\r\n    } finally {\r\n      this.unlockLocalStorage(false);\r\n    }\r\n  }\r\n\r\n  public async insertGroups(groups: DTOTaskGroup[]): Promise<void> {\r\n    // console.log('INSERTING GROUP LOCAL STORAGE', group);\r\n    await this.lockLocalStorage(false, 'setGroups');\r\n    LocalStorageService.LastUsedDatabaseReason = 'setGroups ' + (new Date()).toISOString();\r\n\r\n    try {\r\n      const localGroups = await this.getGroups(true);\r\n      groups.forEach(p => localGroups.push(p));\r\n      await this.setGroups(localGroups, true);\r\n      return;\r\n    } catch (error) {\r\n      // console.error('error');\r\n      this.logger.logError(new Error('unable to set groups in local database'));\r\n      alert('unable to read from local database 122');\r\n      return null;\r\n    } finally {\r\n      this.unlockLocalStorage(false);\r\n    }\r\n  }\r\n\r\n  public async updateGroups(groups: DTOTaskGroup[], alreadyLocked: boolean): Promise<void> {\r\n    // console.log('UPDATING GROUP LOCAL STORAGE', group);\r\n\r\n    if (alreadyLocked === false) {\r\n      await this.lockLocalStorage(false, 'setGroups');\r\n      LocalStorageService.LastUsedDatabaseReason = 'setGroups ' + (new Date()).toISOString();\r\n    }\r\n\r\n    try {\r\n      const localGroups = await this.getGroups(true);\r\n      for (const group of groups) {\r\n        const index = localGroups.findIndex(p => p.GroupId === group.GroupId);\r\n        localGroups[index] = group;\r\n      }\r\n\r\n      await this.setGroups(localGroups, true);\r\n      return;\r\n    } catch (error) {\r\n      // console.error('error');\r\n      this.logger.logError(new Error('unable to set groups in local database'));\r\n      alert('unable to read from local database 133');\r\n      return null;\r\n    } finally {\r\n      if (alreadyLocked === false) {\r\n        this.unlockLocalStorage(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  public async initialize(userId: string): Promise<void> {\r\n    if (userId == null) {\r\n      // console.log('local storage userId is null');\r\n      return;\r\n    }\r\n\r\n    LocalStorageService.CALENDAR_TASK_KEY = String('calendarTasks' + userId);\r\n    LocalStorageService.TIMER_KEY = String('timer' + userId);\r\n    LocalStorageService.GROUPS_KEY = String('group' + userId);\r\n\r\n    try {\r\n      await this.storage.create();\r\n    } catch (error2) {\r\n      console.log('error creating database', error2);\r\n    }\r\n\r\n    console.log('Initialized Local storage');\r\n\r\n    this.Initialized = true;\r\n\r\n    return;\r\n  }\r\n\r\n  public async terminate(): Promise<void> {\r\n    // this.logger.logDebug('TERMINATE, Currently used:', String(LocalStorageService.currentlyUsed));\r\n    // console.log('TERMINATE, Currently used:', LocalStorageService.currentlyUsed);\r\n    await this.waitForDbAvailable('terminate');\r\n    LocalStorageService.CALENDAR_TASK_KEY = '';\r\n    LocalStorageService.TIMER_KEY = '';\r\n    LocalStorageService.GROUPS_KEY = '';\r\n    this.Initialized = false;\r\n  }\r\n\r\n  public async getUser(userId: string): Promise<DTOUser> {\r\n    // console.log('getting user from local (awaiting)');\r\n    await this.lockLocalStorage(false, 'getUser');\r\n    // console.log('getting user from local');\r\n    LocalStorageService.LastUsedDatabaseReason = 'getUser ' + (new Date()).toISOString();\r\n\r\n    try {\r\n      const user = await this.storage.get(LocalStorageService.USER_KEY + userId) as DTOUser;\r\n      // console.log('got user');\r\n      if (user.Config.Configs == null || user.Config.Configs.length == null) {\r\n        // console.log('INITIALIZING NEW CONFIGS');\r\n        user.Config = new DTOUserConfig();\r\n      } /*else {\r\n        console.log('USER CONFIG', user, user.Config.Configs.length);\r\n        console.log('USER', user);\r\n      }*/\r\n      return user;\r\n    } catch (error) {\r\n      // console.log('cant get local user (normal first usage)');\r\n      // this.logger.logError(new Error('unable to read user from local database')); Removed log because this is normal when first install\r\n      // Cant display this because it happens when we create a new account\r\n      // alert('unable to read user from local database');\r\n      return null;\r\n    } finally {\r\n      this.unlockLocalStorage(false);\r\n    }\r\n  }\r\n\r\n  public async setUser(user: DTOUser, alreadyLocked: boolean = false): Promise<void> {\r\n    await this.lockLocalStorage(alreadyLocked, 'setUser');\r\n    LocalStorageService.LastUsedDatabaseReason = 'setUser ' + (new Date()).toISOString();\r\n\r\n    try {\r\n      // console.log('SETTING USER LOCALLY : ', user);\r\n      await this.storage.set(LocalStorageService.USER_KEY + user.UserId, user);\r\n      return;\r\n    } catch (error) {\r\n      console.error('error', error);\r\n      this.logger.logError(new Error('unable to set user in local database'));\r\n      alert('unable to set user in local database');\r\n      return null;\r\n    } finally {\r\n      this.unlockLocalStorage(false);\r\n    }\r\n  }\r\n\r\n  public async setCalendarTasks(tasks: DTOCalendarTask[],\r\n                                alreadyReadOnly: boolean = false): Promise<boolean> {\r\n    // const dateStart = new Date();\r\n    // this.logger.logDebug('setCalendarTasks');\r\n    await this.lockLocalStorage(alreadyReadOnly, 'setCalendarTasks');\r\n    LocalStorageService.LastUsedDatabaseReason = 'setCalendarTasks ' + (new Date()).toISOString();\r\n\r\n    try {\r\n      await this.setCalendarTasksToDatabase(tasks);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('unable to read from local database 3'), error);\r\n      alert('unable to read from database 3');\r\n\r\n      return false;\r\n    } finally {\r\n      this.unlockLocalStorage(alreadyReadOnly);\r\n      // this.logger.logDebug('SET CALENDAR TASKS COMPLETED IN ', DateUtils.getTimeSince(dateStart));\r\n    }\r\n  }\r\n\r\n  public async getCalendarTasks(alreadyLocked: boolean = false): Promise<DTOCalendarTask[]> {\r\n    // this.logger.logDebug('GETCALENDARTASKS LOCKING', new Date().toISOString());\r\n\r\n    await this.lockLocalStorage(alreadyLocked, 'getCalendarTasks');\r\n\r\n    /*if (alreadyLocked === false) {\r\n      this.logger.logDebug('GETCALENDARTASKS LOCKED', new Date().toISOString());\r\n    }*/\r\n\r\n    LocalStorageService.LastUsedDatabaseReason = 'getCalendarTasks' + (new Date()).toISOString();\r\n\r\n    try {\r\n      const tasks = await this.getCalendarTasksFromDatabase();\r\n      // console.log('TASKS', tasks);\r\n      return tasks.filter(p => p.CalendarTaskId != null);\r\n    } catch (error) {\r\n      this.logger.logError(new Error('unable to read from local database getCalendarTasks1 ' + error));\r\n      alert('unable to read from local database 2');\r\n      return [];\r\n    } finally {\r\n      if (alreadyLocked === false) {\r\n        // this.logger.logDebug('GETCALENDARTASKS UNLOCKING', new Date().toISOString());\r\n        // this.logger.logDebug('GETCALENDARTASKS ALREADY LOCKED', String(alreadyLocked));\r\n      }\r\n\r\n      this.unlockLocalStorage(alreadyLocked);\r\n\r\n      /*if (alreadyLocked === false) {\r\n        this.logger.logDebug('GETCALENDARTASKS UNLOCKED', new Date().toISOString());\r\n      }*/\r\n    }\r\n  }\r\n\r\n  private async getCalendarTasksFromDatabase(): Promise<DTOCalendarTask[]> {\r\n    // this.logger.logDebug('getCalendarTasksFromDatabase', LocalStorageService.CALENDAR_TASK_KEY);\r\n    if (LocalStorageService.CALENDAR_TASK_KEY == null) {\r\n      return [];\r\n    }\r\n\r\n    // this.logger.logDebug('getCalendarTasksFromDatabase2', LocalStorageService.CALENDAR_TASK_KEY, new Date().toISOString());\r\n\r\n    //await this.storage.ready;\r\n\r\n    // this.logger.logDebug('isReady', LocalStorageService.CALENDAR_TASK_KEY, new Date().toISOString());\r\n\r\n    const tasks = await this.storage.get(LocalStorageService.CALENDAR_TASK_KEY);\r\n    if (tasks == null) {\r\n      // console.log('Tasks is null');\r\n      return [];\r\n    }\r\n    // this.logger.logDebug('gotCalendarTasksFromDatabase TASKS', new Date().toISOString());\r\n    const allTasks = tasks.map(p => DTOCalendarTask.fromAny(p));\r\n    // this.logger.logDebug('gotCalendarTasksFromDatabase', new Date().toISOString());\r\n    return allTasks;\r\n  }\r\n\r\n  private async setCalendarTasksToDatabase(tasks: DTOCalendarTask[]): Promise<void> {\r\n    // this.logger.logDebug('setSetCalendarTasksToDatabase');\r\n    //await this.storage.ready;\r\n    await this.storage.set(LocalStorageService.CALENDAR_TASK_KEY, tasks);\r\n    return;\r\n  }\r\n\r\n  public async insertCalendarTask(task: DTOCalendarTask): Promise<any> {\r\n    try {\r\n      // this.logger.logDebug('{inserting task locally, LOCKING}', new Date().toISOString());\r\n      await this.lockLocalStorage(false, 'insertCalendarTask');\r\n      // this.logger.logDebug('{inserting task locally, LOCKED, GETTING TASKS}', new Date().toISOString());\r\n      LocalStorageService.LastUsedDatabaseReason = 'insertCalendarTask' + (new Date()).toISOString();\r\n\r\n      const tasks = await this.getCalendarTasks(true);\r\n      // this.logger.logDebug('{inserting task locally, GOT TASKS, SETTING TASKS}', new Date().toISOString());\r\n      tasks.push(task);\r\n      const result = await this.setCalendarTasks(tasks, true);\r\n      // this.logger.logDebug('{inserting task locally, SET TASKS DONE}', new Date().toISOString());\r\n      return;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('unable to read from local database insertCalendarTask1 ' + error));\r\n      alert('unable to read from local database 3');\r\n      return;\r\n    } finally {\r\n      // this.logger.logDebug('{insert task FINALLY UNLOCKING}', new Date().toISOString());\r\n      this.unlockLocalStorage(false);\r\n      // this.logger.logDebug('{insert task FINALLY UNLOCKED}', new Date().toISOString());\r\n    }\r\n  }\r\n\r\n  public async updateCalendarTask(task: DTOCalendarTask, synced: boolean = false): Promise<any> {\r\n    // console.log('updating task locally', task);\r\n    try {\r\n      // console.log('{updading task locally, LOCKING}', task, new Date().toISOString());\r\n      await this.lockLocalStorage(false, 'updateCalendarTask');\r\n      // console.log('{updaded task locally, LOCKED}', new Date().toISOString());\r\n      LocalStorageService.LastUsedDatabaseReason = 'updateCalendarTask' + (new Date()).toISOString();\r\n\r\n      task.Synced = synced;\r\n      const tasks = await this.getUpdatedTasks(task);\r\n      // console.log('{updating task locally, GOT TASKS, SETTING TASKS}', new Date().toISOString());\r\n      await this.setCalendarTasks(tasks, true);\r\n      return;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('unable to read from local database updateCalendarTask1 ' + error));\r\n      alert('unable to read from local database 4');\r\n      return;\r\n    } finally {\r\n      // console.log('{update task FINALLY UNLOCKING}', new Date().toISOString());\r\n      this.unlockLocalStorage(false);\r\n      // console.log('{update task FINALLY UNLOCKING}', new Date().toISOString());\r\n    }\r\n  }\r\n\r\n  public async updateCalendarTasks(tasks: DTOCalendarTask[], synced: boolean = false): Promise<any> {\r\n    // console.log('updating tasks locally', tasks);\r\n    try {\r\n      // console.log('{updading tasks locally, LOCKING}', tasks, new Date().toISOString());\r\n      await this.lockLocalStorage(false, 'updateCalendarTasks');\r\n      // console.log('{updading tasks locally, LOCKED}', new Date().toISOString());\r\n      LocalStorageService.LastUsedDatabaseReason = 'updateCalendarTasks' + (new Date()).toISOString();\r\n\r\n      tasks.forEach(p => p.Synced = synced);\r\n      const allTasks = await this.getUpdatedTasksBatch(tasks);\r\n      // console.log('{inserting tasks locally, GOT TASKS, SETTING TASKS}', new Date().toISOString());\r\n      await this.setCalendarTasks(allTasks, true);\r\n      return;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('unable to read from local database updateCalendarTasks1 ' + error));\r\n      alert('unable to read from local database 5');\r\n      return;\r\n    } finally {\r\n      // console.log('{update tasks FINALLY UNLOCKING}', new Date().toISOString());\r\n      this.unlockLocalStorage(false);\r\n      // console.log('{update tasks FINALLY UNLOCKING}', new Date().toISOString());\r\n    }\r\n  }\r\n\r\n  public async updateSyncedCalendarTask(task: DTOCalendarTask, alreadyLocked: boolean = false): Promise<any> {\r\n    // console.log('updateSyncedCalendarTask');\r\n    // await this.waitForDbAvailable(); don't put this on, it causes a bug, or put a parameter\r\n    // console.log('lock (updateSyncedCalendarTask)');\r\n    try {\r\n      /*if (LocalStorageService.currentlyUsed === true) {\r\n        this.logger.logError(new Error('updateSyncedCalendarTask already in use'));\r\n      }*/\r\n      if (alreadyLocked === true) {\r\n        // console.log('{updading synced task locally, LOCKING}', task, new Date().toISOString());\r\n        LocalStorageService.currentlyUsed = true;\r\n        // console.log('{updading synced task locally, LOCKED}', task, new Date().toISOString());\r\n        LocalStorageService.LastUsedDatabaseReason = 'updateSyncedCalendarTask' + (new Date()).toISOString();\r\n      }\r\n\r\n      // await this.lockLocalStorage(false); // don't put this on, it causes a bug, or put a parameter\r\n      const tasks = await this.getUpdatedTasks(task);\r\n      // console.log('{updating synced task locally, GOT TASKS, SETTING TASKS}', new Date().toISOString());\r\n      await this.setCalendarTasks(tasks, true);\r\n      return;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('unable to read from local database updateSyncedCalendarTask1 ' + error));\r\n      alert('unable to read from local database 6');\r\n    } finally {\r\n      if (alreadyLocked === true) {\r\n        // console.log('{update synced tasks FINALLY UNLOCKING}', new Date().toISOString());\r\n        this.unlockLocalStorage(alreadyLocked); // Are we sure we want to unlock ?\r\n        // console.log('{update synced tasks FINALLY UNLOCKING}', new Date().toISOString());\r\n      }\r\n    }\r\n  }\r\n\r\n  private async getUpdatedTasks(task: DTOCalendarTask) {\r\n    // console.log('getUpdatedTasks');\r\n    const tasks = await this.getCalendarTasks(true);\r\n    const index = tasks.findIndex(p => p.CalendarTaskId === task.CalendarTaskId);\r\n    tasks[index] = task;\r\n    return tasks;\r\n  }\r\n\r\n  private async getUpdatedTasksBatch(tasks: DTOCalendarTask[]) {\r\n    // console.log('getUpdatedTasks');\r\n    const allTasks = await this.getCalendarTasks(true);\r\n\r\n    for (const task of tasks) {\r\n      const index = allTasks.findIndex(p => p.CalendarTaskId === task.CalendarTaskId);\r\n      allTasks[index] = task;\r\n    }\r\n\r\n    return allTasks;\r\n  }\r\n\r\n  public async insertTaskHistory(history: DTOTaskHistory): Promise<any> {\r\n    try {\r\n      /*this.logger.logDebug('inserting history locally (ATTEMPTING TO LOCK)',\r\n                            JSON.stringify(history),\r\n                            LocalStorageService.LastUsedDatabaseReason);*/\r\n      await this.lockLocalStorage(false, 'insertTaskHistory');\r\n      LocalStorageService.LastUsedDatabaseReason = 'insertTaskHistory_' + (new Date()).toISOString();\r\n\r\n      // this.logger.logDebug('inserting history locally (LOCKED)', JSON.stringify(history));\r\n      const tasks = await this.getUpdatedTasksHistoryInserted(history);\r\n      await this.setCalendarTasks(tasks, true);\r\n      // this.logger.logDebug('inserted history locally (UNLOCKING)', JSON.stringify(history));\r\n      return;\r\n    } catch (error) {\r\n      this.logger.logDebug('ERROR insertTaskHistory', JSON.stringify(error));\r\n      alert('unable inserting task history');\r\n      return;\r\n    } finally {\r\n      this.unlockLocalStorage(false);\r\n    }\r\n  }\r\n\r\n  public async updateTaskHistory(history: DTOTaskHistory): Promise<any> {\r\n    // console.log('updating history locally', history);\r\n    try {\r\n      await this.lockLocalStorage(false, 'updateTaskHistory');\r\n      LocalStorageService.LastUsedDatabaseReason = 'updateTaskHistory' + (new Date()).toISOString();\r\n\r\n      history.Synced = false;\r\n      const tasks = await this.getUpdatedTasksHistoryUpdated(history);\r\n      await this.setCalendarTasks(tasks, true);\r\n      return;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('unable to read from local database updateTaskHistory1 ' + error));\r\n      alert('unable to read from local database 7');\r\n      return;\r\n    } finally {\r\n      this.unlockLocalStorage(false);\r\n    }\r\n  }\r\n\r\n  public async updateSyncedTaskHistory(history: DTOTaskHistory, alreadySynced: boolean = false): Promise<any> {\r\n    // this.logger.logDebug('lock (updateSyncedTaskHistory)');\r\n    try {\r\n      if (alreadySynced === false) {\r\n        LocalStorageService.currentlyUsed = true;\r\n        LocalStorageService.LastUsedDatabaseReason = 'updateSyncedTaskHistory' + (new Date()).toISOString();\r\n      }\r\n\r\n      const tasks = await this.getUpdatedTasksHistoryUpdated2(history);\r\n      // this.logger.logDebug('SETTING TASKS:', JSON.stringify(tasks));\r\n      // this.logger.logDebug('## updateSyncedTaskHistory SETTING CALENDAR TASKS');\r\n      await this.setCalendarTasks(tasks, true);\r\n      // this.logger.logDebug('## updateSyncedTaskHistory SET CALENDAR TASKS');\r\n      return;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('unable to read from local database updateSyncedTaskHistory1 ' + error));\r\n      alert('unable to read from local database 8');\r\n      return;\r\n    } finally {\r\n      this.unlockLocalStorage(alreadySynced); // Are we sure we want to unlock ?\r\n    }\r\n  }\r\n\r\n  public async updateSyncedGroup(group: DTOTaskGroup): Promise<any> {\r\n    // this.logger.logDebug('lock (updateSyncedTaskHistory)');\r\n    try {\r\n      const groups = await this.getUpdatedGroups(group);\r\n      // this.logger.logDebug('SETTING TASKS:', tasks);\r\n      // this.logger.logDebug('## updateSyncedTaskHistory SETTING CALENDAR TASKS');\r\n      await this.setGroups(groups, true);\r\n      // this.logger.logDebug('## updateSyncedTaskHistory SET CALENDAR TASKS');\r\n      return;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('unable to read from local database updateSyncedTaskHistory1 ' + error));\r\n      alert('unable to read from local database 9');\r\n      return;\r\n    }\r\n  }\r\n\r\n  private async getUpdatedTasksHistoryInserted(history: DTOTaskHistory) {\r\n    // console.log('getUpdatedTasksHistoryInserted');\r\n    const tasks = await this.getCalendarTasks(true);\r\n    const task = tasks.filter(p => p.CalendarTaskId === history.CalendarTaskId)[0];\r\n    // this.logger.logDebug('pushing histories');\r\n    if (!task.Histories.some(p => p.TaskHistoryId === history.TaskHistoryId)) {\r\n      task.Histories.push(history);\r\n    } else {\r\n      this.logger.logError(new Error('HISTORY ALREADY EXISTS'),\r\n                           { key: 'transaction', value: JSON.stringify(history)});\r\n    }\r\n\r\n    return tasks;\r\n  }\r\n\r\n  private async getUpdatedTasksHistoriesInserted(histories: DTOTaskHistory[]) {\r\n    // console.log('getUpdatedTasksHistoryInserted');\r\n    const tasks = await this.getCalendarTasks(true);\r\n    for (const history of histories) {\r\n      const task = tasks.filter(p => p.CalendarTaskId === history.CalendarTaskId)[0];\r\n      // this.logger.logDebug('pushing histories');\r\n      if (!task.Histories.some(p => p.TaskHistoryId === history.TaskHistoryId)) {\r\n        task.Histories.push(history);\r\n      } else {\r\n        this.logger.logError(new Error('HISTORY ALREADY EXISTS'),\r\n                             { key: 'transaction', value: JSON.stringify(history)});\r\n      }\r\n    }\r\n\r\n    return tasks;\r\n  }\r\n\r\n  private async getUpdatedTasksHistoryUpdated(history: DTOTaskHistory) {\r\n    // this.logger.logDebug('getUpdatedTasksHistoryUpdated');\r\n    const tasks = await this.getCalendarTasks(true);\r\n    const task = tasks.filter(p => p.CalendarTaskId === history.CalendarTaskId)[0];\r\n    const index = task.Histories.findIndex(p => p.TaskHistoryId === history.TaskHistoryId);\r\n    task.Histories[index] = history;\r\n    return tasks;\r\n  }\r\n\r\n  private async getUpdatedTasksHistoriesUpdated(histories: DTOTaskHistory[]) {\r\n    // this.logger.logDebug('getUpdatedTasksHistoryUpdated');\r\n    const tasks = await this.getCalendarTasks(true);\r\n    for (const history of histories) {\r\n      const task = tasks.filter(p => p.CalendarTaskId === history.CalendarTaskId)[0];\r\n      const index = task.Histories.findIndex(p => p.TaskHistoryId === history.TaskHistoryId);\r\n      task.Histories[index] = history;\r\n    }\r\n\r\n    return tasks;\r\n  }\r\n\r\n  private async getUpdatedTasksHistoryUpdated2(history: DTOTaskHistory) {\r\n    // this.logger.logDebug('getUpdatedTasksHistoryUpdated2');\r\n    const tasks = await this.getCalendarTasks(true);\r\n    const taskIndex = tasks.findIndex(p => p.CalendarTaskId === history.CalendarTaskId);\r\n    // this.logger.logDebug('taskIndex = ', JSON.stringify(taskIndex));\r\n    const task = tasks[taskIndex];\r\n    const historyIndex = task.Histories.findIndex(p => p.TaskHistoryId === history.TaskHistoryId);\r\n    task.Histories[historyIndex] = history;\r\n    tasks[taskIndex] = task;\r\n    return tasks;\r\n  }\r\n\r\n  private async getUpdatedGroups(group: DTOTaskGroup) {\r\n    // console.log('[ GET UPDATED GROUP ]', group);\r\n    // console.log('getUpdatedTasksHistoryUpdated2');\r\n    const groups = await this.getGroups(true);\r\n    const groupIndex = groups.findIndex(p => p.GroupId === group.GroupId);\r\n    // console.log('taskIndex = ', taskIndex);\r\n    groups[groupIndex] = group;\r\n    return groups;\r\n  }\r\n\r\n  public async clear(): Promise<void> {\r\n    await this.storage.clear();\r\n    return;\r\n  }\r\n\r\n  public async shouldViewChangeLog(currentVersion: string): Promise<boolean> {\r\n    //await this.storage.ready;\r\n    const lastReadVersion = await this.storage.get(LocalStorageService.LAST_READ_CHANGELOG_VERSION_KEY);\r\n\r\n    if (lastReadVersion != null) {\r\n      if (lastReadVersion !== currentVersion) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    } else {\r\n      this.storage.set(LocalStorageService.LAST_READ_CHANGELOG_VERSION_KEY, currentVersion);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  public async setChangeLogToViewed(currentVersion: string): Promise<boolean> {\r\n    await this.storage.set(LocalStorageService.LAST_READ_CHANGELOG_VERSION_KEY, currentVersion);\r\n    return true;\r\n  }\r\n\r\n  public async getTimers(alreadyLocked: boolean = false): Promise<DTOTaskTimer[]> {\r\n    //this.logger.logDebug('GETTING TIMERS)');\r\n    await this.lockLocalStorage(alreadyLocked, 'getTimers');\r\n    LocalStorageService.LastUsedDatabaseReason = 'getTimers ' + (new Date()).toISOString();\r\n\r\n    try {\r\n      let timers = await this.storage.get(LocalStorageService.TIMER_KEY) as DTOTaskTimer[];\r\n      //this.logger.logDebug('LOCAL GETTIMERS : ', JSON.stringify(timers));\r\n      if (timers == null || timers.length == null) {\r\n        // console.log('INITIALIZING NEW TIMERS');\r\n        timers = [];\r\n      } else {\r\n        // TODO : Maybe we will need timers someday, right now we are filtering the completed ones\r\n        timers = timers.filter(p => p.isDone === false && p.isVoid !== true);\r\n      }\r\n      return timers;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('unable to read timers from local database'));\r\n      return null;\r\n    } finally {\r\n      this.unlockLocalStorage(alreadyLocked);\r\n    }\r\n  }\r\n\r\n  public async setTimers(timers: DTOTaskTimer[],\r\n                         alreadyReadOnly: boolean = false): Promise<void> {\r\n    await this.lockLocalStorage(alreadyReadOnly, 'setTimers');\r\n    LocalStorageService.LastUsedDatabaseReason = 'setTimers ' + (new Date()).toISOString();\r\n\r\n    try {\r\n      //console.log('LOCAL SET TIMERS', timers, LocalStorageService.TIMER_KEY);\r\n      await this.storage.set(LocalStorageService.TIMER_KEY, timers);\r\n      return;\r\n    } catch (error) {\r\n      // console.error('error');\r\n      this.logger.logError(new Error('unable to set timers in local database'));\r\n      return null;\r\n    } finally {\r\n      this.unlockLocalStorage(alreadyReadOnly);\r\n    }\r\n  }\r\n\r\n  public async insertTimer(timer: DTOTaskTimer): Promise<void> {\r\n    // this.logger.logDebug('INSERTING TIMER LOCAL STORAGE', JSON.stringify(timer));\r\n    await this.lockLocalStorage(false, 'setTimer');\r\n    LocalStorageService.LastUsedDatabaseReason = 'setTimer ' + (new Date()).toISOString();\r\n\r\n    try {\r\n      const timers = await this.getTimers(true);\r\n      timers.push(timer);\r\n      await this.setTimers(timers, true);\r\n      return;\r\n    } catch (error) {\r\n      // console.error('error');\r\n      this.logger.logError(new Error('unable to set timer in local database'));\r\n      return null;\r\n    } finally {\r\n      this.unlockLocalStorage(false);\r\n    }\r\n  }\r\n\r\n  public async updateTimer(timer: DTOTaskTimer): Promise<void> {\r\n    // console.log('UPDATING TIMER LOCAL STORAGE', timer);\r\n    await this.lockLocalStorage(false, 'setTimer');\r\n    LocalStorageService.LastUsedDatabaseReason = 'setTimer ' + (new Date()).toISOString();\r\n\r\n    try {\r\n      const timers = await this.getTimers(true);\r\n      const index = timers.findIndex(p => p.TimerId === timer.TimerId);\r\n      timers[index] = timer;\r\n      await this.setTimers(timers, true);\r\n      return;\r\n    } catch (error) {\r\n      // console.error('error');\r\n      this.logger.logError(new Error('unable to set timer in local database'));\r\n      return null;\r\n    } finally {\r\n      this.unlockLocalStorage(false);\r\n    }\r\n  }\r\n\r\n  public async getGroups(alreadyLocked: boolean = false): Promise<DTOTaskGroup[]> {\r\n    // this.logger.logDebug('GETGROUPS LOCKING', new Date().toISOString());\r\n\r\n    await this.lockLocalStorage(alreadyLocked, 'getGroups');\r\n\r\n    /*if (alreadyLocked === false) {\r\n      this.logger.logDebug('GETCALENDARTASKS LOCKED', new Date().toISOString());\r\n    }*/\r\n\r\n    LocalStorageService.LastUsedDatabaseReason = 'getGroups' + (new Date()).toISOString();\r\n\r\n    try {\r\n      const groups = await this.getGroupsFromDatabase();\r\n      // console.log('GOT GROUPS : ', groups);\r\n\r\n      // TODO : Temporary, remove\r\n      const oops = groups.filter(p => p.Void == null);\r\n      oops.forEach(p => p.Void = false);\r\n      return groups; // groups.filter(p => p.Void === false);\r\n    } catch (error) {\r\n      this.logger.logError(new Error('unable to read from local database getGroups ' + error));\r\n      alert('unable to read from local database 10');\r\n      return [];\r\n    } finally {\r\n      /*if (alreadyLocked === false) {\r\n        this.logger.logDebug('GETCALENDARTASKS UNLOCKING', new Date().toISOString());\r\n        this.logger.logDebug('GETCALENDARTASKS ALREADY LOCKED', String(alreadyLocked));\r\n      }*/\r\n\r\n      this.unlockLocalStorage(alreadyLocked);\r\n\r\n      /*if (alreadyLocked === false) {\r\n        this.logger.logDebug('GETGROUPS UNLOCKED', new Date().toISOString());\r\n      }*/\r\n    }\r\n  }\r\n\r\n  private async getGroupsFromDatabase(): Promise<DTOTaskGroup[]> {\r\n    // this.logger.logDebug('getCalendarTasksFromDatabase', LocalStorageService.CALENDAR_TASK_KEY);\r\n    if (LocalStorageService.GROUPS_KEY == null) {\r\n      return [];\r\n    }\r\n\r\n    // this.logger.logDebug('getCalendarTasksFromDatabase2', LocalStorageService.CALENDAR_TASK_KEY, new Date().toISOString());\r\n\r\n    //await this.storage.ready;\r\n\r\n    // this.logger.logDebug('isReady', LocalStorageService.CALENDAR_TASK_KEY, new Date().toISOString());\r\n\r\n    const tasks = await this.storage.get(LocalStorageService.GROUPS_KEY);\r\n    if (tasks == null) {\r\n      // console.log('Tasks is null');\r\n      return [];\r\n    }\r\n    // this.logger.logDebug('gotCalendarTasksFromDatabase TASKS', new Date().toISOString());\r\n    const allGroups = tasks.map(p => DTOTaskGroup.fromAny(p));\r\n    // console.log('ALLGROUPS FROMDATABASE', allGroups);\r\n    // this.logger.logDebug('gotCalendarTasksFromDatabase', new Date().toISOString());\r\n    return allGroups;\r\n  }\r\n\r\n  public async setGroups(groups: DTOTaskGroup[],\r\n                         alreadyReadOnly: boolean = false): Promise<boolean> {\r\n    // this.logger.logDebug('setCalendarTasks');\r\n    await this.lockLocalStorage(alreadyReadOnly, 'setGroups');\r\n    LocalStorageService.LastUsedDatabaseReason = 'setGroups ' + (new Date()).toISOString();\r\n\r\n    try {\r\n      await this.setGroupsToDatabase(groups);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('unable to read from local database 6767'), error);\r\n      alert('unable to read from local database 11');\r\n\r\n      return false;\r\n    } finally {\r\n      this.unlockLocalStorage(alreadyReadOnly);\r\n      // this.logger.logDebug('SET CALENDAR TASKS COMPLETED');\r\n    }\r\n  }\r\n\r\n  public async setGroupsAndTasks(groups: DTOTaskGroup[],\r\n                                 tasks: DTOCalendarTask[]): Promise<boolean> {\r\n    // this.logger.logDebug('setCalendarTasks');\r\n    await this.lockLocalStorage(false, 'setGroupsAndTasks');\r\n    LocalStorageService.LastUsedDatabaseReason = 'setGroupsAndTasks ' + (new Date()).toISOString();\r\n\r\n    try {\r\n      await this.setGroups(groups, true);\r\n      await this.setCalendarTasks(tasks, true);\r\n\r\n      return true;\r\n    } catch (error) {\r\n      this.logger.logError(new Error('unable to read from local database 6768'), error);\r\n      alert('unable to read from local database 65');\r\n\r\n      return false;\r\n    } finally {\r\n      this.unlockLocalStorage(false);\r\n      // this.logger.logDebug('SET CALENDAR TASKS COMPLETED');\r\n    }\r\n  }\r\n\r\n  private async setGroupsToDatabase(groups: DTOTaskGroup[]): Promise<void> {\r\n    // console.log('setGroupsToDatabase', groups);\r\n    //await this.storage.ready;\r\n    await this.storage.set(LocalStorageService.GROUPS_KEY, groups);\r\n    return;\r\n  }\r\n\r\n  // TODO: Do Generic method is is the same as timer\r\n  public async insertGroup(group: DTOTaskGroup): Promise<void> {\r\n    // console.log('INSERTING GROUP LOCAL STORAGE', group);\r\n    await this.lockLocalStorage(false, 'setGroup');\r\n    LocalStorageService.LastUsedDatabaseReason = 'setGroup ' + (new Date()).toISOString();\r\n\r\n    try {\r\n      const groups = await this.getGroups(true);\r\n      groups.push(group);\r\n      await this.setGroups(groups, true);\r\n      return;\r\n    } catch (error) {\r\n      // console.error('error');\r\n      this.logger.logError(new Error('unable to set group in local database'));\r\n      alert('unable to read from local database 12');\r\n      return null;\r\n    } finally {\r\n      this.unlockLocalStorage(false);\r\n    }\r\n  }\r\n\r\n  public async updateGroup(group: DTOTaskGroup, alreadyLocked: boolean = false): Promise<void> {\r\n    // console.log('UPDATING GROUP LOCAL STORAGE', group);\r\n\r\n    if (alreadyLocked === false) {\r\n      await this.lockLocalStorage(false, 'setGroup');\r\n      LocalStorageService.LastUsedDatabaseReason = 'setGroup ' + (new Date()).toISOString();\r\n    }\r\n\r\n    try {\r\n      const groups = await this.getGroups(true);\r\n      const index = groups.findIndex(p => p.GroupId === group.GroupId);\r\n      groups[index] = group;\r\n      await this.setGroups(groups, true);\r\n      return;\r\n    } catch (error) {\r\n      // console.error('error');\r\n      this.logger.logError(new Error('unable to set group in local database'));\r\n      alert('unable to read from local database 13');\r\n      return null;\r\n    } finally {\r\n      if (alreadyLocked === false) {\r\n        this.unlockLocalStorage(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  private unlockLocalStorage(alreadyLocked: boolean): void {\r\n    if (alreadyLocked === false) {\r\n      // console.log('[UNLOCK]');\r\n      LocalStorageService.currentlyUsed = false;\r\n    }\r\n  }\r\n\r\n  private async lockLocalStorage(alreadyLocked: boolean, reason: string): Promise<void> {\r\n    if (alreadyLocked === false) {\r\n      // console.log('[ATTEMPTING LOCK]');\r\n      await this.waitForDbAvailable('lockLocalStorage ' + reason);\r\n      // console.log('[LOCK SUCCESSFUL]');\r\n      LocalStorageService.currentlyUsed = true;\r\n      return;\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  public async waitForDbAvailable(reason: string): Promise<void> {\r\n    if (LocalStorageService.currentlyUsed === true || LocalStorageService.CALENDAR_TASK_KEY == null) {\r\n      for (let i = 0; i < 30; i++) {\r\n        /*console.log('----- CURRENTLY USED BY ' + LocalStorageService.LastUsedDatabaseReason + ', FOR ' +\r\n                    reason + ' WAITING, CURRENT DATE = ', new Date().toISOString());*/\r\n        await ThreadUtils.sleep(1000);\r\n        if (this.dbAvailable()) {\r\n          this.logger.logDebug('available after i=', i.toString());\r\n          return;\r\n        }\r\n      }\r\n\r\n      this.logger.logError(new Error('database is locked'), { key: 'reason', value: LocalStorageService.LastUsedDatabaseReason });\r\n      alert(this.translate.instant('local-storage.database-locked'));\r\n      throw new DatabaseLockedError('database is locked');\r\n    } else {\r\n      // console.log('CURRENTLY NOT USED, RETURNING');\r\n      return;\r\n    }\r\n  }\r\n\r\n  private dbAvailable() {\r\n    return LocalStorageService.currentlyUsed === false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoadingController, ModalController, Platform } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ILogger } from '../interfaces/i-logger';\r\nimport { CalendarTask } from '../models/Core/calendar-task';\r\nimport { TaskGroup } from '../models/Core/task-group';\r\nimport { EventData, EventService } from './event.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalService {\r\n  public static ModalIds = class {\r\n    public static CreateTask = 'CreateTaskModal';\r\n    public static EditTask = 'EditTaskModal';\r\n    public static CreateGroup = 'CreateGroupModal';\r\n    public static EditGroup = 'EditGroupModal';\r\n    public static Feedback = 'FeedbackModal';\r\n    public static Notes = 'NotesModal';\r\n    public static Logs = 'LogsModal';\r\n    public static UserSettings = 'UserSettingsModal';\r\n    public static TaskSelection = 'TaskSelectionModal';\r\n    public static Privacy = 'PrivacyModal';\r\n    public static Terms = 'TermsModal';\r\n    public static Groups = 'GroupsModal';\r\n    public static AssignedDate = 'AssignedDateModal';\r\n    public static Welcome = 'WelcomeModal';\r\n    public static CurrentDate = 'CurrentDate';\r\n  };\r\n\r\n  private static shownModalIds: string[] = [];\r\n\r\n  constructor(private modalController: ModalController,\r\n              private eventService: EventService,\r\n              private translate: TranslateService,\r\n              private loadingController: LoadingController,\r\n              private logger: ILogger,\r\n              private platform: Platform) {\r\n  }\r\n\r\n  public async showCreateTaskModal(component, groupId: string = \"\"): Promise<void> {\r\n    // PREVENT DUPLICATE MODAL\r\n    const modalId = ModalService.ModalIds.CreateTask;\r\n    if (ModalService.shownModalIds.some(p => p === modalId)) {\r\n      return;\r\n    } else {\r\n      ModalService.shownModalIds.push(modalId);\r\n    }\r\n\r\n    // console.log('CREATE CLICK', new Date().toISOString());\r\n    const modal = await this.modalController.create({\r\n      component,\r\n      backdropDismiss: false,\r\n      id: modalId,\r\n      componentProps: { preSelectedGroupId: groupId }\r\n    });\r\n\r\n    modal.present().then(() => {\r\n      const firstInput: any = document.querySelector('ion-modal input');\r\n      firstInput.focus();\r\n    });\r\n\r\n    // console.log('CREATE PRESENTED', new Date().toISOString());\r\n    await modal.onDidDismiss();\r\n\r\n    ModalService.shownModalIds = ModalService.shownModalIds.filter(p => p !== modalId);\r\n    this.eventService.emit(new EventData(EventService.EventIds.ProgressBar, null));\r\n\r\n    return;\r\n  }\r\n\r\n  public async showEditTaskModal(component, task: CalendarTask): Promise<void> {\r\n    const modalId = ModalService.ModalIds.EditTask;\r\n    if (ModalService.shownModalIds.some(p => p === modalId)) {\r\n      return;\r\n    } else {\r\n      ModalService.shownModalIds.push(modalId);\r\n    }\r\n\r\n    const modal2 = await this.modalController.create({\r\n      component,\r\n      backdropDismiss: false,\r\n      componentProps: {\r\n        currentTask: task,\r\n      },\r\n      id: modalId\r\n    });\r\n    await modal2.present();\r\n    await modal2.onWillDismiss();\r\n\r\n    ModalService.shownModalIds = ModalService.shownModalIds.filter(p => p !== modalId);\r\n\r\n    return;\r\n  }\r\n\r\n\r\n  public async showCreateGroupModal(component): Promise<boolean> {\r\n    const modalId = ModalService.ModalIds.CreateGroup;\r\n    if (ModalService.shownModalIds.some(p => p === modalId)) {\r\n      return;\r\n    } else {\r\n      ModalService.shownModalIds.push(modalId);\r\n    }\r\n\r\n    const modal2 = await this.modalController.create({\r\n      component,\r\n      backdropDismiss: false,\r\n      id: modalId\r\n    });\r\n\r\n    await modal2.present();\r\n    const firstInput: any = document.querySelector('app-group-create input');\r\n    firstInput.focus();\r\n\r\n    const subscription = this.platform.backButton.subscribe(async () => {\r\n      await modal2.dismiss();\r\n    });\r\n    const data = await modal2.onDidDismiss();\r\n    subscription.unsubscribe();\r\n\r\n    ModalService.shownModalIds = ModalService.shownModalIds.filter(p => p !== modalId);\r\n    return data.data as boolean;\r\n  }\r\n\r\n  public async showEditGroupModal(component, group: TaskGroup): Promise<boolean> {\r\n    const modalId = ModalService.ModalIds.EditGroup;\r\n    if (ModalService.shownModalIds.some(p => p === modalId)) {\r\n      return;\r\n    } else {\r\n      ModalService.shownModalIds.push(modalId);\r\n    }\r\n\r\n    const modal2 = await this.modalController.create({\r\n      component,\r\n      backdropDismiss: false,\r\n      componentProps: {\r\n        currentGroup: group,\r\n      },\r\n      id: modalId\r\n    });\r\n    await modal2.present();\r\n    const data = await modal2.onDidDismiss();\r\n\r\n    ModalService.shownModalIds = ModalService.shownModalIds.filter(p => p !== modalId);\r\n    return data.data as boolean;\r\n  }\r\n\r\n  public async showFeedbackModal(component): Promise<void> {\r\n    const modalId = ModalService.ModalIds.Feedback;\r\n    if (ModalService.shownModalIds.some(p => p === modalId)) {\r\n      // this.logger.logDebug('FeedbackModal already shown');\r\n      return;\r\n    } else {\r\n      // this.logger.logDebug('FeedbackModal not shown, showing');\r\n      ModalService.shownModalIds.push(modalId);\r\n    }\r\n\r\n    const modal = await this.modalController.create({\r\n      component,\r\n      backdropDismiss: false,\r\n      id: modalId,\r\n    });\r\n\r\n    await modal.present();\r\n\r\n    await modal.onDidDismiss();\r\n\r\n    // this.logger.logDebug('FeedbackModal dismissed');\r\n\r\n    ModalService.shownModalIds = ModalService.shownModalIds.filter(p => p !== modalId);\r\n  }\r\n\r\n  public async showNotesModal(component): Promise<void> {\r\n    const modalId = ModalService.ModalIds.Notes;\r\n    if (ModalService.shownModalIds.some(p => p === modalId)) {\r\n      return;\r\n    } else {\r\n      ModalService.shownModalIds.push(modalId);\r\n    }\r\n\r\n    const modal = await this.modalController.create({\r\n      component,\r\n      backdropDismiss: false,\r\n      id: modalId\r\n    });\r\n\r\n    await modal.present();\r\n    await modal.onDidDismiss();\r\n\r\n    ModalService.shownModalIds = ModalService.shownModalIds.filter(p => p !== modalId);\r\n  }\r\n\r\n  public async showLogsModal(component): Promise<void> {\r\n    const modalId = ModalService.ModalIds.Logs;\r\n    if (ModalService.shownModalIds.some(p => p === modalId)) {\r\n      return;\r\n    } else {\r\n      ModalService.shownModalIds.push(modalId);\r\n    }\r\n\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('menu.msg-show-logs')\r\n    });\r\n    await loading.present();\r\n    const modal = await this.modalController.create({\r\n      component,\r\n      backdropDismiss: false,\r\n      id: modalId\r\n    });\r\n\r\n    await modal.present();\r\n    await loading.dismiss();\r\n    await modal.onDidDismiss();\r\n\r\n    ModalService.shownModalIds = ModalService.shownModalIds.filter(p => p !== modalId);\r\n  }\r\n\r\n  public async showUserSettingsModal(component): Promise<void> {\r\n    const modalId = ModalService.ModalIds.UserSettings;\r\n    if (ModalService.shownModalIds.some(p => p === modalId)) {\r\n      return;\r\n    } else {\r\n      ModalService.shownModalIds.push(modalId);\r\n    }\r\n\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('menu.load-settings'),\r\n    });\r\n    await loading.present();\r\n    const modal = await this.modalController.create({\r\n      component,\r\n      backdropDismiss: false,\r\n      id: modalId\r\n    });\r\n\r\n    modal.present();\r\n    await loading.dismiss();\r\n    await modal.onDidDismiss();\r\n\r\n    ModalService.shownModalIds = ModalService.shownModalIds.filter(p => p !== modalId);\r\n  }\r\n\r\n  public async showTaskSelectionModal(component): Promise<void> {\r\n    const modalId = ModalService.ModalIds.TaskSelection;\r\n    if (ModalService.shownModalIds.some(p => p === modalId)) {\r\n      return;\r\n    } else {\r\n      ModalService.shownModalIds.push(modalId);\r\n    }\r\n\r\n    const loading = await this.loadingController.create({\r\n      message: this.translate.instant('menu.loading-task-selection'),\r\n    });\r\n    await loading.present();\r\n    const modal = await this.modalController.create({\r\n      component,\r\n      backdropDismiss: false,\r\n      id: modalId\r\n    });\r\n\r\n    await modal.present();\r\n    await loading.dismiss();\r\n    await modal.onDidDismiss();\r\n\r\n    ModalService.shownModalIds = ModalService.shownModalIds.filter(p => p !== modalId);\r\n  }\r\n\r\n  public async showPrivacyModal(component): Promise<void> {\r\n    const modalId = ModalService.ModalIds.Privacy;\r\n    if (ModalService.shownModalIds.some(p => p === modalId)) {\r\n      return;\r\n    } else {\r\n      ModalService.shownModalIds.push(modalId);\r\n    }\r\n\r\n    const modal = await this.modalController.create({\r\n      component,\r\n      backdropDismiss: false,\r\n      id: modalId\r\n    });\r\n\r\n    modal.present();\r\n    await modal.onDidDismiss();\r\n\r\n    ModalService.shownModalIds = ModalService.shownModalIds.filter(p => p !== modalId);\r\n  }\r\n\r\n  public async showTermsModal(component): Promise<void> {\r\n    const modalId = ModalService.ModalIds.Terms;\r\n    if (ModalService.shownModalIds.some(p => p === modalId)) {\r\n      return;\r\n    } else {\r\n      ModalService.shownModalIds.push(modalId);\r\n    }\r\n\r\n    const modal = await this.modalController.create({\r\n      component,\r\n      backdropDismiss: false,\r\n      id: modalId\r\n    });\r\n\r\n    modal.present();\r\n    await modal.onDidDismiss();\r\n\r\n    ModalService.shownModalIds = ModalService.shownModalIds.filter(p => p !== modalId);\r\n  }\r\n\r\n  public async showGroupsModal(component): Promise<void> {\r\n    const modalId = ModalService.ModalIds.Groups;\r\n    if (ModalService.shownModalIds.some(p => p === modalId)) {\r\n      return;\r\n    } else {\r\n      ModalService.shownModalIds.push(modalId);\r\n    }\r\n\r\n    const modal = await this.modalController.create({\r\n      component,\r\n      backdropDismiss: false,\r\n      id: modalId\r\n    });\r\n\r\n    modal.present();\r\n    await modal.onDidDismiss();\r\n\r\n    ModalService.shownModalIds = ModalService.shownModalIds.filter(p => p !== modalId);\r\n  }\r\n\r\n  public async showAssignedDateModal(component, datePickerObj, task: CalendarTask): Promise<any> {\r\n    const modalId = ModalService.ModalIds.AssignedDate;\r\n    if (ModalService.shownModalIds.some(p => p === modalId)) {\r\n      return;\r\n    } else {\r\n      ModalService.shownModalIds.push(modalId);\r\n    }\r\n\r\n    const datePickerModal = await this.modalController.create({\r\n      component,\r\n      cssClass: 'li-ionic4-datePicker',\r\n      componentProps: {\r\n         objConfig: datePickerObj,\r\n         selectedDate: task.AssignedDate\r\n      },\r\n      id: modalId\r\n    });\r\n    await datePickerModal.present();\r\n\r\n    const data = await datePickerModal.onDidDismiss();\r\n\r\n    ModalService.shownModalIds = ModalService.shownModalIds.filter(p => p !== modalId);\r\n\r\n    return data;\r\n  }\r\n\r\n  public async showWelcomeModal(component): Promise<void> {\r\n    const modalId = ModalService.ModalIds.Welcome;\r\n    if (ModalService.shownModalIds.some(p => p === modalId)) {\r\n      return;\r\n    } else {\r\n      ModalService.shownModalIds.push(modalId);\r\n    }\r\n\r\n    const modal = await this.modalController.create({\r\n      component,\r\n      backdropDismiss: false,\r\n      id: modalId\r\n    });\r\n\r\n    modal.present();\r\n    await modal.onDidDismiss();\r\n\r\n    ModalService.shownModalIds = ModalService.shownModalIds.filter(p => p !== modalId);\r\n  }\r\n\r\n  public async showCurrentDateModal(component, datePickerObj, selectedDate: Date): Promise<any> {\r\n    const modalId = ModalService.ModalIds.CurrentDate;\r\n    if (ModalService.shownModalIds.some(p => p === modalId)) {\r\n      return null;\r\n    } else {\r\n      ModalService.shownModalIds.push(modalId);\r\n    }\r\n\r\n    const datePickerModal = await this.modalController.create({\r\n      component,\r\n      cssClass: 'li-ionic4-datePicker',\r\n      componentProps: {\r\n         objConfig: datePickerObj,\r\n         selectedDate\r\n      },\r\n      id: modalId\r\n    });\r\n    await datePickerModal.present();\r\n\r\n    const data = await datePickerModal.onDidDismiss();\r\n\r\n    ModalService.shownModalIds = ModalService.shownModalIds.filter(p => p !== modalId);\r\n\r\n    return data;\r\n  }\r\n}\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { Platform } from '@ionic/angular';\r\nimport { Network } from '@capacitor/network';\r\n\r\nexport enum ConnectionStatus {\r\n  Online,\r\n  Offline\r\n}\r\n\r\n/**\r\n * Source : https://devdactic.com/ionic-4-offline-mode/\r\n * Credits : Steve\r\n */\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NetworkService implements OnDestroy {\r\n\r\n  //private status: BehaviorSubject<ConnectionStatus> = new BehaviorSubject(ConnectionStatus.Offline);\r\n  private connectSubscription: Subscription;\r\n  private disconnectSubscription: Subscription;\r\n\r\n  constructor(private plt: Platform) {\r\n    this.plt.ready().then(() => {\r\n      this.initializeNetworkEvents();\r\n      /*Network.addListener('networkStatusChange', status => {\r\n        console.log('Network status changed', status);\r\n      });*/\r\n      //const status = (await Network.getStatus()) == ConnectionStatus.Online : ConnectionStatus.Offline;\r\n      //this.status.next(status);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.connectSubscription.unsubscribe();\r\n    this.disconnectSubscription.unsubscribe();\r\n  }\r\n\r\n  public initializeNetworkEvents() {\r\n    /*this.disconnectSubscription = this.network.onDisconnect().subscribe(() => {\r\n      if (this.status.getValue() === ConnectionStatus.Online) {\r\n        // console.log('WE ARE OFFLINE');\r\n        this.updateNetworkStatus(ConnectionStatus.Offline);\r\n      }\r\n    });\r\n    this.connectSubscription = this.network.onConnect().subscribe(() => {\r\n      if (this.status.getValue() === ConnectionStatus.Offline) {\r\n        // console.log('WE ARE ONLINE');\r\n        this.updateNetworkStatus(ConnectionStatus.Online);\r\n      }\r\n    });*/\r\n  }\r\n\r\n  private async updateNetworkStatus(status: ConnectionStatus) {\r\n    //this.status.next(status);\r\n    const connection = status === ConnectionStatus.Offline ? 'Offline' : 'Online';\r\n    // console.log('connection status = ', connection);\r\n  }\r\n\r\n  /*public onNetworkChange(): Observable<ConnectionStatus> {\r\n    return this.status.asObservable();\r\n  }*/\r\n\r\n  public async getCurrentNetworkStatus(): Promise<ConnectionStatus> {\r\n    console.log('GETTING CURRENT NETWORK STATUS');\r\n    //return this.status.getValue();\r\n    var status = await Network.getStatus();\r\n    if (status.connected === true) {\r\n      console.log('ONELINE');\r\n      return ConnectionStatus.Online;\r\n    } else {\r\n      console.log('OFFLINE', status);\r\n      return \r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IApiProvider } from '../interfaces/i-api-provider';\r\nimport { ILogger } from '../interfaces/i-logger';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportService {\r\n\r\n  constructor(private api: IApiProvider,\r\n              private alert: AlertController,\r\n              private translate: TranslateService,\r\n              private logger: ILogger) { }\r\n\r\n  public async getAllData() {\r\n    try {\r\n      const filePath = await this.api.downloadAllData(UserService.currentUserId);\r\n\r\n      if (filePath.length > 0) {\r\n        const alert = await this.alert.create({message: this.translate.instant('alert.data-downloaded-success') + filePath});\r\n\r\n        alert.present();\r\n      } else {\r\n        await this.showError();\r\n      }\r\n    } catch (error) {\r\n      this.logger.logError(error);\r\n      await this.showError();\r\n    }\r\n  }\r\n\r\n  private async showError() {\r\n    const alert = await this.alert.create({ message: this.translate.instant('alert.data-downloaded-error') });\r\n\r\n    alert.present();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SelectableTask, AdditionnalTask } from '../models/Core/selectable-task';\r\nimport { TaskFrequency } from '../models/Core/task-frequency.enum';\r\nimport { ResultType } from '../models/Core/result-type.enum';\r\nimport { StatType } from '../models/Core/custom-stat.enum';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SelectableTaskService {\r\n\r\n  public static MorningRoutinesGroupName: string = 'MorningRoutines';\r\n  public static EveningRoutinesGroupName: string = 'EveningRoutines';\r\n  public static RegularRoutinesGroupName: string = 'RegularRoutines';\r\n\r\n  constructor(private translate: TranslateService) { }\r\n\r\n  public getAllSelectableTasks(): SelectableTask[] {\r\n    const tasks: SelectableTask[] = [];\r\n\r\n    let positionIterator = 1;\r\n\r\n    const task1 = new SelectableTask(this.translate.instant('selectable-tasks.sleep-title'),\r\n                                     this.translate.instant('selectable-tasks.sleep-description'),\r\n                                      TaskFrequency.Daily,\r\n                                      ResultType.TimeOfDay,\r\n                                      SelectableTaskService.MorningRoutinesGroupName);\r\n    let additionnalTask = new AdditionnalTask();\r\n    additionnalTask.Task1Name = this.translate.instant('selectable-tasks.time-wake-up');\r\n    additionnalTask.Task2Name = this.translate.instant('selectable-tasks.time-sleep');\r\n    additionnalTask.StatName = this.translate.instant('selectable-tasks.sleeping-duration');\r\n    task1.AbsolutePosition = positionIterator++;\r\n    additionnalTask.GroupName = SelectableTaskService.EveningRoutinesGroupName;\r\n    additionnalTask.AbsolutePositionTask2 = 398;\r\n    additionnalTask.StatType1 = StatType.TimeUp;\r\n    additionnalTask.StatType2 = StatType.TimeSleep;\r\n    task1.AdditionnalTask = additionnalTask;\r\n    tasks.push(task1);\r\n\r\n    /*\r\n    const task12 = new SelectableTask(this.translate.instant('selectable-tasks.time-restricted-title'),\r\n                                      this.translate.instant('selectable-tasks.time-restricted-description'),\r\n                                      TaskFrequency.Daily,\r\n                                      ResultType.TimeOfDay);\r\n    additionnalTask = new AdditionnalTask();\r\n    additionnalTask.Task1Name = this.translate.instant('selectable-tasks.first-non-water');\r\n    additionnalTask.Task2Name = this.translate.instant('selectable-tasks.last-non-water');\r\n    additionnalTask.StatName = this.translate.instant('selectable-tasks.time-restricted-duraton');\r\n    additionnalTask.StatType1 = StatType.TimeNonWaterStart;\r\n    additionnalTask.StatType2 = StatType.TimeNonWaterStop;\r\n    task12.AbsolutePosition = 2;\r\n    additionnalTask.AbsolutePositionTask2 = 397;\r\n    task12.AdditionnalTask = additionnalTask;\r\n    tasks.push(task12);*/\r\n\r\n    const task11 = new SelectableTask(this.translate.instant('selectable-tasks.fasting-title'),\r\n                                      this.translate.instant('selectable-tasks.fasting-description'),\r\n                                      TaskFrequency.Daily,\r\n                                      ResultType.TimeOfDay,\r\n                                      SelectableTaskService.MorningRoutinesGroupName);\r\n    additionnalTask = new AdditionnalTask();\r\n    additionnalTask.Task1Name = this.translate.instant('selectable-tasks.first-eating');\r\n    additionnalTask.Task2Name = this.translate.instant('selectable-tasks.last-eating');\r\n    additionnalTask.StatName = this.translate.instant('selectable-tasks.fast-duration');\r\n    additionnalTask.StatType1 = StatType.TimeEatStart;\r\n    additionnalTask.StatType2 = StatType.TimeEatStop;\r\n    additionnalTask.GroupName = SelectableTaskService.EveningRoutinesGroupName;\r\n    task11.AbsolutePosition = positionIterator++;\r\n    additionnalTask.AbsolutePositionTask2 = 300;\r\n    task11.AdditionnalTask = additionnalTask;\r\n    tasks.push(task11);\r\n\r\n    const task17 = new SelectableTask(this.translate.instant('selectable-tasks.bed-title'),\r\n                                      null,\r\n                                      TaskFrequency.Daily,\r\n                                      ResultType.Binary,\r\n                                      SelectableTaskService.MorningRoutinesGroupName);\r\n    task17.AbsolutePosition = positionIterator++;\r\n    tasks.push(task17);\r\n\r\n    const task2 = new SelectableTask(this.translate.instant('selectable-tasks.weight-title'),\r\n                                     null,\r\n                                     TaskFrequency.Daily,\r\n                                     ResultType.Decimal,\r\n                                     SelectableTaskService.MorningRoutinesGroupName);\r\n    task2.AbsolutePosition = positionIterator++;\r\n    tasks.push(task2);\r\n\r\n    const task5 = new SelectableTask(this.translate.instant('selectable-tasks.reading-title'),\r\n                                     null,\r\n                                     TaskFrequency.Daily,\r\n                                     ResultType.Duration,\r\n                                     SelectableTaskService.RegularRoutinesGroupName);\r\n    task5.AbsolutePosition = positionIterator++;\r\n    tasks.push(task5);\r\n\r\n    const task20 = new SelectableTask(this.translate.instant('selectable-tasks.audio-title'),\r\n                                      null,\r\n                                      TaskFrequency.Daily,\r\n                                      ResultType.Duration,\r\n                                      SelectableTaskService.RegularRoutinesGroupName);\r\n    task20.AbsolutePosition = positionIterator++;\r\n    tasks.push(task20);\r\n\r\n    const task4 = new SelectableTask(this.translate.instant('selectable-tasks.meditation-title'),\r\n                                     null,\r\n                                     TaskFrequency.Daily,\r\n                                     ResultType.Binary,\r\n                                     SelectableTaskService.RegularRoutinesGroupName);\r\n    task4.AbsolutePosition = positionIterator++;\r\n    tasks.push(task4);\r\n\r\n    const task3 = new SelectableTask(this.translate.instant('selectable-tasks.exercise-title'),\r\n                                     null,\r\n                                     TaskFrequency.Daily,\r\n                                     ResultType.Duration,\r\n                                     SelectableTaskService.RegularRoutinesGroupName);\r\n    task3.AbsolutePosition = positionIterator++;\r\n    tasks.push(task3);\r\n\r\n    const task19 = new SelectableTask(this.translate.instant('selectable-tasks.stretch-title'),\r\n                                      null,\r\n                                      TaskFrequency.Daily,\r\n                                      ResultType.Binary,\r\n                                      SelectableTaskService.RegularRoutinesGroupName);\r\n    task19.AbsolutePosition = positionIterator++;\r\n    tasks.push(task19);\r\n\r\n    const task6 = new SelectableTask(this.translate.instant('selectable-tasks.mail-title'),\r\n                                     null,\r\n                                     TaskFrequency.Daily,\r\n                                     ResultType.Binary,\r\n                                     SelectableTaskService.RegularRoutinesGroupName);\r\n    task6.AbsolutePosition = positionIterator++;\r\n    tasks.push(task6);\r\n\r\n    const task7 = new SelectableTask(this.translate.instant('selectable-tasks.emails-title'),\r\n                                     null,\r\n                                     TaskFrequency.Daily,\r\n                                     ResultType.Binary,\r\n                                     SelectableTaskService.RegularRoutinesGroupName);\r\n    task7.AbsolutePosition = positionIterator++;\r\n    tasks.push(task7);\r\n\r\n    const task9 = new SelectableTask(this.translate.instant('selectable-tasks.clean-title'),\r\n                                     null,\r\n                                     TaskFrequency.Daily,\r\n                                     ResultType.Binary,\r\n                                     SelectableTaskService.RegularRoutinesGroupName);\r\n    task9.AbsolutePosition = positionIterator++;\r\n    tasks.push(task9);\r\n\r\n    const task10 = new SelectableTask(this.translate.instant('selectable-tasks.dishes-title'),\r\n                                      null,\r\n                                      TaskFrequency.Daily,\r\n                                      ResultType.Binary,\r\n                                      SelectableTaskService.RegularRoutinesGroupName);\r\n    task10.AbsolutePosition = positionIterator++;\r\n    tasks.push(task10);\r\n\r\n    const task16 = new SelectableTask(this.translate.instant('selectable-tasks.walk-title'),\r\n                                      null,\r\n                                      TaskFrequency.Daily,\r\n                                      ResultType.Binary,\r\n                                      SelectableTaskService.RegularRoutinesGroupName);\r\n    task16.AbsolutePosition = positionIterator++;\r\n    tasks.push(task16);\r\n\r\n    /*const task18 = new SelectableTask(this.translate.instant('selectable-tasks.floss-title'),\r\n                                      null,\r\n                                      TaskFrequency.Daily,\r\n                                      ResultType.Binary);\r\n    task18.AbsolutePosition = positionIterator++;\r\n    tasks.push(task18);*/\r\n\r\n/*\r\n    const task15 = new SelectableTask(this.translate.instant('selectable-tasks.rating-title'),\r\n                                      this.translate.instant('selectable-tasks.rating-description'),\r\n                                      TaskFrequency.Daily,\r\n                                      ResultType.Decimal);\r\n    task15.AbsolutePosition = 12;\r\n    tasks.push(task15);*/\r\n\r\n    return tasks;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ILocalStorageService } from '../interfaces/i-local-storage-service';\nimport { ILogger } from '../interfaces/i-logger';\nimport { Storage } from '@ionic/storage';\nimport { DTOCalendarTask } from '../models/DTO/dto-calendar-task';\nimport { DTOTaskGroup } from '../models/DTO/dto-task-group';\nimport { DTOTaskHistory } from '../models/DTO/dto-task-history';\nimport { DTOTaskTimer } from '../models/DTO/dto-timer';\nimport { DTOUser } from '../models/DTO/dto-user';\nimport { DTOUserConfig } from '../models/DTO/dto-user-config';\nimport { Platform } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SqliteService implements ILocalStorageService {\n\n  public static currentlyUsed: boolean = false;\n  // TODO: Use non-static variable. For now it's assignation gets lost because of scoping issues\n  public static LAST_READ_CHANGELOG_VERSION_KEY: string = 'lastReadChangelogVersion';\n  public static USER_KEY: string = 'user';\n  public static LastUsedDatabaseReason: string;\n\n  private static database: SQLiteObject;\n  public Initialized: boolean = false;\n  private isMobile: boolean;\n\n  constructor(private sqlite: SQLite,\n              private storage: Storage,\n              private logger: ILogger,\n              private translate: TranslateService,\n              private platform: Platform) {\n\n  }\n\n  public waitForDbAvailable(reason: string): Promise<void> {\n    // throw new Error('Method not implemented.');\n    return;\n  }\n\n  public async initialize(userId: string): Promise<void> {\n    // console.log('initialize SQLite');\n    this.isMobile = this.platform.is('cordova');\n    if (this.isMobile) {\n      // console.log('ISmOBILE');\n      await this.platform.ready();\n      // console.log('platform ready');\n      try {\n        const db = await this.sqlite.create({\n          name: 'hypertask_' + userId + '.db',\n          location: 'default'\n        });\n        SqliteService.database = db;\n        // console.log('this.database:', SqliteService.database);\n\n        /*await SqliteService.database.executeSql(`DROP TABLE IF EXISTS task_group;`, []);\n        await SqliteService.database.executeSql(`DROP TABLE IF EXISTS task_history;`, []);\n        await SqliteService.database.executeSql(`DROP TABLE IF EXISTS user;`, []);\n        await SqliteService.database.executeSql(`DROP TABLE IF EXISTS task_todo;`, []);\n        await SqliteService.database.executeSql(`DROP TABLE IF EXISTS task_timer;`, []);*/\n\n        SqliteService.currentlyUsed = true;\n\n        const result01 = await SqliteService.database.executeSql(`CREATE TABLE IF NOT EXISTS task_group (\n                              \"GROUP_ID\" TEXT NOT NULL,\n                              \"TASK_GROUP_DATA\"\tTEXT NOT NULL,\n                              PRIMARY KEY(\"GROUP_ID\")\n                            );`, []).catch(err => {\n                              console.log('error11 sql:', JSON.stringify(err));\n                            });\n        /*const result02 = await SqliteService.database.executeSql(`CREATE TABLE IF NOT EXISTS task_history (\n                              \"TASK_HISTORY_ID\"\tTEXT NOT NULL,\n                              \"CALENDAR_TASK_ID\" TEXT NOT NULL,\n                              \"TASK_HISTORY_DATA\"\tTEXT NOT NULL,\n                              PRIMARY KEY(\"TASK_HISTORY_ID\")\n                            );`, []).catch(err => {\n                              console.log('error12 sql:', JSON.stringify(err));\n                            });*/\n        const result03 = await SqliteService.database.executeSql(`CREATE TABLE IF NOT EXISTS task_todo (\n                              \"CALENDAR_TASK_ID\" TEXT NOT NULL,\n                              \"CALENDAR_TASK_DATA\" TEXT NOT NULL,\n                              PRIMARY KEY(\"CALENDAR_TASK_ID\")\n                            );`, []).catch(err => {\n                              console.log('error13 sql:', JSON.stringify(err));\n                            });\n        const result04 = await SqliteService.database.executeSql(`CREATE TABLE IF NOT EXISTS task_timer (\n                              TIMER_ID\tTEXT,\n                              TIMER_DATA\tTEXT,\n                              PRIMARY KEY(\"TIMER_ID\")\n                            );`, []).catch(err => {\n                              console.log('error14 sql:', JSON.stringify(err));\n                            });\n        const result05 = await SqliteService.database.executeSql(`CREATE TABLE IF NOT EXISTS user (\n                              \"USER_ID\"\tINTEGER NOT NULL,\n                              \"USER_DATA\"\tTEXT NOT NULL,\n                              PRIMARY KEY(\"USER_ID\")\n                            );`, []).catch(err => {\n                              console.log('error15 sql:', JSON.stringify(err));\n                            });\n\n        /*console.log('result01', JSON.stringify(result01));\n        console.log('result02', JSON.stringify(result02));\n        console.log('result03', JSON.stringify(result03));\n        console.log('result04', JSON.stringify(result04));\n        console.log('result05', JSON.stringify(result05));*/\n\n        // tslint:disable-next-line:max-line-length\n        /*const result = await SqliteService.database.executeSql(`CREATE TABLE IF NOT EXISTS task_timer (TIMER_ID\tTEXT PRIMARY KEY,TIMER_DATA TEXT);`, []).catch(err => {\n          console.log('error sql:', err);\n        });*/\n\n        //console.log('Executed SQL, testing select');\n\n        /*const result2 = await SqliteService.database.executeSql(`SELECT * FROM task_group`, []).catch(err => {\n          console.log('error1 sql:', JSON.stringify(err));\n        });\n        const result4 = await SqliteService.database.executeSql(`SELECT * FROM task_todo`, []).catch(err => {\n          console.log('error3 sql:', JSON.stringify(err));\n        });\n        const result5 = await SqliteService.database.executeSql(`SELECT * FROM task_timer`, []).catch(err => {\n          console.log('error4 sql:', JSON.stringify(err));\n        });\n        const result6 = await SqliteService.database.executeSql(`SELECT * FROM user`, []).catch(err => {\n          console.log('error5 sql:', JSON.stringify(err));\n        });\n        console.log('result2', JSON.stringify(result2));\n        // console.log('result3', JSON.stringify(result3));\n        console.log('result4', JSON.stringify(result4));\n        console.log('result5', JSON.stringify(result5));\n        console.log('result6', JSON.stringify(result6));\n\n        const result22 = await SqliteService.database.executeSql(`PRAGMA table_info(task_group);`, []).catch(err => {\n          console.log('error21 sql:', JSON.stringify(err));\n        });\n        const result24 = await SqliteService.database.executeSql(`PRAGMA table_info(task_todo);`, []).catch(err => {\n          console.log('error23 sql:', JSON.stringify(err));\n        });\n        const result25 = await SqliteService.database.executeSql(`PRAGMA table_info(task_timer);`, []).catch(err => {\n          console.log('error24 sql:', JSON.stringify(err));\n        });\n        const result26 = await SqliteService.database.executeSql(`PRAGMA table_info(user);`, []).catch(err => {\n          console.log('error25 sql:', JSON.stringify(err));\n        });\n        console.log('result22', JSON.stringify(result22.rows.item(0)));\n        console.log('result22', JSON.stringify(result22.rows.item(1)));\n        console.log('result24', JSON.stringify(result24.rows.item(0)));\n        console.log('result24', JSON.stringify(result24.rows.item(1)));\n        console.log('result25', JSON.stringify(result25.rows.item(0)));\n        console.log('result25', JSON.stringify(result25.rows.item(1)));\n        console.log('result26', JSON.stringify(result26.rows.item(0)));\n        console.log('result26', JSON.stringify(result26.rows.item(1)));*/\n\n        this.Initialized = true;\n        SqliteService.currentlyUsed = false;\n        console.log('Executed SQL7, isInitialized = true');\n      } catch (error) {\n        console.error('Error executing initialize7', error);\n        console.log(error);\n        this.logger.logError(new Error('Error initializing database'));\n      }\n    }\n  }\n\n  async terminate(): Promise<void> {\n    // await this.waitForDbAvailable('terminate');\n    this.Initialized = false;\n  }\n\n  setCalendarTasks(tasks: DTOCalendarTask[], alreadyUsed: boolean): Promise<boolean> {\n    // DONT NEED ANYMORE\n    throw new Error('Method not implemented.');\n  }\n\n  public async getCalendarTasks(alreadyUsed: boolean): Promise<DTOCalendarTask[]> {\n    // console.log('getCalendarTasks', new Date());\n    const query = 'SELECT * FROM task_todo';\n    const data = await SqliteService.database.executeSql(query, []);\n    // console.log('getCalendarTasks got data', new Date());\n    const tasks: DTOCalendarTask[] = [];\n    if (data.rows.length > 0) {\n      for (let i = 0; i < data.rows.length; i++) {\n        // console.log('item:', data.rows.item(i));\n        tasks.push(JSON.parse(data.rows.item(i).CALENDAR_TASK_DATA));\n      }\n    }\n\n    // console.log('ALLTASKS HISTORIES:' + JSON.stringify(tasks[0].Histories));\n\n    // console.log('getCalendarTasks got data 2', new Date());\n\n    // console.log('tasks: ', JSON.stringify(tasks));\n\n    /*const query2 = 'SELECT * FROM task_history'; // TODO : UserID ?\n    const data2 = await SqliteService.database.executeSql(query2, []);\n\n    console.log('getCalendarTasks got data 3', new Date());\n\n    const Histories: DTOTaskHistory[] = [];\n    if (data2.rows.length > 0) {\n      for (let i = 0; i < data2.rows.length; i++) {\n        // console.log('item:', data2.rows.item(i));\n        Histories.push(JSON.parse(data2.rows.item(i).TASK_HISTORY_DATA));\n      }\n    }*/\n\n    /*const tasksDict = tasks.reduce((a, x) => ({...a, [x.CalendarTaskId]: x}), {});\n\n    for (const history of Histories) {\n      // console.log('history', history);\n      tasksDict[history.CalendarTaskId].Histories.push(history);\n    }*/\n\n    // console.log('getCalendarTasks got data 6', new Date());\n\n    // console.log('histories: ', JSON.stringify(Histories));\n    // console.log('tasks2: ', JSON.stringify(tasks));\n    return tasks;\n  }\n\n  async insertCalendarTask(task: DTOCalendarTask): Promise<void> {\n    // console.log('insertCalendarTask');\n    // task.Histories = [];\n    const data = [task.CalendarTaskId, JSON.stringify(task)];\n    // console.log('insertCalendarTask2 data', data);\n    await SqliteService.database.executeSql('INSERT INTO task_todo (CALENDAR_TASK_ID,CALENDAR_TASK_DATA) VALUES (?, ?)', data);\n  }\n\n  async insertCalendarTasks(tasks: DTOCalendarTask[]): Promise<any> {\n    // console.log('insertCalendarTasks');\n    for (const task of tasks) {\n      // task.Histories = [];\n      await this.insertCalendarTask(task);\n    }\n  }\n\n  async updateCalendarTask(task: DTOCalendarTask, synced: boolean): Promise<any> {\n    // task.Histories = [];\n    const data = [JSON.stringify(task), task.CalendarTaskId];\n    // console.log('updateCalendarTask data', data);\n    await SqliteService.database.executeSql('UPDATE task_todo SET CALENDAR_TASK_DATA = ? WHERE CALENDAR_TASK_ID = ?', data);\n  }\n\n  async updateCalendarTasks(tasks: DTOCalendarTask[], synced: boolean): Promise<any> {\n    // console.log('updateCalendarTask');\n    for (const task of tasks) {\n      // task.Histories = [];\n      await this.updateCalendarTask(task, synced);\n    }\n  }\n\n  async updateSyncedCalendarTask(task: DTOCalendarTask, alreadyLocked: boolean): Promise<any> {\n    console.log('updateSyncedCalendarTask');\n    // throw new Error('Method not implemented.');\n    // ??\n  }\n\n  async insertTaskHistory(history: DTOTaskHistory): Promise<any> {\n    console.log('insertTaskHistory, might have to do sync stuff', history);\n    /*const data = [history.TaskHistoryId, JSON.stringify(history), history.CalendarTaskId];\n    // tslint:disable-next-line:max-line-length\n    await SqliteService.database.executeSql('INSERT INTO task_history (TASK_HISTORY_ID,TASK_HISTORY_DATA,CALENDAR_TASK_ID) VALUES (?, ?, ?)', data);*/\n    const task = await this.getCalendarTask(history.CalendarTaskId);\n    // console.log('task', task);\n    task.Histories.push(history);\n    await this.updateCalendarTask(task, false);\n  }\n\n  async getCalendarTask(calendarTaskId: string): Promise<DTOCalendarTask> {\n    const query = `SELECT * FROM task_todo where CALENDAR_TASK_ID = '${ calendarTaskId }'`;\n    const data = await SqliteService.database.executeSql(query, []);\n    // console.log('getCalendarTasks got data', new Date());\n    if (data.rows.length > 0) {\n      return JSON.parse(data.rows.item(0).CALENDAR_TASK_DATA);\n    } else {\n      return null;\n    }\n  }\n\n  async insertTaskHistories(histories: DTOTaskHistory[]): Promise<any> {\n    console.log('insertTaskHistories');\n    for (const history of histories) {\n      await this.insertTaskHistory(history);\n    }\n  }\n\n  async updateTaskHistory(history: DTOTaskHistory): Promise<any> {\n    //console.log('updateTaskHistory', history);\n    /*const data = [JSON.stringify(history), history.CalendarTaskId, history.TaskHistoryId];\n    // tslint:disable-next-line:max-line-length\n    await SqliteService.database.executeSql('UPDATE task_history SET TASK_HISTORY_DATA = ?, CALENDAR_TASK_ID = ? WHERE TASK_HISTORY_ID = ?', data);*/\n\n    const task = await this.getCalendarTask(history.CalendarTaskId);\n    const historyIndex = task.Histories.findIndex(p => p.TaskHistoryId === history.TaskHistoryId); // TODO: USE MAP ?\n    if (historyIndex === -1) {\n      this.logger.logError(new Error('Unable to find task history while setting as synced3'),\n                           {\n                             key: 'task.Histories',\n                             value: JSON.stringify(task.Histories)\n                           });\n      this.logger.logError(new Error('Unable to find task history while setting as synced4'),\n                           {\n                             key: 'newHistoryId',\n                             value: JSON.stringify(history.TaskHistoryId)\n                           });\n    } else {\n      task.Histories[historyIndex] = history;\n      await this.updateCalendarTask(task, false);\n    }\n  }\n\n  async updateTaskHistories(histories: DTOTaskHistory[]): Promise<any> {\n    // console.log('updateTaskHistories');\n    for (const history of histories) {\n      await this.updateTaskHistory(history);\n    }\n  }\n\n  public async updateSyncedTaskHistory(history: DTOTaskHistory, alreadyLocked: boolean): Promise<any> {\n    // this.logger.logDebug('lock (updateSyncedTaskHistory)');\n    try {\n      // if (alreadySynced === false) {\n      SqliteService.currentlyUsed = true;\n      SqliteService.LastUsedDatabaseReason = 'updateSyncedTaskHistory' + (new Date()).toISOString();\n      // }\n\n      await this.updateTaskHistory(history);\n\n      return;\n    } catch (error) {\n      this.logger.logError(new Error('unable to read from local database updateSyncedTaskHistory19 ' + error));\n      alert('unable to read from local database 98');\n      return;\n    }\n    // ??\n  }\n\n  async clear(): Promise<void> {\n    await SqliteService.database.executeSql(`DELETE FROM task_group`, []);\n    await SqliteService.database.executeSql(`DELETE FROM user`, []);\n    await SqliteService.database.executeSql(`DELETE FROM task_todo`, []);\n    await SqliteService.database.executeSql(`DELETE FROM task_timer`, []);\n    console.log('deleted all');\n\n    /*const result2 = await SqliteService.database.executeSql(`SELECT * FROM task_group`, []).catch(err => {\n      console.log('error1 sql:', JSON.stringify(err));\n    });\n    const result4 = await SqliteService.database.executeSql(`SELECT * FROM task_todo`, []).catch(err => {\n      console.log('error3 sql:', JSON.stringify(err));\n    });\n    const result5 = await SqliteService.database.executeSql(`SELECT * FROM task_timer`, []).catch(err => {\n      console.log('error4 sql:', JSON.stringify(err));\n    });\n    const result6 = await SqliteService.database.executeSql(`SELECT * FROM user`, []).catch(err => {\n      console.log('error5 sql:', JSON.stringify(err));\n    });\n    console.log('result2', JSON.stringify(result2));\n    console.log('result4', JSON.stringify(result4));\n    console.log('result5', JSON.stringify(result5));\n    console.log('result6', JSON.stringify(result6));*/\n  }\n\n  public async shouldViewChangeLog(currentVersion: string): Promise<boolean> {\n    //await this.storage.ready;\n    const lastReadVersion = await this.storage.get(SqliteService.LAST_READ_CHANGELOG_VERSION_KEY);\n\n    if (lastReadVersion != null) {\n      if (lastReadVersion !== currentVersion) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      this.storage.set(SqliteService.LAST_READ_CHANGELOG_VERSION_KEY, currentVersion);\n      return false;\n    }\n  }\n\n  public async setChangeLogToViewed(currentVersion: string): Promise<boolean> {\n    await this.storage.set(SqliteService.LAST_READ_CHANGELOG_VERSION_KEY, currentVersion);\n    return true;\n  }\n\n  public async getUser(userId: string): Promise<DTOUser> {\n    //console.log('getUser');\n    // console.log('getting user from local (awaiting)');\n    // await this.lockLocalStorage(false, 'getUser');\n    // console.log('getting user from local');\n    SqliteService.LastUsedDatabaseReason = 'getUser ' + (new Date()).toISOString();\n\n    try {\n      const user = await this.storage.get(SqliteService.USER_KEY + userId) as DTOUser;\n\n      //console.log('gotUser');\n      // console.log('got user');\n      if (user.Config.Configs == null || user.Config.Configs.length == null) {\n        // console.log('INITIALIZING NEW CONFIGS');\n        user.Config = new DTOUserConfig();\n      } /*else {\n        console.log('USER CONFIG', user, user.Config.Configs.length);\n        console.log('USER', user);\n      }*/\n      return user;\n    } catch (error) {\n      // console.log('cant get local user (normal first usage)');\n      // this.logger.logError(new Error('unable to read user from local database')); Removed log because this is normal when first install\n      // Cant display this because it happens when we create a new account\n      // alert('unable to read user from local database');\n      return null;\n    } /*finally {\n      this.unlockLocalStorage(false);\n    }*/\n  }\n\n  public async setUser(user: DTOUser, alreadyLocked: boolean = false): Promise<void> {\n    //console.log('setUser');\n    // await this.lockLocalStorage(alreadyLocked, 'setUser');\n    SqliteService.LastUsedDatabaseReason = 'setUser ' + (new Date()).toISOString();\n\n    try {\n      // console.log('SETTING USER LOCALLY : ', user);\n      //await this.storage.ready();\n      await this.storage.set(SqliteService.USER_KEY + user.UserId, user);\n      return;\n    } catch (error) {\n      // console.error('error');\n      this.logger.logError(new Error('unable to set user in local database'));\n      alert('unable to set user in local database');\n      return null;\n    } /*finally {\n      this.unlockLocalStorage(false);\n    }*/\n  }\n\n  public async getTimers(alreadyReadOnly: boolean): Promise<DTOTaskTimer[]> {\n    //console.log('getTimers');\n    // await this.waitForDbAvailable('getTimers');\n    const query = 'SELECT * FROM task_timer';\n    //console.log('this.database2:', SqliteService.database);\n    const data = await SqliteService.database.executeSql(query, []);\n    const timers: DTOTaskTimer[] = [];\n    if (data.rows.length > 0) {\n      for (let i = 0; i < data.rows.length; i++) {\n        // console.log('item timer:', data.rows.item(i));\n        timers.push(JSON.parse(data.rows.item(i).TIMER_DATA));\n      }\n    }\n\n    //console.log('timers: ', timers);\n    return timers;\n  }\n\n  public async setTimers(timers: DTOTaskTimer[], alreadyReadOnly: boolean): Promise<void> {\n    //console.log('SET TIMERS');\n    for (const timer of timers) {\n      await this.insertTimer(timer);\n    }\n  }\n\n  public async insertTimer(timer: DTOTaskTimer): Promise<void> {\n    //console.log('insertTimer');\n    const data = [timer.TimerId, JSON.stringify(timer)];\n    await SqliteService.database.executeSql('INSERT INTO task_timer (TIMER_ID,TIMER_DATA) VALUES (?, ?)', data);\n  }\n\n  public async updateTimer(timer: DTOTaskTimer): Promise<void> {\n    //console.log('updateTimer');\n    const data = [JSON.stringify(timer), timer.TimerId];\n    await SqliteService.database.executeSql('UPDATE task_timer set TIMER_DATA = ? WHERE TIMER_ID = ?', data);\n  }\n\n  public async getGroups(alreadyLocked: boolean): Promise<DTOTaskGroup[]> {\n    //console.log('getGroups');\n    const query = 'SELECT * FROM task_group';\n    const data = await SqliteService.database.executeSql(query, []);\n    const groups: DTOTaskGroup[] = [];\n    if (data.rows.length > 0) {\n      for (let i = 0; i < data.rows.length; i++) {\n        groups.push(JSON.parse(data.rows.item(i).TASK_GROUP_DATA));\n      }\n    }\n\n    //console.log('groups: ', groups);\n    return groups;\n  }\n\n  public async setGroups(groups: DTOTaskGroup[], alreadyReadOnly: boolean): Promise<boolean> {\n    // console.log('Settings groups');\n    await this.insertGroups(groups);\n    return true;\n  }\n\n  public async setGroupsAndTasks(groups: DTOTaskGroup[], tasks: DTOCalendarTask[]): Promise<boolean> {\n    // console.log('setGroupsAndTasks', groups, tasks);\n    // throw new Error('Method not implemented.');\n    // remove this\n    await this.insertGroups(groups);\n    await this.insertCalendarTasks(tasks);\n    return true;\n  }\n\n  public async insertGroup(group: DTOTaskGroup): Promise<void> {\n    // console.log('insertGroup');\n    const data = [group.GroupId, JSON.stringify(group)];\n    await SqliteService.database.executeSql('INSERT INTO task_group (GROUP_ID,TASK_GROUP_DATA) VALUES (?, ?)', data);\n  }\n\n  public async insertGroups(groups: DTOTaskGroup[]): Promise<void> {\n    // console.log('insertGroups');\n    for (const group of groups) {\n      await this.insertGroup(group);\n    }\n  }\n\n  public async updateGroup(group: DTOTaskGroup, alreadyLocked: boolean): Promise<void> {\n    // console.log('updateGroup');\n    const data = [JSON.stringify(group), group.GroupId];\n    await SqliteService.database.executeSql('UPDATE task_group set TASK_GROUP_DATA = ? WHERE GROUP_ID = ?', data);\n  }\n\n  public async updateGroups(groups: DTOTaskGroup[], alreadyLocked: boolean): Promise<void> {\n    for (const group of groups) {\n      await this.updateGroup(group, alreadyLocked);\n    }\n  }\n\n  public async updateSyncedGroup(group: DTOTaskGroup): Promise<any> {\n    try {\n      await this.updateGroup(group, false);\n      // this.logger.logDebug('## updateSyncedTaskHistory SET CALENDAR TASKS');\n      return;\n    } catch (error) {\n      this.logger.logError(new Error('unable to read from local database updateSyncedTaskHistory1 ' + error));\n      alert('unable to read from local database 9');\n      return;\n    }\n  }\n\n  /*private unlockLocalStorage(alreadyLocked: boolean): void {\n    if (alreadyLocked === false) {\n      // console.log('[UNLOCK]');\n      SqliteService.currentlyUsed = false;\n    }Unable to find task history while setting as syncedUnable to find task history while setting as synced\n  }\n\n  private async lockLocalStorage(alreadyLocked: boolean, reason: string): Promise<void> {\n    if (alreadyLocked === false) {\n      console.log('[ATTEMPTING LOCK]', reason);\n      await this.waitForDbAvailable('lockLocalStorage ' + reason);\n      // console.log('[LOCK SUCCESSFUL]');\n      SqliteService.currentlyUsed = true;\n      return;\n    }\n\n    return;\n  }*/\n\n  /*public async waitForDbAvailable(reason: string): Promise<void> {\n    if (SqliteService.currentlyUsed === true) {\n      for (let i = 0; i < 30; i++) {\n        // console.log('----- CURRENTLY USED BY ' + SqliteService.LastUsedDatabaseReason + ', FOR ' +\n        //         reason + ' WAITING, CURRENT DATE = ', new Date().toISOString());\n        await ThreadUtils.sleep(1000);\n        if (this.dbAvailable()) {\n          this.logger.logDebug('available after i=', i.toString());\n          return;\n        }\n      }\n\n      this.logger.logError(new Error('database is locked'), { key: 'reason', value: SqliteService.LastUsedDatabaseReason });\n      alert(this.translate.instant('local-storage.database-locked'));\n      throw new DatabaseLockedError('database is locked');\n    } else {\n      // console.log('CURRENTLY NOT USED, RETURNING');\n      return;\n    }\n  }*/\n\n  /*private dbAvailable() {\n    return SqliteService.currentlyUsed === false;\n  }*/\n}\n","import { Injectable } from '@angular/core';\r\nimport { TaskHistory } from '../models/Core/task-history';\r\nimport { CalendarTaskService } from './calendar-task.service';\r\nimport { IDataSyncLocalService } from '../interfaces/i-data-sync-local-service';\r\nimport { ILogger } from '../interfaces/i-logger';\r\nimport { TaskHistoryAlreadyExistsError } from '../models/Exceptions/TaskHistoryAlreadyExistsError';\r\nimport { EventData, EventService } from './event.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskHistoryService {\r\n\r\n  constructor(private localDataSync: IDataSyncLocalService,\r\n              private taskService: CalendarTaskService,\r\n              private logger: ILogger,\r\n              private eventService: EventService) { }\r\n\r\n  public async insertTaskHistory(history: TaskHistory): Promise<boolean> {\r\n\r\n    history.UpdateDate = new Date();\r\n    history.InsertDate = new Date();\r\n\r\n    this.eventService.emit(new EventData(EventService.EventIds.SyncRequired, null));\r\n    // console.log('insertTaskHistory', history);\r\n    const task = this.taskService.getTask(history.CalendarTaskId);\r\n    // console.log('inserting local with sent false', task);\r\n    if (task.Histories.some(p => p.TaskHistoryId === history.TaskHistoryId)) {\r\n      this.logger.logError(new Error('Task History already exists'));\r\n      throw new TaskHistoryAlreadyExistsError('historyId = ' + history.TaskHistoryId);\r\n    }\r\n    task.Histories.push(history);\r\n    history.Sent = false;\r\n    this.taskService.SetHistoriesMap(task); // todo this should not be here ?\r\n    // console.log('inserted local with sent false', task, task);\r\n    this.localDataSync.queueInsertTaskHistory(history.toDTO());\r\n    // this.logger.logDebug('queueInsertTaskHistory', JSON.stringify(history.toDTO()));\r\n    return true;\r\n  }\r\n\r\n  public async updateTaskHistory(history: TaskHistory): Promise<boolean> {\r\n\r\n    history.UpdateDate = new Date();\r\n\r\n    // console.log('updateTaskHistory', history);\r\n    // this.logger.logDebug('UpdateTaskHistory', JSON.stringify(history));\r\n\r\n    this.eventService.emit(new EventData(EventService.EventIds.SyncRequired, null));\r\n\r\n    history.Synced = false;\r\n    const task = this.taskService.getTask(history.CalendarTaskId);\r\n    const index = task.Histories.findIndex(p => p.TaskHistoryId === history.TaskHistoryId); // TODO : Use MAP\r\n    task.Histories[index] = history;\r\n    this.taskService.SetHistoriesMap(task); // todo this should not be here ?\r\n    this.localDataSync.queueUpdateTaskHistory(history.toDTO());\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TaskStats } from '../models/Core/task-stat';\r\nimport { CalendarTaskService } from './calendar-task.service';\r\nimport { CalendarTask } from '../models/Core/calendar-task';\r\nimport DateUtils from '../shared/date-utils';\r\nimport { DatePipe } from '@angular/common';\r\nimport { ResultType } from '../models/Core/result-type.enum';\r\nimport { StatType } from '../models/Core/custom-stat.enum';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TaskHistory } from '../models/Core/task-history';\r\nimport { DateService } from './date.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TaskStatsService {\r\n\r\n  public minusDaysArray: number [] = [6, 5, 4, 3, 2, 1, 0];\r\n\r\n  constructor(private calendarTaskService: CalendarTaskService,\r\n              private datepipe: DatePipe,\r\n              private translate: TranslateService,\r\n              private dateService: DateService) { }\r\n\r\n  public getTaskStats(calendarTaskId: string,\r\n                      currentWorkDate: Date,\r\n                      minusWeeks: number): TaskStats {\r\n    // console.log('getTaskStats start', new Date().toISOString());\r\n    const taskStats = new TaskStats();\r\n    const task = this.calendarTaskService.getTask(calendarTaskId);\r\n\r\n    taskStats.resultType = task.ResultType;\r\n    taskStats.StartingMinusDays = minusWeeks > 0 ?\r\n                                    task.MinimumStartingMinusDay :\r\n                                    0;\r\n    taskStats.MinusWeeksArray = minusWeeks > 0 ?\r\n                                  this.getMinusWeeksArray(minusWeeks, taskStats.StartingMinusDays) :\r\n                                  [];\r\n    taskStats.Name = task.Name;\r\n    // console.log('-=-=-=- GetTaskStats');\r\n    taskStats.TaskInsertWorkDate = this.dateService.GetWorkDate(task.InsertDate);\r\n\r\n    for (const minusWeek of taskStats.MinusWeeksArray) {\r\n      for (const minusDay of this.minusDaysArray) {\r\n        const minusDays = minusWeek * 7 + minusDay;\r\n        // console.log('loop minusDays', minusDays, new Date().toISOString());\r\n        const targetDate = DateUtils.AddDays(currentWorkDate, - minusDays);\r\n        const history = this.calendarTaskService.getTaskHistoryNoVoid(task, targetDate);\r\n        taskStats.results.push(this.getPreviousDayResult(task,\r\n                                                         history));\r\n        taskStats.doneDays.push(this.previousDayDone(history));\r\n        taskStats.skippedDays.push(this.previousDaySkipped(history));\r\n      }\r\n    }\r\n\r\n    // console.log('getTaskStats done', new Date().toISOString());\r\n\r\n    return taskStats;\r\n  }\r\n\r\n  public getCustomStats(currentWorkDate: Date,\r\n                        minusWeeks: number,\r\n                        taskType1: StatType,\r\n                        taskType2: StatType,\r\n                        statName: string): TaskStats {\r\n    const taskStats = new TaskStats();\r\n    const task1 = this.calendarTaskService.getTaskFromStatType(taskType1);\r\n    const task2 = this.calendarTaskService.getTaskFromStatType(taskType2);\r\n\r\n    if (task1 == null || task2 == null) {\r\n      return;\r\n    }\r\n\r\n    taskStats.Name = statName;\r\n    taskStats.TaskInsertWorkDate = this.dateService.GetWorkDate(task1.InsertDate);\r\n    taskStats.resultType = ResultType.TimeOfDay;\r\n    taskStats.StartingMinusDays = minusWeeks > 0 ?\r\n                                    task1.MinimumStartingMinusDay :\r\n                                    0;\r\n    taskStats.MinusWeeksArray = minusWeeks > 0 ?\r\n                                  this.getMinusWeeksArray(minusWeeks, taskStats.StartingMinusDays) :\r\n                                  [];\r\n\r\n    for (const minusWeek of taskStats.MinusWeeksArray) {\r\n      for (const minusDay of this.minusDaysArray) {\r\n\r\n        const minusDaysUp = minusWeek * 7 + minusDay;\r\n        const minusDaysSleep = minusWeek * 7 + minusDay + 1;\r\n\r\n        const targetDateUp = DateUtils.AddDays(currentWorkDate, - minusDaysUp);\r\n        const targetDateSleep = DateUtils.AddDays(currentWorkDate, - minusDaysSleep);\r\n\r\n        const history1 = this.calendarTaskService.getTaskHistoryNoVoid(task1, targetDateUp);\r\n        const history2 = this.calendarTaskService.getTaskHistoryNoVoid(task2, targetDateSleep);\r\n\r\n        const date1 = this.getPreviousDayResultDate(history1);\r\n\r\n        const date2 = this.getPreviousDayResultDate(history2);\r\n\r\n        // TODO : Filter Invalid Data\r\n        // if (taskStats. date2.getHours() )\r\n\r\n        // TODO : const EndOfDayCutOff\r\n\r\n        if (date1 == null || date2 == null) {\r\n          taskStats.results.push('n/a');\r\n        } else {\r\n          const diffTOtal = DateUtils.getHHmmFromTimeDifferences(date1, date2);\r\n\r\n          taskStats.results.push(diffTOtal);\r\n        }\r\n\r\n        const previousDaySkipped = taskStats.results[taskStats.results.length - 1].includes('n/a');\r\n        taskStats.skippedDays.push(previousDaySkipped);\r\n        taskStats.doneDays.push(!previousDaySkipped);\r\n      }\r\n    }\r\n\r\n    return taskStats;\r\n  }\r\n\r\n  public getSleepDurationStats(currentWorkDate: Date,\r\n                               minusWeeks: number): TaskStats {\r\n    return this.getCustomStats(currentWorkDate,\r\n                               minusWeeks,\r\n                               StatType.TimeUp,\r\n                               StatType.TimeSleep,\r\n                               this.translate.instant('task-stats.hours-of-sleep'));\r\n  }\r\n\r\n  public getTimeRestrictedDurationStats(currentWorkDate: Date,\r\n                                        minusWeeks: number): TaskStats {\r\n    return this.getCustomStats(currentWorkDate,\r\n                              minusWeeks,\r\n                              StatType.TimeNonWaterStart,\r\n                              StatType.TimeNonWaterStop,\r\n                              this.translate.instant('task-stats.time-restricted-duration'));\r\n  }\r\n\r\n  public getFastingDurationStats(currentWorkDate: Date,\r\n                                 minusWeeks: number): TaskStats {\r\n    return this.getCustomStats(currentWorkDate,\r\n                              minusWeeks,\r\n                              StatType.TimeEatStart,\r\n                              StatType.TimeEatStop,\r\n                              this.translate.instant('task-stats.fasting-duration'));\r\n    }\r\n\r\n  public getPreviousDayResult(currentTask: CalendarTask,\r\n                              history: TaskHistory): string {\r\n    // console.log('Origin GetPreviousDayResult');\r\n\r\n    if (history != null && history.TaskResult != null) {\r\n      if (currentTask.isTime()) {\r\n        return this.datepipe.transform(history.TaskResult, 'HH:mm');\r\n      } else {\r\n        return String(history.TaskResult);\r\n      }\r\n    } else {\r\n      return ' n/a ';\r\n    }\r\n  }\r\n\r\n  public getPreviousDayResultDate(history: TaskHistory): Date {\r\n    if (history != null && history.TaskResult != null) {\r\n      // console.log('GETPreviousDayResultDate', history);\r\n      return new Date(history.TaskResult);\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public getPreviousDayDuration(history: TaskHistory): string {\r\n    return history.getDurationString();\r\n  }\r\n\r\n  private previousDaySkipped(history: TaskHistory): boolean {\r\n    if (history == null) {\r\n      return true;\r\n    } else if (history.TaskResult == null && history.TaskDone !== true) { // TODO: Result should be true for binary\r\n      return true;\r\n    } else if (history.TaskSkipped) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  private previousDayDone(history: TaskHistory): boolean {\r\n    return history.TaskDone === true;\r\n  }\r\n\r\n  public getMinusWeeksArray(weeksBehind: number,\r\n                            startingMinDays: number): number[] {\r\n    const minusWeeksArray: number[] = [];\r\n    let startingWeek = Math.ceil(startingMinDays / 7);\r\n    if (startingWeek === 0) {\r\n      startingWeek = 1;\r\n    }\r\n\r\n    if (weeksBehind > startingWeek) {\r\n      weeksBehind = startingWeek;\r\n    }\r\n\r\n    for (let i = 0; i < weeksBehind; i++) {\r\n      minusWeeksArray.push(weeksBehind - i - 1);\r\n    }\r\n\r\n    // console.log('minusWeeksArray', minusWeeksArray, startingMinDays, weeksBehind, startingWeek);\r\n\r\n    return minusWeeksArray;\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { TaskTimer } from '../models/Core/task-timer';\r\nimport DateUtils from '../shared/date-utils';\r\nimport { ILogger } from '../interfaces/i-logger';\r\nimport { IDataSyncLocalService } from '../interfaces/i-data-sync-local-service';\r\nimport { ILocalStorageService } from '../interfaces/i-local-storage-service';\r\nimport { AlertService } from './alert.service';\r\nimport { AlertOptions } from '@ionic/core';\r\nimport { CalendarTaskService } from './calendar-task.service';\r\nimport { AlertController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TimerService {\r\n\r\n  public allTimers: TaskTimer[] = [];\r\n\r\n  constructor(private logger: ILogger,\r\n              private localSync: IDataSyncLocalService,\r\n              private local: ILocalStorageService,\r\n              private alertService: AlertService,\r\n              private alertCtrl: AlertController,\r\n              private calendarTaskService: CalendarTaskService) { }\r\n\r\n  public async addTimer(timer: TaskTimer): Promise<void> {\r\n    // this.logger.logEvent('addTimer', { key: 'timer', value: JSON.stringify(timer)});\r\n    this.logger.logDebug('addTimer');\r\n    // this.logger.logDebug('addTimer', JSON.stringify(timer));\r\n\r\n    const timers = this.allTimers.filter(p => p.CalendarTaskId === timer.CalendarTaskId &&\r\n                                              p.isDone === false &&\r\n                                              p.isVoid === false &&\r\n                                              DateUtils.datesAreEqual(p.TimerDate, timer.TimerDate));\r\n\r\n    if (timers.length > 0) {\r\n      alert('timers for same taskid already exists : ' + timers[0].CalendarTaskId);\r\n      // alert('timers for same taskid already exists : ' + JSON.stringify(timers));\r\n      // this.logger.logDebug('timers for same taskid already exists : ', JSON.stringify(timers));\r\n      this.logger.logDebug('timers for same taskid already exists : ' + timers[0].CalendarTaskId);\r\n    }\r\n\r\n    this.allTimers.push(timer);\r\n    await this.localSync.queueInsertTimer(timer.toDTO());\r\n  }\r\n\r\n  public async updateTimer(timer: TaskTimer): Promise<void> {\r\n    // console.log('UPDATING TIMER', timer);\r\n    const dto = timer.toDTO();\r\n    await this.localSync.queueUpdateTimer(dto);\r\n  }\r\n\r\n  public async voidTimer(timer: TaskTimer): Promise<void> {\r\n    const dto = timer.toDTO();\r\n    dto.isVoid = true;\r\n    await this.localSync.queueUpdateTimer(dto);\r\n\r\n    const index = this.allTimers.findIndex(p => p.TimerId === timer.TimerId);\r\n    this.allTimers.splice(index, 1);\r\n  }\r\n\r\n  /* Returns null if we can't find timer */\r\n  public async getTimer(date: Date,\r\n                        calendarTaskId: string): Promise<TaskTimer> {\r\n\r\n    // console.log('GET TIMER calendarTaskId', calendarTaskId, this.allTimers, date);\r\n    /*if (calendarTaskId === 'XpcSrbVi3b8AMEwUJ8Lq') {\r\n      console.log('this.allTimers', this.allTimers);\r\n      this.logger.logEvent('getTimer1', { key: 'date', value: JSON.stringify(date)});\r\n      this.logger.logEvent('getTimer2', { key: 'TimerDate', value: JSON.stringify(this.allTimers.map(p => p.TimerDate))});\r\n    }*/\r\n\r\n    // console.log('[0]datesAreEqual');\r\n\r\n    const timers = this.allTimers.filter(p => p.CalendarTaskId === calendarTaskId &&\r\n                                              p.isDone === false &&\r\n                                              p.isVoid === false &&\r\n                                              DateUtils.datesAreEqual(p.TimerDate, date));\r\n\r\n    //console.log('TIMERS : ', timers);\r\n\r\n    if (timers.length > 0) {\r\n      if (timers.length > 1) {\r\n        alert('Multiple timers for same taskid');\r\n        //this.logger.logDebug('MULTIPLE TIMERS FOR SAME TASKID', timers[9].CalendarTaskId);\r\n        // this.logger.logDebug('MULTIPLE TIMERS FOR SAME TASKID', JSON.stringify(timers));\r\n        // Delete extra timers but we need to find the source of this\r\n        if (timers.length > 0) {\r\n          for (let i = 1; i < timers.length ; i++) {\r\n            await this.voidTimer(timers[i]);\r\n          }\r\n        }\r\n        return timers[0];\r\n      } /*else {\r\n        console.log('ONE TIMER RETRIEVED', timers[0]);\r\n      }*/\r\n      return timers[0];\r\n    } else {\r\n      /*if (calendarTaskId === 'XpcSrbVi3b8AMEwUJ8Lq') {\r\n        this.logger.logEvent('logger is null', { key: 'this.allTimers', value: JSON.stringify(this.allTimers)});\r\n      }*/\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public async loadTimersFromDatabase(): Promise<void> {\r\n    const dtos = await this.local.getTimers(false);\r\n    this.allTimers = dtos.filter(p => p.isVoid !== true).map(p => TaskTimer.fromDTO(p));\r\n\r\n    //console.log('TIMERS FROM DATABASE', this.allTimers);\r\n\r\n    for (const timer of this.allTimers) {\r\n      // RUNNING TIMER\r\n      if (timer.isPaused === false && timer.isDone === false) {\r\n        // console.log('ACTIVATING STARTED TIMER', timer);\r\n\r\n        timer.currentTimerSeconds = Number(DateUtils.getTimeSince(timer.StartDate)) / 1000 + timer.currentTimerSeconds;\r\n        timer.start();\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  /* Returns null if we can't find timer */\r\n  public anyTimerOn(): boolean {\r\n    const result = this.allTimers.some(p => p.isPaused === false &&\r\n                                            p.isDone === false);\r\n\r\n    if (result === true) {\r\n      this.logger.logDebug('TIMERS ON :', JSON.stringify(this.allTimers.filter(p => p.isPaused === false &&\r\n                                                                                    p.isDone === false)));\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Checks if there are old timers still running and either dismiss them or ask user\r\n   * if he wants to keep them\r\n   */\r\n  public async checkForOldTimer() {\r\n    for (const timer of this.allTimers) {\r\n      // IF TIMER IS OVER 24 HOURS AGO AUTOMATICALLY DISMISS IT\r\n      if (timer.isKeepLongTimer !== true &&\r\n          DateUtils.daysBetween(timer.StartDate, new Date()) > 1) {\r\n        // console.log('Automatically dismiss old timer : ', timer);\r\n        timer.cancel();\r\n        this.voidTimer(timer);\r\n        // this.eventService.emit(new EventData(EventService.EventIds.CardReset + this.currentTaskId, true));\r\n      }\r\n\r\n      // IF TIMER IS > 10 HOURS SHOW ALERT TO DISMISS IT\r\n      if (timer.isKeepLongTimer !== true &&\r\n          timer.currentTimerSeconds >= 60 * 60 * 10) {\r\n        const handlerCancel: (alertData: any) => void = (alertData) => {\r\n          timer.isKeepLongTimer = true;\r\n          this.updateTimer(timer);\r\n        };\r\n\r\n        const handlerOk: (alertData: any) => void = (alertData) => {\r\n          timer.cancel();\r\n          this.voidTimer(timer);\r\n          // this.eventService.emit(new EventData(EventService.EventIds.CardReset + this.currentTaskId, true));\r\n        };\r\n\r\n        if (timer.CalendarTaskId == null) {\r\n          // console.log('TIMER IS NULL');\r\n          this.logger.logDebug('TIMER IS NULL');\r\n        }\r\n        // console.log('getting task from timer');\r\n        const task = this.calendarTaskService.getTask(timer.CalendarTaskId);\r\n        if (task == null) { // Delete timer if task no longer exists\r\n          timer.cancel();\r\n          this.voidTimer(timer);\r\n        } else {\r\n          const alertOptions: AlertOptions = this.alertService.getTimerExpiredAlertOptions(handlerCancel,\r\n            handlerOk,\r\n            timer.currentTimerSeconds,\r\n            task.Name);\r\n          const alert = await this.alertCtrl.create(alertOptions);\r\n          await alert.present();\r\n\r\n          await alert.onWillDismiss();\r\n          // console.log('DISMISSED');\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../models/Core/user';\r\nimport { UserNotFoundError } from '../models/Exceptions/UserNotFoundError';\r\nimport { IApiProvider } from '../interfaces/i-api-provider';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Language } from '../models/Core/language.enum';\r\nimport { ILogger } from '../interfaces/i-logger';\r\nimport { UnknownLanguageError } from '../models/Exceptions/UnknownLanguageError';\r\nimport { ILocalStorageService } from '../interfaces/i-local-storage-service';\r\nimport { IUserService } from '../interfaces/i-user-service';\r\nimport { IAuthenticationService } from '../interfaces/i-authentication-service';\r\nimport { UserConfig } from '../models/Core/user-config';\r\nimport { DTOUser } from '../models/DTO/dto-user';\r\nimport ThreadUtils from '../shared/thread.utils';\r\nimport { EventService, EventData } from './event.service';\r\nimport DateUtils from '../shared/date-utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService implements IUserService {\r\n\r\n  public static currentUser: User;\r\n  public static currentUserId: string;\r\n\r\n  constructor(private local: ILocalStorageService,\r\n              private api: IApiProvider,\r\n              private translate: TranslateService,\r\n              private logger: ILogger,\r\n              private auth: IAuthenticationService,\r\n              private eventService: EventService) {}\r\n\r\n  public async getUser(userId: string): Promise<User> {\r\n    try {\r\n      //console.log('getUser', userId);\r\n\r\n      if (userId == null) {\r\n        return null;\r\n      }\r\n\r\n      if (this.local.Initialized === false) {\r\n        //console.log('%%%% INITIALIZING LOCAL IN GETUSER %%%%');\r\n        await this.local.initialize(userId);\r\n      }\r\n\r\n      // try to get user from server to get latest\r\n\r\n      //console.log('GETTING USER ID : ', userId);\r\n      if (UserService.currentUser != null && UserService.currentUser.UserId === userId) {\r\n        //console.log('got user from ram ', UserService.currentUser);\r\n        return UserService.currentUser;\r\n      } else {\r\n        let dtoUser = await this.local.getUser(userId);\r\n        let user = DTOUser.ToUser(dtoUser);\r\n        if (user != null && user.UserId != null) {\r\n          //console.log('GOT USER FROM LOCAL ', user);\r\n          UserService.currentUser = user;\r\n          //console.log('GOT USER FROM LOCAL2 ', UserService.currentUser);\r\n          return user;\r\n        } else {\r\n          dtoUser = await this.api.getUser(userId);\r\n          user = DTOUser.ToUser(dtoUser);\r\n          //console.log('GetUserFromAPI', user);\r\n\r\n          if (user != null && user.UserId != null) {\r\n            //console.log('GOT USER FROM API ', user);\r\n            UserService.currentUser = user;\r\n            await this.local.setUser(DTOUser.FromUser(user), false);\r\n            return user;\r\n          } else {\r\n            //console.log('NO USER FROM API NOT LOCAL, RETURN NEW USER');\r\n            const newUser = new User();\r\n            newUser.UserId = userId;\r\n            newUser.IsNew = true;\r\n            UserService.currentUser = user;\r\n            return newUser;\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.logger.logError(new Error('Unable to find user : ' + error.message));\r\n      throw new UserNotFoundError('Unable to find user');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Same as getUser but this is for when logging in\r\n   */\r\n  public async getUserForLogin(): Promise<User> {\r\n    try {\r\n      const userId = await this.auth.getUserId();\r\n      this.logger.logDebug('~ GetUserForLogin', new Date().toISOString());\r\n\r\n      if (userId == null) {\r\n        return null;\r\n      }\r\n\r\n      if (this.local.Initialized === false) {\r\n        this.logger.logDebug('~ Initializing local', new Date().toISOString());\r\n        await this.local.initialize(userId);\r\n        this.logger.logDebug('~ Local Initialized', new Date().toISOString());\r\n      }\r\n\r\n      // Get local user first to see if it's first install\r\n      const localDTOUser = await this.local.getUser(userId);\r\n      if (localDTOUser != null) {\r\n        this.logger.logDebug('~ Got User, not a new install, returning user', new Date().toISOString(), JSON.stringify(localDTOUser));\r\n\r\n        return DTOUser.ToUser(localDTOUser);\r\n      } else {\r\n        this.logger.logDebug('~ We dont have local user, new install', new Date().toISOString());\r\n\r\n        // try to get user from server to get latest\r\n        this.logger.logDebug('getting user from api');\r\n        const apiDTOUser = await this.api.getUser(userId);\r\n        if (apiDTOUser != null) {\r\n          this.logger.logDebug('got user from api, saving locally', JSON.stringify(apiDTOUser));\r\n          const localUser = DTOUser.ToUser(apiDTOUser);\r\n          localUser.LastActivityDate = DateUtils.YearAgo(); // todo save it somewhere so we dont have to get user from api twice\r\n          await this.local.setUser(DTOUser.FromUser(localUser), false);\r\n          this.logger.logDebug('~ User Set', new Date().toISOString());\r\n\r\n          return localUser;\r\n        } else {\r\n          this.logger.logDebug('did not get user from api, first install, creating a new one');\r\n          const newUser = new User();\r\n          newUser.UserId = userId;\r\n          newUser.IsNew = true;\r\n\r\n          return newUser;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      this.logger.logError(new Error('Unable to find user : ' + error.message));\r\n      throw new UserNotFoundError('Unable to find user');\r\n    }\r\n  }\r\n\r\n  public async getCurrentUser(): Promise<User> {\r\n    if (UserService.currentUser == null) {\r\n      const startDate = new Date();\r\n      //console.log('<> GETTING CURRENT USER');\r\n      const id = UserService.currentUserId == null ? await this.auth.getUserId() : UserService.currentUserId;\r\n      UserService.currentUserId = id;\r\n      //console.log('<> GOT USER ID', DateUtils.getTimeSince(startDate), UserService.currentUserId);\r\n      const user = await this.getUser(id);\r\n      //console.log('<> GOT USER', DateUtils.getTimeSince(startDate));\r\n      UserService.currentUser = user;\r\n      //console.log('<> GOT USER', UserService.currentUser);\r\n      return user;\r\n    } else {\r\n      //console.log('<> GETTING CURRENT USER FROM RAM');\r\n      return UserService.currentUser;\r\n    }\r\n  }\r\n\r\n  public async awaitUserReady(waitForever?: boolean): Promise<boolean> {\r\n    let iterations = 0;\r\n    while (waitForever === true || iterations < 200) { // 50ms * 100 = 5000 ms = 5s\r\n      //console.log('awaitUserReady');\r\n      if (UserService.currentUser == null || UserService.currentUserId == null) {\r\n        //console.log('currentuser ' + UserService.currentUser);\r\n        await ThreadUtils.sleep(50);\r\n        iterations ++;\r\n      } else {\r\n        this.logger.logDebug('AWAIT COMPLETED, GOT USER : ', JSON.stringify(UserService.currentUser), UserService.currentUserId);\r\n        return true;\r\n      }\r\n    }\r\n\r\n    // console.log('AWAIT ABORTED, NEVER GOT USER : ' + new Date().toISOString(), UserService.currentUser, UserService.currentUserId);\r\n    return false;\r\n  }\r\n\r\n  public async getCurrentUserId(reason?: string): Promise<string> {\r\n    if (UserService.currentUserId != null) {\r\n      return UserService.currentUserId;\r\n    } else {\r\n      // this.logger.logDebug('GET User GET USERID ', reason);\r\n      const user = await this.getCurrentUser();\r\n      const result = user != null ?\r\n                       user.UserId :\r\n                       null;\r\n\r\n      UserService.currentUserId = result;\r\n      return result;\r\n    }\r\n  }\r\n\r\n  public getConfig(key: string): any {\r\n    if (UserService.currentUser == null) {\r\n      // console.log('GETCONFIG USER IS NULL', key, UserService.currentUser);\r\n\r\n      if (key === UserConfig.EndOfDayTimeKey) { // TODO: Fix bug instead of using this, when logging in it doesnt work\r\n        return '04:00';\r\n      }\r\n\r\n      return null;\r\n    } else {\r\n      // console.log('GETCONFIG', key);\r\n      const value = UserService.currentUser.Config.Configs.get(key);\r\n      // console.log('GOT VALUE', value);\r\n      return value;\r\n    }\r\n  }\r\n\r\n  public setConfig(key: string, value: any): any {\r\n    if (UserService.currentUser == null) {\r\n      return null;\r\n    } else {\r\n      return UserService.currentUser.Config.Configs.set(key, value);\r\n    }\r\n  }\r\n\r\n  public async saveUser(user: User): Promise<void> {\r\n    try {\r\n      //console.log('HHHHHHHH SAVING USER');\r\n      user.LastActivityDate = new Date();\r\n      await this.local.setUser(DTOUser.FromUser(user), false);\r\n      await this.api.saveUser(DTOUser.FromUser(user));\r\n      UserService.currentUser = user;\r\n      UserService.currentUserId = user.UserId;\r\n    } catch (error) {\r\n      this.logger.logError(error, { key: 'user', value: JSON.stringify(user)});\r\n    }\r\n  }\r\n\r\n  public async setLanguage(value: any) {\r\n    if (Number(value) === Language.French) {\r\n      this.translate.use('fr');\r\n      // this.logger.logDebug('GET User SET LANGUAGE');\r\n      const currentUser = await this.getCurrentUser();\r\n      User.setConfig(currentUser, UserConfig.PreferedLanguageKey, Language.French);\r\n      // console.log('Saving user for language', currentUser);\r\n      this.saveUser(currentUser);\r\n    } else if (Number(value) === Language.English) {\r\n      this.translate.use('en');\r\n      // this.logger.logDebug('GET User SET LANGUAGE');\r\n      const currentUser = await this.getCurrentUser();\r\n      User.setConfig(currentUser, UserConfig.PreferedLanguageKey, Language.English);\r\n      // console.log('Saving user for language', currentUser);\r\n      this.saveUser(currentUser);\r\n    } else {\r\n      this.logger.logEvent('Unable to change language');\r\n      throw new UnknownLanguageError('Unable to change language');\r\n    }\r\n\r\n    this.eventService.emit(new EventData(EventService.EventIds.LanguageChanged, null));\r\n  }\r\n\r\n  public async setDefaultRecurringPositionName(value: string) {\r\n      const currentUser = await this.getCurrentUser();\r\n      User.setConfig(currentUser, UserConfig.DefaultRecurringAfterTaskNameKey, value);\r\n      // console.log('[Saving User for Recurring Name]', currentUser);\r\n      await this.saveUser(currentUser);\r\n  }\r\n\r\n  public async setDefaultNonRecurringPositionName(value: string) {\r\n    const currentUser = await this.getCurrentUser();\r\n    User.setConfig(currentUser, UserConfig.DefaultNonRecurringAfterTaskNameKey, value);\r\n    // console.log('[Saving User for NonRecurringName]', currentUser);\r\n    await this.saveUser(currentUser);\r\n  }\r\n\r\n  public async logout(): Promise<void> {\r\n    //console.log('logging out3');\r\n    UserService.currentUser = null;\r\n    UserService.currentUserId = null;\r\n    await this.auth.logout();\r\n    return;\r\n  }\r\n\r\n  // TODO : Don't even sync this if they choose privacy\r\n  public async setCloudSync(value: boolean) {\r\n    if (value === true) {\r\n      const currentUser = await this.getCurrentUser();\r\n      User.setConfig(currentUser, UserConfig.EnableCloudSyncKey, true);\r\n      // console.log('Saving user for cloudsync', currentUser);\r\n      this.saveUser(currentUser);\r\n    } else {\r\n      const currentUser = await this.getCurrentUser();\r\n      User.setConfig(currentUser, UserConfig.EnableCloudSyncKey, false);\r\n      // console.log('Saving user for cloudsync2', currentUser);\r\n      this.saveUser(currentUser);\r\n    }\r\n  }\r\n\r\n  public async setDefaultNonRecurringGroupId(groupId: string): Promise<void> {\r\n    const currentUser = await this.getCurrentUser();\r\n    // console.log('SET DEFAULT NON RECURRING GROUP ID');\r\n    User.setConfig(currentUser, UserConfig.DefaultNonRecurringGroupId, groupId);\r\n    // console.log('[Saving user for NonRecurringGroupId]', currentUser);\r\n    await this.saveUser(currentUser);\r\n  }\r\n\r\n  public async setDefaultRecurringGroupId(groupId: string): Promise<void> {\r\n    const currentUser = await this.getCurrentUser();\r\n    User.setConfig(currentUser, UserConfig.DefaultRecurringGroupId, groupId);\r\n    // console.log('[Saving user for Recurring GroupId]', currentUser);\r\n    await this.saveUser(currentUser);\r\n  }\r\n\r\n  public async permanentlyDeleteAccount(): Promise<boolean> {\r\n    return await this.api.permanentlyDeleteAccount(UserService.currentUserId);\r\n  }\r\n\r\n  public async setKeepPortrait(value: boolean) {\r\n    if (value === true) {\r\n      const currentUser = await this.getCurrentUser();\r\n      User.setConfig(currentUser, UserConfig.KeepPortrait, true);\r\n      this.saveUser(currentUser);\r\n    } else {\r\n      const currentUser = await this.getCurrentUser();\r\n      User.setConfig(currentUser, UserConfig.KeepPortrait, false);\r\n      this.saveUser(currentUser);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VibrationService {\r\n\r\n  /**\r\n   * For now the functionality is disabled, include it in a future update\r\n   */\r\n  constructor(/*private vibration: Vibration*/) { }\r\n\r\n  public vibrate(milliseconds: number) {\r\n    return;\r\n  }\r\n}\r\n","\r\n\r\n\r\nexport default class DateUtils {\r\n  public static SecondsInMinute: number = 60;\r\n  public static SecondsInHour: number = 60 * 60;\r\n\r\n  private static cachedWorkDated: {};\r\n\r\n  public static datesAreEqual(d1: Date, d2: Date): boolean {\r\n    if (d1 == null && d2 == null) {\r\n      return true;\r\n    }\r\n\r\n    if (d1 == null || d2 == null) {\r\n      return false;\r\n    }\r\n\r\n    // console.log('datesAreEqual'); /*, d1, d2);*/\r\n    return d1.setHours(0, 0, 0, 0) === d2.setHours(0, 0, 0, 0);\r\n  }\r\n\r\n  public static dateTimeAreEqual(d1: Date, d2: Date): boolean {\r\n    if (d1 == null && d2 == null) {\r\n      return true;\r\n    }\r\n\r\n    if (d1 == null || d2 == null) {\r\n      return false;\r\n    }\r\n\r\n    // console.log('datesAreEqual'); /*, d1, d2);*/\r\n    return d1.getTime() === d2.getTime();\r\n  }\r\n\r\n  public static Today(): Date {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    return today;\r\n  }\r\n\r\n  // Taken from : https://stackoverflow.com/questions/563406/add-days-to-javascript-date\r\n  // Credits to sparebytes for the correct answer\r\n  public static AddDays(date: Date, addDays: number): Date {\r\n    const resultDate = new Date(date);\r\n    resultDate.setDate(date.getDate() + addDays);\r\n    resultDate.setHours(0, 0, 0, 0);\r\n    return resultDate;\r\n  }\r\n\r\n  public static Tomorrow(): Date {\r\n    return this.AddDays(this.Today(), 1);\r\n  }\r\n\r\n  public static MonthAgo(): Date {\r\n    return this.AddDays(this.Today(), -31);\r\n  }\r\n\r\n  public static YearAgo(): Date {\r\n    return this.AddDays(this.Today(), -365);\r\n  }\r\n\r\n  public static RemoveHours(date: Date) {\r\n    const resultDate = new Date(date);\r\n    resultDate.setHours(0, 0, 0, 0);\r\n    return resultDate;\r\n  }\r\n\r\n  public static GetWorkDate(date: Date,\r\n                            endOfDay: string = '04:00') {\r\n    let resultDate = new Date(date);\r\n\r\n    const endOfDayHours = Number(endOfDay.substring(0, 2));\r\n    const endOfDayMinutes = Number(endOfDay.substring(3, 5));\r\n\r\n    // console.log('IIIIIIII    GETWORKDATE     IIIIIII');\r\n    // console.log('DATE', date);\r\n    // console.log('endOfDay', endOfDay);\r\n    // console.log('hours = ', date.getHours(), endOfDayHours);\r\n    // console.log('minutes = ', date.getMinutes(), endOfDayMinutes);\r\n    if (endOfDayHours < 12) {\r\n      if (date.getHours() * 60 + date.getMinutes() < endOfDayHours * 60 + endOfDayMinutes) {\r\n        // console.log('Workdate after midnight', endOfDay, endOfDayHours, endOfDayMinutes);\r\n        resultDate = this.AddDays(new Date(date), -1);\r\n      }\r\n    } else {\r\n      if (date.getHours() * 60 + date.getMinutes() > endOfDayHours * 60 + endOfDayMinutes) {\r\n        // console.log('Workdate before midnight', endOfDay, endOfDayHours, endOfDayMinutes);\r\n        resultDate = this.AddDays(new Date(date), 1);\r\n      }\r\n    }\r\n\r\n    return this.RemoveHours(resultDate);\r\n  }\r\n\r\n  public static getLocalMysqlTimeFloored(date: Date) {\r\n    const time = this.getLocalMysqlTimeString(date);\r\n    let minuteIterator = Number(time.substring(3, 3 + 2));\r\n    for (let i = 0; i < 60; i++) {\r\n      minuteIterator --;\r\n      if (minuteIterator % 5 === 0) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    const minutes = minuteIterator.toString();\r\n\r\n    if (minutes.length === 2) {\r\n      return time.substring(0, 3) + minutes;\r\n    } else {\r\n      return time.substring(0, 3) + '0' + minutes;\r\n    }\r\n  }\r\n\r\n  public static getLocalMysqlDateString(date: any) {\r\n    const d = new Date(date);\r\n    let month = '' + (d.getMonth() + 1);\r\n    let day = '' + d.getDate();\r\n    const year = d.getFullYear();\r\n\r\n    if (month.length < 2) {\r\n      month = '0' + month;\r\n    }\r\n    if (day.length < 2) {\r\n      day = '0' + day;\r\n    }\r\n\r\n    return [year, month, day].join('-');\r\n  }\r\n\r\n  public static getLocalMysqlTimeString(date: any) {\r\n    const d = new Date(date);\r\n    let hours = '' + (d.getHours());\r\n    let minutes = '' + d.getMinutes();\r\n    let seconds = String(Math.floor(d.getSeconds()));\r\n\r\n    if (hours.length < 2) {\r\n      hours = '0' + hours;\r\n    }\r\n    if (minutes.length < 2) {\r\n      minutes = '0' + minutes;\r\n    }\r\n    if (seconds.length < 2) {\r\n      seconds = '0' + seconds;\r\n    }\r\n\r\n    return [hours, minutes, seconds].join(':');\r\n  }\r\n\r\n  public static getHHmmTimeUTC(date: Date) {\r\n    return date.toISOString().substring(11, 16);\r\n  }\r\n\r\n  public static getAbsmsTimeDifference(date1: Date, date2: Date) {\r\n    return Math.abs(date1.getTime() - date2.getTime());\r\n  }\r\n\r\n  public static getHHmmFrommsTime(ms: number) {\r\n    const dateUtc = new Date(new Date(ms).toUTCString());\r\n    return DateUtils.getHHmmTimeUTC(dateUtc);\r\n  }\r\n\r\n  public static getHHmmFromTimeDifferences(date1: Date, date2: Date) {\r\n    const diff = DateUtils.getAbsmsTimeDifference(date1, date2);\r\n    return DateUtils.getHHmmFrommsTime(diff);\r\n  }\r\n\r\n  public static getHoursFromSeconds(seconds: number) {\r\n    return Math.floor(seconds / DateUtils.SecondsInHour);\r\n  }\r\n\r\n  public static getMinutesFromSeconds(seconds: number) {\r\n    return Math.floor((seconds - DateUtils.getHoursFromSeconds(seconds) * DateUtils.SecondsInHour) / DateUtils.SecondsInMinute);\r\n  }\r\n\r\n  public static getSecondsFromSeconds(seconds: number) {\r\n    return seconds - DateUtils.getMinutesFromSeconds(seconds) - DateUtils.getHoursFromSeconds(seconds);\r\n  }\r\n\r\n  public static daysBetween(startDate, endDate) {\r\n    const millisecondsPerDay = 24 * 60 * 60 * 1000;\r\n    return (DateUtils.treatAsUTC(endDate).getTime() - DateUtils.treatAsUTC(startDate).getTime()) / millisecondsPerDay;\r\n  }\r\n\r\n  public static treatAsUTC(date): Date {\r\n    const result = new Date(date);\r\n    result.setMinutes(result.getMinutes() - result.getTimezoneOffset());\r\n    return result;\r\n  }\r\n\r\n  public static getFlooredDate(date: Date): Date {\r\n    const coeff = 1000 * 60 * 5;\r\n    const rounded = new Date(Math.floor(date.getTime() / coeff) * coeff);\r\n    return rounded;\r\n  }\r\n\r\n  public static getTimeSince(date: Date): string {\r\n    const timediff = Date.now() - date.getTime();\r\n    return timediff.toString();\r\n  }\r\n\r\n  public static getMillisecondsSince(date: Date): number {\r\n    const timediff = Date.now() - date.getTime();\r\n    return timediff;\r\n  }\r\n\r\n  public static isValidDate(d: Date): boolean {\r\n    return d instanceof Date && !isNaN(d.valueOf());\r\n  }\r\n\r\n  public static getDurationString(totalSeconds: number): string {\r\n    const hours = DateUtils.getHoursFromSeconds(totalSeconds);\r\n    const minutes = DateUtils.getMinutesFromSeconds(totalSeconds);\r\n    const seconds = Math.round(totalSeconds - DateUtils.SecondsInMinute * minutes - hours * DateUtils.SecondsInHour);\r\n    const secondsString = seconds >= 10 ? String(seconds) : '0' + seconds;\r\n    const minutesString = minutes >= 10 ? String(minutes) : '0' + minutes;\r\n\r\n    // console.log('hours, minutes, seconds, secondsstring, minutestring', hours, minutes, seconds, minutesString, secondsString);\r\n\r\n    if (hours === 0 && minutes < 1) {\r\n      return '00:' + secondsString;\r\n    } else if (hours === 0) {\r\n      return minutes + ':' + secondsString;\r\n    } else {\r\n      return hours + ':' + minutesString + ':' + secondsString;\r\n    }\r\n  }\r\n}\r\n","// Taken from https://stackoverflow.com/questions/3895478/does-javascript-have-a-method-like-range-to-generate-a-range-within-the-supp\r\n// Credits to Remi\r\nexport default class NumberUtils {\r\n  public static Range(start: number, stop: number, step: number): number[] {\r\n    const a = [start];\r\n    let b = start;\r\n    if (start <= stop) {\r\n      while (b < stop) {\r\n        a.push(b += step || 1);\r\n      }\r\n    } else {\r\n      while (b > stop) {\r\n        a.push(b += step || 1);\r\n      }\r\n    }\r\n\r\n    return a;\r\n  }\r\n\r\n  public static getRandomId(): string {\r\n    let result = Math.random().toString(36);\r\n    if (result.length < 20) {\r\n      result += Math.random().toString(36);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public static checkIfDuplicateExists(w) {\r\n    const duplicateExists = new Set(w).size !== w.length;\r\n    /*if (duplicateExists === true) {\r\n      console.log('DUPLICATE EXISTS', duplicateExists, w);\r\n    } else {\r\n      console.log('DUPLICATE DOES NOT EXIST', duplicateExists, w);\r\n    }*/\r\n\r\n    return duplicateExists;\r\n  }\r\n}\r\n","export default class ThreadUtils {\r\n  public static async sleep(ms: number) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyAXSnqPkR051dZJgT5NI1lm6KQTY-sOtF0',\n    authDomain: 'pp-app-1893d.firebaseapp.com',\n    databaseURL: 'https://pp-app-1893d.firebaseio.com',\n    projectId: 'pp-app-1893d',\n    storageBucket: 'pp-app-1893d.appspot.com',\n    messagingSenderId: '6037718437',\n    appId: '1:6037718437:web:a4ed7e101ce3e50685544c',\n    measurementId: 'G-DTCY90CRT9',\n  },\n  apiUrl: 'https://hypertaskprod11.azurewebsites.net/',\n  // apiUpdateXmlUrl: 'https://hypertaskdev.azurewebsites.net/staticfiles/habit-tracker-update.xml',\n  //apiUrl: 'https://localhost:44397/',\n  /// / apiUrl: 'https://localhost:5000:80/',\n  apiUpdateXmlUrl: 'https://hypertaskprod11.azurewebsites.net/staticfiles/habit-tracker-update.xml',\n  instrumentationKey: '375ecb22-853a-409c-9a2a-91abb22adab6',\n};\n\n// C:\\Program Files\\Java\\jdk1.8.0_221\\bin\n// keytool -genkey -v -keystore F:\\my-release-key.keystore -alias dailyhabittracker -keyalg RSA -keysize 2048 -validity 10000\n// tslint:disable-next-line:max-line-length\n// jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore F://my-release-key.keystore F://app-release-unsigned.apk dailyhabittracker\n\n// To get SHA1 signature :\n// keytool -exportcert -list -v \\\n// -alias <your-key-name> -keystore <path-to-production-keystore>\n\n// F:\\Android\\Sdk\\build-tools\\29.0.2\n// zipalign -v 4 F:\\app-release-unsigned.apk F://daily-habit-tracker.apk\n\n// http://localhost:44397/staticfiles/habit-tracker-update.xml\n// https://habittrackerfree.azurewebsites.net/staticfiles/habit-tracker-update.xml\n\n\n// first time sign : jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore my-release-key.keystore my_application.apk hypertask\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","var map = {\n\t\"./ion-accordion_2.entry.js\": [\n\t\t83477,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-accordion_2_entry_js\"\n\t],\n\t\"./ion-action-sheet.entry.js\": [\n\t\t67196,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-action-sheet_entry_js\"\n\t],\n\t\"./ion-alert.entry.js\": [\n\t\t38081,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-alert_entry_js\"\n\t],\n\t\"./ion-app_8.entry.js\": [\n\t\t75017,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-app_8_entry_js\"\n\t],\n\t\"./ion-avatar_3.entry.js\": [\n\t\t69721,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-avatar_3_entry_js\"\n\t],\n\t\"./ion-back-button.entry.js\": [\n\t\t99216,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-back-button_entry_js\"\n\t],\n\t\"./ion-backdrop.entry.js\": [\n\t\t96612,\n\t\t\"node_modules_ionic_core_dist_esm_ion-backdrop_entry_js\"\n\t],\n\t\"./ion-breadcrumb_2.entry.js\": [\n\t\t42694,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-breadcrumb_2_entry_js\"\n\t],\n\t\"./ion-button_2.entry.js\": [\n\t\t22938,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-button_2_entry_js\"\n\t],\n\t\"./ion-card_5.entry.js\": [\n\t\t51379,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-card_5_entry_js\"\n\t],\n\t\"./ion-checkbox.entry.js\": [\n\t\t97552,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-checkbox_entry_js\"\n\t],\n\t\"./ion-chip.entry.js\": [\n\t\t37218,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-chip_entry_js\"\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t97479,\n\t\t\"node_modules_ionic_core_dist_esm_ion-col_3_entry_js\"\n\t],\n\t\"./ion-datetime_3.entry.js\": [\n\t\t64134,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-datetime_3_entry_js\"\n\t],\n\t\"./ion-fab_3.entry.js\": [\n\t\t71439,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-fab_3_entry_js\"\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t76397,\n\t\t\"node_modules_ionic_core_dist_esm_ion-img_entry_js\"\n\t],\n\t\"./ion-infinite-scroll_2.entry.js\": [\n\t\t33296,\n\t\t\"node_modules_ionic_core_dist_esm_ion-infinite-scroll_2_entry_js\"\n\t],\n\t\"./ion-input.entry.js\": [\n\t\t12413,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-input_entry_js\"\n\t],\n\t\"./ion-item-option_3.entry.js\": [\n\t\t39411,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item-option_3_entry_js\"\n\t],\n\t\"./ion-item_8.entry.js\": [\n\t\t99133,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-item_8_entry_js\"\n\t],\n\t\"./ion-loading.entry.js\": [\n\t\t79003,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-loading_entry_js\"\n\t],\n\t\"./ion-menu_3.entry.js\": [\n\t\t96065,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-menu_3_entry_js\"\n\t],\n\t\"./ion-modal.entry.js\": [\n\t\t86991,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-modal_entry_js\"\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t82947,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js\"\n\t],\n\t\"./ion-picker-column-internal.entry.js\": [\n\t\t25919,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-column-internal_entry_js\"\n\t],\n\t\"./ion-picker-internal.entry.js\": [\n\t\t93109,\n\t\t\"node_modules_ionic_core_dist_esm_ion-picker-internal_entry_js\"\n\t],\n\t\"./ion-popover.entry.js\": [\n\t\t99459,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-popover_entry_js\"\n\t],\n\t\"./ion-progress-bar.entry.js\": [\n\t\t20301,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-progress-bar_entry_js\"\n\t],\n\t\"./ion-radio_2.entry.js\": [\n\t\t43799,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-radio_2_entry_js\"\n\t],\n\t\"./ion-range.entry.js\": [\n\t\t12140,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-range_entry_js\"\n\t],\n\t\"./ion-refresher_2.entry.js\": [\n\t\t86197,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-refresher_2_entry_js\"\n\t],\n\t\"./ion-reorder_2.entry.js\": [\n\t\t41975,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-reorder_2_entry_js\"\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t58387,\n\t\t\"node_modules_ionic_core_dist_esm_ion-ripple-effect_entry_js\"\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t98659,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-route_4_entry_js\"\n\t],\n\t\"./ion-searchbar.entry.js\": [\n\t\t26404,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-searchbar_entry_js\"\n\t],\n\t\"./ion-segment_2.entry.js\": [\n\t\t85253,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-segment_2_entry_js\"\n\t],\n\t\"./ion-select_3.entry.js\": [\n\t\t92619,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-select_3_entry_js\"\n\t],\n\t\"./ion-slide_2.entry.js\": [\n\t\t82871,\n\t\t\"node_modules_ionic_core_dist_esm_ion-slide_2_entry_js\"\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t17668,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-spinner_entry_js\"\n\t],\n\t\"./ion-split-pane.entry.js\": [\n\t\t55342,\n\t\t\"node_modules_ionic_core_dist_esm_ion-split-pane_entry_js\"\n\t],\n\t\"./ion-tab-bar_2.entry.js\": [\n\t\t174,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab-bar_2_entry_js\"\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t86185,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-tab_2_entry_js\"\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t97337,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-text_entry_js\"\n\t],\n\t\"./ion-textarea.entry.js\": [\n\t\t4833,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-textarea_entry_js\"\n\t],\n\t\"./ion-toast.entry.js\": [\n\t\t9468,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toast_entry_js\"\n\t],\n\t\"./ion-toggle.entry.js\": [\n\t\t25705,\n\t\t\"common\",\n\t\t\"node_modules_ionic_core_dist_esm_ion-toggle_entry_js\"\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t87463,\n\t\t\"node_modules_ionic_core_dist_esm_ion-virtual-scroll_entry_js\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 50863;\nmodule.exports = webpackAsyncContext;","export default \"<ion-app>\\n  <app-side-menu></app-side-menu>\\n  <ion-router-outlet id=\\\"main-content\\\" main></ion-router-outlet>\\n</ion-app>\";","export default \"\\r\\n<ion-grid>\\r\\n  <!--Edit-->\\r\\n  <ion-row>\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnEditTaskClick()\\\"\\r\\n                  color=\\\"dark\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"create-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'task-card-popover.btn-edit' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!--Stats-->\\r\\n  <ion-row [hidden]=\\\"!viewModel.showBtnStats\\\">\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnShowStatsClick()\\\"\\r\\n                  color=\\\"dark\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"bar-chart-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'task-card-popover.btn-stats' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!--Postpone-->\\r\\n  <!--ion-row [hidden]=\\\"!viewModel.showPostponeBtn\\\">\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnPostponeClick()\\\"\\r\\n                  color=\\\"primary\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"arrow-redo-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'task-card-popover.btn-postpone' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row-->\\r\\n  <!--Note-->\\r\\n  <ion-row [hidden]=\\\"!viewModel.showBtnNote\\\">\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnAddNoteClick()\\\"\\r\\n                  color=\\\"primary\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"pencil-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'task-card-popover.btn-add-note' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!--Void Result-->\\r\\n  <ion-row [hidden]=\\\"!viewModel.showBtnVoid\\\">\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnVoidResultClick()\\\"\\r\\n                  color=\\\"danger\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"trash-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'task-card-popover.btn-void-result' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!--Resume Timer-->\\r\\n  <ion-row [hidden]=\\\"!viewModel.showBtnResumeTimer\\\">\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnResumeTimerClick()\\\"\\r\\n                  color=\\\"success\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"play-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'task-card-popover.btn-resume-timer' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-grid>\\r\\n\";","export default \"<!--Clickable/Expandable Card Header-->\\r\\n<ion-grid>\\r\\n  <ion-row class=\\\"full-width\\\">\\r\\n    <!--Task position for testing only-->\\r\\n    <!--ion-col size=\\\"1\\\"\\r\\n              class=\\\"content-center\\\">\\r\\n      <ion-label color=\\\"dark\\\">{{ currentTask.AbsolutePosition }}</ion-label>\\r\\n    </ion-col-->\\r\\n    <!--Reorder-->\\r\\n    <ion-col [hidden]=\\\"!viewModel.enableDragAndDrop\\\"\\r\\n              size=\\\"2\\\"\\r\\n              id=\\\"stepDragAndDrop\\\">\\r\\n      <ion-reorder class=\\\"content-center vertical-center\\\">\\r\\n        <ion-icon name=\\\"swap-vertical-outline\\\" class=\\\"color-black zoom\\\"></ion-icon>\\r\\n      </ion-reorder>\\r\\n    </ion-col>\\r\\n    <!--Task Name-->\\r\\n    <ion-col class=\\\"content-center-left margin-left\\\">\\r\\n      <ion-text color=\\\"dark\\\">{{ viewModel.currentTask.Name }}</ion-text>\\r\\n    </ion-col>\\r\\n    <!--Task Result-->\\r\\n    <ion-col *ngIf=\\\"viewModel.showTaskResult\\\">\\r\\n      <!--Task Score (Displayed if done)-->\\r\\n      <ion-icon *ngIf=\\\"viewModel.showCheckedBox\\\"\\r\\n                name=\\\"checkbox\\\" \\r\\n                class=\\\"zoom color-black\\\"></ion-icon>\\r\\n      <ion-label *ngIf=\\\"viewModel.showText\\\"\\r\\n                color=\\\"dark\\\"\\r\\n                style=\\\"margin:auto;\\\" \\r\\n                class=\\\"font-medium\\\">{{ viewModel.taskResult }}</ion-label>\\r\\n      <!--Task Skipped (Displayed if skipped)-->\\r\\n      <ion-icon *ngIf=\\\"viewModel.showBrokenHeart\\\"\\r\\n                class=\\\"content-center zoom color-black\\\"\\r\\n                name=\\\"close-outline\\\"></ion-icon>\\r\\n    </ion-col>\\r\\n    <!--Task Main Buttons-->\\r\\n    <ion-col [hidden]=\\\"!viewModel.showMainTaskButtons\\\"\\r\\n              class=\\\"content-center-right\\\"\\r\\n              id=\\\"stepActionButtons\\\">\\r\\n      <!--Start timer-->\\r\\n      <ion-button *ngIf=\\\"viewModel.showBtnStart\\\"\\r\\n                  (click)=\\\"btnStartClick($event)\\\"\\r\\n                  color=\\\"success\\\"\\r\\n                  id=\\\"stepStartTimer\\\">\\r\\n        <ion-icon name=\\\"play-outline\\\" color=\\\"light\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <!--Cancel timer-->\\r\\n      <ion-button *ngIf=\\\"viewModel.showBtnCancelTimer\\\"\\r\\n                  (click)=\\\"btnCancelTimerClick($event)\\\"\\r\\n                  color=\\\"dark\\\">\\r\\n        <ion-icon name=\\\"close-outline\\\" color=\\\"light\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <!--Pause timer-->\\r\\n      <ion-button *ngIf=\\\"viewModel.showBtnPause\\\"\\r\\n                  (click)=\\\"btnPauseClick($event)\\\"\\r\\n                  color=\\\"dark\\\">\\r\\n        <ion-icon name=\\\"pause-outline\\\" color=\\\"light\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <!--Unpause-->\\r\\n      <ion-button *ngIf=\\\"viewModel.showBtnResume\\\"\\r\\n                  (click)=\\\"btnUnpauseClick($event)\\\"\\r\\n                  color=\\\"success\\\">\\r\\n        <ion-icon name=\\\"play-outline\\\" color=\\\"light\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <!--Enter Time-->\\r\\n      <ion-button *ngIf=\\\"viewModel.showBtnEnterTime\\\"\\r\\n                  (click)=\\\"btnEnterTimeClick();\\\"\\r\\n                  color=\\\"success\\\"\\r\\n                  id=\\\"stepEnterResult\\\">\\r\\n        <ion-icon name=\\\"time-outline\\\" color=\\\"light\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <!--Enter Value-->\\r\\n      <ion-button *ngIf=\\\"viewModel.showBtnEnterValue\\\"\\r\\n                  (click)=\\\"btnEnterValueClick($event)\\\"\\r\\n                  color=\\\"success\\\"\\r\\n                  class=\\\"pre-wrap\\\">\\r\\n        <ion-icon name=\\\"create-outline\\\" class=\\\"color-white\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <!--Enter Duration-->\\r\\n      <ion-button *ngIf=\\\"viewModel.showBtnEnterDuration\\\"\\r\\n                  (click)=\\\"btnEnterDurationClick($event)\\\"\\r\\n                  color=\\\"success\\\"\\r\\n                  class=\\\"pre-wrap\\\">\\r\\n        <ion-icon name=\\\"hourglass-outline\\\" class=\\\"color-white\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <!--Done-->\\r\\n      <ion-button *ngIf=\\\"viewModel.showBtnDone\\\"\\r\\n                  (click)=\\\"btnDoneClick($event)\\\"\\r\\n                  color=\\\"success\\\">\\r\\n        <ion-icon name=\\\"checkbox-outline\\\" class=\\\"color-white\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <!--Postpone-->\\r\\n      <ion-button *ngIf=\\\"viewModel.showPostponeBtn\\\"\\r\\n                  (click)=\\\"btnPostponeClick($event)\\\"\\r\\n                  color=\\\"primary\\\"\\r\\n                  id=\\\"stepPostpone\\\">\\r\\n          <ion-icon name=\\\"arrow-redo-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>            \\r\\n      </ion-button>\\r\\n      <!--Skip-->\\r\\n      <ion-button *ngIf=\\\"viewModel.showBtnSkip\\\"\\r\\n                  (click)=\\\"btnSkipClick($event)\\\"\\r\\n                  color=\\\"primary\\\"\\r\\n                  id=\\\"stepSkip\\\">\\r\\n        <ion-icon name=\\\"close-outline\\\"\\r\\n                  class=\\\"color-white\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n      <!--Delete-->\\r\\n      <ion-button *ngIf=\\\"viewModel.showBtnDelete\\\"\\r\\n                  (click)=\\\"btnDeleteClick($event)\\\"\\r\\n                  color=\\\"danger\\\"\\r\\n                  id=\\\"stepTrash\\\">\\r\\n        <ion-icon name=\\\"trash-outline\\\"\\r\\n                  class=\\\"color-white\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n    <!--Menu Small-->\\r\\n    <ion-col [hidden]=\\\"!viewModel.showTaskResult\\\"\\r\\n              size=\\\"1\\\"\\r\\n              (click)=\\\"onCardClick($event)\\\"\\r\\n              tappable>\\r\\n      <ion-icon name=\\\"ellipsis-vertical-outline\\\"\\r\\n                color=\\\"medium\\\"></ion-icon>\\r\\n    </ion-col>\\r\\n    <!--Menu Big-->\\r\\n    <ion-col [hidden]=\\\"viewModel.showTaskResult\\\"\\r\\n              size=\\\"1\\\"\\r\\n              (click)=\\\"onCardClick($event)\\\"\\r\\n              tappable\\r\\n              id=\\\"stepCardMenu\\\">\\r\\n      <ion-icon name=\\\"ellipsis-vertical-outline\\\"\\r\\n                color=\\\"medium\\\"></ion-icon>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!--Current Timer-->\\r\\n  <ion-row [hidden]=\\\"viewModel.hideTimer\\\"\\r\\n           class=\\\"bordered-large\\\">\\r\\n    <ion-col>\\r\\n      <app-timer #htmlTimer\\r\\n                [currentTaskId]=\\\"viewModel.currentTask.CalendarTaskId\\\"></app-timer>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!--Note-->\\r\\n  <ion-row *ngIf=\\\"viewModel.showNote\\\" class=\\\"bordered\\\">\\r\\n    <!--ion-col size=\\\"2\\\"\\r\\n            class=\\\"content-center\\\">\\r\\n      <ion-button size=\\\"small\\\"\\r\\n                  color=\\\"light\\\">\\r\\n        <ion-icon name=\\\"pencil-outline\\\"></ion-icon>\\r\\n      </ion-button>\\r\\n    </ion-col-->\\r\\n    <ion-col>\\r\\n      <ion-text>{{ 'task-card.lbl-note' | translate }} : {{ viewModel.currentNote }}</ion-text>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!--Stats-->\\r\\n  <!--ion-row *ngFor=\\\"let taskStats of viewModel.taskStats\\\"\\r\\n          [hidden]=\\\"viewModel.hideStats\\\"\\r\\n          class=\\\"bordered\\\">\\r\\n    <ion-col>\\r\\n      <app-task-scores [taskStats]=\\\"taskStats\\\"\\r\\n                        [calendarTaskId]=\\\"currentTask.CalendarTaskId\\\"\\r\\n                        [loadEvent]=\\\"viewModel.eventLoadStats.asObservable()\\\"></app-task-scores>\\r\\n    </ion-col>\\r\\n  </ion-row-->\\r\\n</ion-grid>\";","export default \"<!--Stats Name-->\\r\\n<ion-row>\\r\\n  <ion-col size=\\\"2\\\"></ion-col>\\r\\n  <ion-col class=\\\"content-center\\\"\\r\\n           size=\\\"8\\\">\\r\\n    <ion-label color=\\\"dark\\\">\\r\\n      <h2>{{ taskStats.Name }}</h2>\\r\\n    </ion-label>\\r\\n  </ion-col>\\r\\n  <ion-col size=\\\"2\\\">\\r\\n    <ion-button size=\\\"small\\\"\\r\\n                color=\\\"dark\\\"\\r\\n                (click)=\\\"btnCloseStatsClick()\\\">\\r\\n      <ion-icon name=\\\"close-outline\\\"\\r\\n                color=\\\"light\\\"></ion-icon>\\r\\n    </ion-button>\\r\\n  </ion-col>\\r\\n</ion-row>\\r\\n\\r\\n<!--Chart vs Details-->\\r\\n<ion-row [hidden]=\\\"!showCharVsDetails\\\">\\r\\n  <ion-col>\\r\\n    <ion-segment (ionChange)=\\\"chartChanged($event)\\\"\\r\\n                 value=\\\"Chart\\\">\\r\\n      <ion-segment-button value=\\\"Chart\\\">\\r\\n        <ion-label class=\\\"text-wrap\\\">{{ 'task-scores.segment-chart' | translate }}</ion-label>\\r\\n      </ion-segment-button>\\r\\n      <ion-segment-button value=\\\"Details\\\">\\r\\n        <ion-label class=\\\"text-wrap\\\">{{ 'task-scores.segment-details' | translate }}</ion-label>\\r\\n      </ion-segment-button>\\r\\n    </ion-segment>\\r\\n  </ion-col>\\r\\n</ion-row>\\r\\n\\r\\n<!--Chart-->\\r\\n<ion-row [hidden]=\\\"!showChart\\\">\\r\\n  <ion-col>\\r\\n    <canvas #lineChart></canvas>\\r\\n  </ion-col>\\r\\n</ion-row>\\r\\n\\r\\n<!--Result Details-->\\r\\n<ng-container *ngFor=\\\"let minusWeek of cardsMinusWeeksArray\\\">\\r\\n  <ion-row [hidden]=\\\"!showDetails\\\">\\r\\n    <ion-col class=\\\"container\\\">\\r\\n      <div *ngFor=\\\"let minusDays of minusDaysArray\\\"\\r\\n           class=\\\"bordered content-center column minicard\\\">\\r\\n        <ion-label color=\\\"dark\\\"\\r\\n                   class=\\\"font-xsmall\\\">\\r\\n          {{ dateService.GetmmddFromMinusDays(minusDays + minusWeek * 7, dateService.currentWorkDate) }}\\r\\n        </ion-label>\\r\\n        <!--Skipped (Broken Heart)-->\\r\\n        <ion-icon *ngIf=\\\"showSkipped(minusDays + minusWeek * 7)\\\" \\r\\n                  name=\\\"close-outline\\\" \\r\\n                  class=\\\"font-large\\\"></ion-icon>\\r\\n        <!--Checkbox-->\\r\\n        <ion-icon *ngIf=\\\"showCheckbox(minusDays + minusWeek * 7)\\\" \\r\\n                  name=\\\"checkbox\\\" \\r\\n                  class=\\\"font-large\\\"\\r\\n                  color=\\\"dark\\\"></ion-icon>\\r\\n        <!--Duration Results-->\\r\\n        <ion-label *ngIf=\\\"showDuration(minusDays + minusWeek * 7)\\\"\\r\\n                   color=\\\"dark\\\"\\r\\n                   class=\\\"font-small\\\">{{ getPreviousDayDuration(minusDays + minusWeek * 7) }}</ion-label>\\r\\n        <!--Decimal Results-->\\r\\n        <ion-label *ngIf=\\\"showDecimal(minusDays + minusWeek * 7)\\\" \\r\\n                  color=\\\"dark\\\"\\r\\n                   class=\\\"font-small\\\">{{ getPreviousDayResult(minusDays + minusWeek * 7) }}</ion-label>\\r\\n        <!--Time Results-->\\r\\n        <ion-label *ngIf=\\\"showTime(minusDays + minusWeek * 7)\\\" \\r\\n                   color=\\\"dark\\\"\\r\\n                   class=\\\"font-small\\\">{{ getPreviousDayResult(minusDays + minusWeek * 7) }}</ion-label>\\r\\n      </div>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ng-container>\\r\\n\\r\\n\\r\\n<!--Choose Stats Range-->\\r\\n<ion-row class=\\\"space-evenly\\\"> \\r\\n  <ion-col class=\\\"content-center\\\"\\r\\n           size=\\\"2\\\">\\r\\n    <ion-button size=\\\"small\\\"\\r\\n                (click)=\\\"btnStatsClick(7 * 1)\\\">{{ 'task-scores.btn-one-week' | translate }}</ion-button>\\r\\n  </ion-col>\\r\\n  <ion-col class=\\\"content-center\\\" \\r\\n           size=\\\"2\\\">\\r\\n    <ion-button size=\\\"small\\\"\\r\\n                (click)=\\\"btnStatsClick(7 * 4)\\\">{{ 'task-scores.btn-one-month' | translate }}</ion-button>\\r\\n  </ion-col>\\r\\n  <ion-col class=\\\"content-center\\\" \\r\\n           size=\\\"2\\\">\\r\\n    <ion-button size=\\\"small\\\"\\r\\n                (click)=\\\"btnStatsClick(7 * 4 * 3)\\\">{{ 'task-scores.btn-three-months' | translate }}</ion-button>\\r\\n  </ion-col>\\r\\n  <ion-col class=\\\"content-center\\\" \\r\\n           size=\\\"2\\\"\\r\\n           [hidden]=\\\"!show1AButton\\\">\\r\\n    <ion-button size=\\\"small\\\"\\r\\n                (click)=\\\"btnStatsClick(365)\\\">{{ 'task-scores.btn-one-year' | translate }}</ion-button>\\r\\n  </ion-col>\\r\\n</ion-row>\\r\\n<!--Other numbers-->\\r\\n<ion-row [hidden]=\\\"!showMax\\\">\\r\\n  <ion-col>\\r\\n    <ion-label color=\\\"dark\\\">{{ 'task-scores.lbl-max' | translate }} : {{ txtMaximum }}</ion-label>\\r\\n  </ion-col>\\r\\n</ion-row>\\r\\n<ion-row [hidden]=\\\"!showAverage\\\">\\r\\n  <ion-col>\\r\\n    <ion-label color=\\\"dark\\\">{{ 'task-scores.lbl-avg' | translate }} : {{ txtAverage }}</ion-label>\\r\\n  </ion-col>\\r\\n</ion-row>\\r\\n<ion-row [hidden]=\\\"!showTotal\\\">\\r\\n  <ion-col>\\r\\n    <ion-label color=\\\"dark\\\">{{ 'task-scores.lbl-total' | translate }} : {{ txtTotal }}</ion-label>\\r\\n  </ion-col>\\r\\n</ion-row>\\r\\n<ion-row [hidden]=\\\"!showCompletionRate\\\">\\r\\n  <ion-col>\\r\\n    <ion-label color=\\\"dark\\\">{{ 'task-scores.lbl-completion-rate' | translate }} : {{ txtCompletionRate }}</ion-label>\\r\\n  </ion-col>\\r\\n</ion-row>\";","export default \"<ion-label class=\\\"font-xxlarge\\\" \\r\\n           color=\\\"dark\\\">{{ currentTimerObject.currentTimerSeconds | formatTimer }}</ion-label>\";","export default \"<ion-card>\\r\\n  <!-- Fixed Header -->\\r\\n  <ion-card-header>\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <!--Back Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"closePopup()\\\">\\r\\n            <ion-icon name=\\\"arrow-back\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <!--Title-->\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <h2>{{ 'debug-log.lbl-title' | translate }}</h2>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-header>\\r\\n\\r\\n  <ion-card-content>\\r\\n    <ion-list>\\r\\n      <ion-item *ngFor=\\\"let line of currentLogs\\\">\\r\\n        <ion-text>{{ line }}</ion-text>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </ion-card-content>\\r\\n</ion-card>\";","export default \"<ion-card color=\\\"dark\\\"\\r\\n          [hidden]=\\\"!currentGroup.isVisible\\\">\\r\\n  <!--Group Header-->\\r\\n  <ion-card-header>\\r\\n    <ion-grid>\\r\\n      <ion-row (click)=\\\"toggleGroup()\\\" tappable>\\r\\n        <!--Toggle-->\\r\\n        <ion-col size=\\\"3\\\"\\r\\n                 id=\\\"stepGroupArrow\\\">\\r\\n          <ion-icon name=\\\"caret-down-outline\\\"\\r\\n                    [hidden]=\\\"currentGroup.isExpanded\\\"\\r\\n                    class=\\\"font-large\\\"></ion-icon>\\r\\n          <ion-icon name=\\\"caret-up-outline\\\"\\r\\n                    [hidden]=\\\"!currentGroup.isExpanded\\\"\\r\\n                    class=\\\"font-large\\\"></ion-icon>\\r\\n        </ion-col>\\r\\n        <!--Group Title-->\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <ion-title class=\\\"text-center\\\">\\r\\n            <ion-label color=\\\"light\\\" class=\\\"font-large\\\">{{ currentGroup.Name }}</ion-label>\\r\\n          </ion-title>\\r\\n        </ion-col>\\r\\n        <!--Progress-->\\r\\n        <ion-col size=\\\"2\\\">\\r\\n          <ion-label class=\\\"font-small\\\" color=\\\"light\\\" class=\\\"font-large\\\">{{ currentGroup.ProgressText }}</ion-label>\\r\\n        </ion-col>\\r\\n        <!--Action Menu-->\\r\\n        <ion-col size=\\\"1\\\"\\r\\n                 id=\\\"stepEditGroup\\\">\\r\\n          <ion-icon name=\\\"ellipsis-vertical-outline\\\"\\r\\n                    (click)=\\\"groupMenuClick($event)\\\" tappable></ion-icon>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-header>\\r\\n  <!--Group Content-->\\r\\n  <ion-card-content [hidden]=\\\"!currentGroup.isExpanded\\\" \\r\\n                    class=\\\"no-padding\\\">\\r\\n    <ion-reorder-group disabled=\\\"{{disableDragAndDrop}}\\\"\\r\\n                       (ionItemReorder)=\\\"doReorder($event)\\\"\\r\\n                       #reorderGroup>\\r\\n      <!--Task Cards-->\\r\\n      <ion-item *ngFor=\\\"let task of currentGroup.Tasks\\\"\\r\\n                [hidden]=\\\"!task.IsShown\\\"\\r\\n                lines=\\\"none\\\"\\r\\n                color=\\\"dark\\\"\\r\\n                class=\\\"scroll margin-5 min-height-30 overflow-visible background-dark\\\">\\r\\n        <app-task-card [currentTask]=\\\"task\\\"\\r\\n                        class=\\\"full-size header-border background-white content-center\\\"\\r\\n                        #taskcard></app-task-card>\\r\\n      </ion-item>\\r\\n    </ion-reorder-group>\\r\\n  </ion-card-content>\\r\\n</ion-card>\\r\\n\";","export default \"<ion-card class=\\\"full-height\\\"\\r\\n          color=\\\"light\\\">\\r\\n  <!-- Fixed Header -->\\r\\n  <ion-card-header>\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <!--Back Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"closePopup()\\\">\\r\\n            <ion-icon name=\\\"arrow-back\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <!--Title-->\\r\\n        <ion-col>\\r\\n          <h2>{{ 'group-create.lbl-title' | translate }}</h2>\\r\\n        </ion-col>\\r\\n        <!--Save-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"btnSaveClick()\\\"\\r\\n                      color=\\\"success\\\">\\r\\n            <ion-icon name=\\\"save-outline\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-header>\\r\\n    \\r\\n  <!-- Scrollable Body -->\\r\\n  <ion-card-content>\\r\\n    <ion-list class=\\\"background-light\\\">\\r\\n      <!--Name-->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label class=\\\"font-medium\\\">{{ 'group-create.lbl-group-name' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Name-->\\r\\n          <ion-row class=\\\"content-center\\\">\\r\\n            <ion-col size=\\\"4\\\">\\r\\n              <ion-input fullWidth \\r\\n                         fieldSize=\\\"large\\\" \\r\\n                         [(ngModel)]=\\\"currentGroup.Name\\\" \\r\\n                         maxlength=\\\"200\\\"\\r\\n                         minlength=\\\"1\\\"\\r\\n                         required=\\\"true\\\">\\r\\n              </ion-input>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!-- Default task type -->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col class=\\\"content-center\\\">\\r\\n              <ion-label class=\\\"font-medium\\\">{{ 'group-create.lbl-task-type-default' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Default Task Type Radio-->\\r\\n          <ion-row>\\r\\n            <ion-col class=\\\"grey-box\\\">\\r\\n              <ion-radio-group (ionChange)=\\\"taskTypeChanged($event)\\\"\\r\\n                              [(ngModel)]=\\\"taskTypeValue\\\"\\r\\n                              class=\\\"hidden-overflow\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"text-wrap small-font\\\">{{ 'group-create.lbl-recurring' | translate }}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"  value=\\\"Recurring\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"text-wrap small-font\\\">{{ 'group-create.lbl-once' | translate }}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Once\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-radio-group>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!-- Position -->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col class=\\\"content-center\\\">\\r\\n              <ion-label class=\\\"font-medium\\\">{{ 'group-create.lbl-position' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--First-->\\r\\n          <ion-row *ngIf=\\\"selectedAfterGroup == null\\\">\\r\\n            <ion-col size=\\\"2\\\"></ion-col>\\r\\n            <ion-col >\\r\\n              <ion-label class=\\\"font-medium\\\">{{ 'group-create.lbl-first' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n            <!-- Edit Button -->\\r\\n            <ion-col size=\\\"2\\\">\\r\\n              <ion-button (click)=\\\"btnEditPositionClick()\\\"\\r\\n                          size=\\\"small\\\">\\r\\n                <ion-icon name=\\\"create-outline\\\"\\r\\n                          color=\\\"light\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--After First-->\\r\\n          <ion-row *ngIf=\\\"selectedAfterGroup != null\\\">\\r\\n            <ion-col size=\\\"2\\\"></ion-col>\\r\\n            <ion-col>\\r\\n              <ion-label class=\\\"no-overflow font-medium\\\">{{ 'group-create.lbl-after' | translate }} : {{ selectedAfterGroup.Name }}</ion-label>\\r\\n            </ion-col>\\r\\n            <!-- Edit Button -->\\r\\n            <ion-col size=\\\"2\\\">\\r\\n              <ion-button (click)=\\\"btnEditPositionClick()\\\"\\r\\n                          size=\\\"small\\\">\\r\\n                <ion-icon name=\\\"create-outline\\\"\\r\\n                          color=\\\"light\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!--Task Selected-->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid class=\\\"percent-width\\\">\\r\\n          <!--Select All-->\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"3\\\"></ion-col>\\r\\n            <ion-col size=\\\"9\\\" class=\\\"content-center-left\\\">\\r\\n              <ion-item class=\\\"full-width margin-left\\\"\\r\\n                        lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"no-margin-vertical\\\">{{ 'group-create.lbl-select-all' | translate }}</ion-label>\\r\\n                  <ion-checkbox slot=\\\"start\\\" \\r\\n                                [(ngModel)]=\\\"selectAllChecked\\\"\\r\\n                                class=\\\"no-margin-vertical content-center\\\"\\r\\n                                (click)=\\\"checkAllClick()\\\"></ion-checkbox>\\r\\n                </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Select List-->\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"3\\\">\\r\\n              <ion-label class=\\\"font-medium\\\">{{ 'group-create.lbl-tasks' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"9\\\">\\r\\n              <ion-list class=\\\"max-height-fixed percent-width bordered\\\">\\r\\n                <ion-item *ngFor=\\\"let task of selectableTasks\\\"\\r\\n                          class=\\\"full-width\\\"\\r\\n                          lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"no-margin-vertical\\\">{{ task.Name }}</ion-label>\\r\\n                  <ion-checkbox slot=\\\"start\\\" \\r\\n                                [(ngModel)]=\\\"task.isChecked\\\"\\r\\n                                class=\\\"no-margin-vertical content-center\\\"></ion-checkbox>\\r\\n                </ion-item>\\r\\n              </ion-list>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </ion-card-content>\\r\\n</ion-card>\\r\\n\";","export default \"<ion-card class=\\\"full-height\\\"\\r\\n          color=\\\"light\\\">\\r\\n  <!-- Fixed Header -->\\r\\n  <ion-card-header>\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <!--Back Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"closePopup()\\\">\\r\\n            <ion-icon name=\\\"arrow-back\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <!--Title-->\\r\\n        <ion-col>\\r\\n          <h2>{{ 'group-edit.lbl-title' | translate }}</h2>\\r\\n        </ion-col>\\r\\n        <!--Save-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"btnSaveClick()\\\"\\r\\n                      color=\\\"success\\\">\\r\\n            <ion-icon name=\\\"save-outline\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-header>\\r\\n    \\r\\n  <!-- Scrollable Body -->\\r\\n  <ion-card-content>\\r\\n    <ion-list class=\\\"background-light\\\">\\r\\n      <!--Name-->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label class=\\\"font-medium\\\">{{ 'group-create.lbl-group-name' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Name-->\\r\\n          <ion-row class=\\\"content-center\\\">\\r\\n            <ion-col size=\\\"6\\\">\\r\\n              <ion-input fullWidth \\r\\n                          fieldSize=\\\"large\\\" \\r\\n                          [(ngModel)]=\\\"currentGroup.Name\\\" \\r\\n                          maxlength=\\\"200\\\"\\r\\n                          minlength=\\\"1\\\"\\r\\n                          required=\\\"true\\\">\\r\\n              </ion-input>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!-- Default task type -->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col class=\\\"content-center\\\">\\r\\n              <ion-label class=\\\"font-medium\\\">{{ 'group-create.lbl-task-type-default' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Default Task Type Radio-->\\r\\n          <ion-row>\\r\\n            <ion-col class=\\\"grey-box\\\">\\r\\n              <ion-radio-group (ionChange)=\\\"taskTypeChanged($event)\\\"\\r\\n                              [(ngModel)]=\\\"taskTypeValue\\\"\\r\\n                              class=\\\"hidden-overflow\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"text-wrap small-font\\\">{{ 'group-create.lbl-recurring' | translate }}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"  value=\\\"Recurring\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"text-wrap small-font\\\">{{ 'group-create.lbl-once' | translate }}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Once\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-radio-group>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!-- Position -->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col class=\\\"content-center\\\">\\r\\n              <ion-label class=\\\"font-medium\\\">{{ 'group-create.lbl-position' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--First-->\\r\\n          <ion-row *ngIf=\\\"selectedAfterGroup == null\\\">\\r\\n            <ion-col size=\\\"2\\\"></ion-col>\\r\\n            <ion-col >\\r\\n              <ion-label class=\\\"font-medium\\\">{{ 'group-create.lbl-first' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n            <!-- Edit Button -->\\r\\n            <ion-col size=\\\"2\\\">\\r\\n              <ion-button (click)=\\\"btnEditPositionClick()\\\"\\r\\n                          size=\\\"small\\\">\\r\\n                <ion-icon name=\\\"create-outline\\\"\\r\\n                          color=\\\"light\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--After First-->\\r\\n          <ion-row *ngIf=\\\"selectedAfterGroup != null\\\">\\r\\n            <ion-col size=\\\"2\\\"></ion-col>\\r\\n            <ion-col>\\r\\n              <ion-label class=\\\"no-overflow font-medium\\\">{{ 'group-create.lbl-after' | translate }} : {{ selectedAfterGroup.Name }}</ion-label>\\r\\n            </ion-col>\\r\\n            <!-- Edit Button -->\\r\\n            <ion-col size=\\\"2\\\">\\r\\n              <ion-button (click)=\\\"btnEditPositionClick()\\\"\\r\\n                          size=\\\"small\\\">\\r\\n                <ion-icon name=\\\"create-outline\\\"\\r\\n                          color=\\\"light\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!--Task Selected-->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid class=\\\"percent-width\\\">\\r\\n          <!--Select All-->\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"3\\\"></ion-col>\\r\\n            <ion-col size=\\\"9\\\" class=\\\"content-center-left\\\">\\r\\n              <ion-item class=\\\"full-width margin-left\\\"\\r\\n                        lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"no-margin-vertical\\\">{{ 'group-create.lbl-select-all' | translate }}</ion-label>\\r\\n                  <ion-checkbox slot=\\\"start\\\" \\r\\n                                [(ngModel)]=\\\"selectAllChecked\\\"\\r\\n                                class=\\\"no-margin-vertical content-center\\\"\\r\\n                                (click)=\\\"checkAllClick()\\\"></ion-checkbox>\\r\\n                </ion-item>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Select List-->\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"3\\\">\\r\\n              <ion-label class=\\\"font-medium\\\">{{ 'group-create.lbl-tasks' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"9\\\">\\r\\n              <ion-list class=\\\"max-height-fixed percent-width bordered\\\">\\r\\n                <ion-item *ngFor=\\\"let task of selectableTasks\\\"\\r\\n                          class=\\\"full-width\\\"\\r\\n                          lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"no-margin-vertical\\\">{{ task.Name }}</ion-label>\\r\\n                  <ion-checkbox slot=\\\"start\\\" \\r\\n                                [(ngModel)]=\\\"task.isChecked\\\"\\r\\n                                class=\\\"no-margin-vertical content-center\\\"></ion-checkbox>\\r\\n                </ion-item>\\r\\n              </ion-list>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!-- Delete Button -->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-button (click)=\\\"btnDeleteClick()\\\"\\r\\n                          color=\\\"danger\\\"\\r\\n                          size=\\\"small\\\">\\r\\n                <div class=\\\"content-center-evenly full-size\\\">\\r\\n                  <ion-icon name=\\\"trash-outline\\\"\\r\\n                            color=\\\"light\\\"></ion-icon>\\r\\n                  <ion-label class=\\\"color-white\\\">{{ 'edit-task.btn-delete' | translate }}</ion-label>\\r\\n                </div>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </ion-card-content>\\r\\n</ion-card>\\r\\n\";","export default \"<ion-card class=\\\"full-height modal-card\\\"\\r\\n          color=\\\"light\\\">\\r\\n  <!-- Fixed Header -->\\r\\n  <ion-card-header>\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <!--Back Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"closePopup()\\\">\\r\\n            <ion-icon name=\\\"arrow-back\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <!--Title-->\\r\\n        <ion-col>\\r\\n          <h2>{{ 'group-list.lbl-title' | translate }}</h2>\\r\\n        </ion-col>\\r\\n        <!--Add Group \\\"+\\\" Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button class=\\\"add-task-button\\\" \\r\\n                      (click)=\\\"addGroupButtonClick()\\\" \\r\\n                      color=\\\"dark\\\">+</ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-header>\\r\\n    \\r\\n  <!-- Scrollable Body -->\\r\\n  <ion-card-content class=\\\"bordered scrollable full-height\\\">\\r\\n    <ion-card *ngFor=\\\"let group of calendarTaskService.allGroups\\\"\\r\\n              [hidden]=\\\"group.Void === true\\\"\\r\\n              color=\\\"dark\\\"\\r\\n              class=\\\"content-center\\\"\\r\\n              (click)=\\\"btnGroupHeaderClick(group)\\\" tappable>\\r\\n      <ion-card-header>\\r\\n        <ion-label>\\r\\n          <ion-title class=\\\"text-center color-light\\\">{{ group.Name }} ({{ group.Tasks.length }})</ion-title>\\r\\n        </ion-label>\\r\\n      </ion-card-header>\\r\\n    </ion-card>\\r\\n  </ion-card-content>\\r\\n</ion-card>\\r\\n\";","export default \"\\r\\n<ion-grid>\\r\\n  <!--Create Task-->\\r\\n  <ion-row>\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnCreateTaskClick()\\\"\\r\\n                  color=\\\"dark\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"add-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'group-popover.btn-add-task' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!--Edit Group-->\\r\\n  <ion-row>\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnEditGroupClick()\\\"\\r\\n                  color=\\\"dark\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"create-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'group-popover.btn-edit-group' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!--Skip All-->\\r\\n  <ion-row [hidden]=\\\"!skipAllBtnShown\\\">\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnSkipAllClick()\\\"\\r\\n                  color=\\\"primary\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"close-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'group-popover.btn-skip-all' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!--Postpone All-->\\r\\n  <ion-row [hidden]=\\\"!postponeAllBtnShown\\\">\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnPostponeAllClick()\\\"\\r\\n                  color=\\\"primary\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"arrow-redo-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'group-popover.btn-postpone-all' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-grid>\\r\\n\";","export default \"<ion-grid class=\\\"content-center\\\">\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <ion-card [hidden]=\\\"!showLogin\\\" color=\\\"light\\\">\\r\\n        <ion-card-header class=\\\"content-center\\\">\\r\\n          <h2>{{ 'login.lbl-title' | translate }}</h2>\\r\\n        </ion-card-header>\\r\\n      \\r\\n        <ion-card-content>\\r\\n          <firebase-ui\\r\\n            (signInSuccessWithAuthResult)=\\\"successCallback($event)\\\"\\r\\n            (signInFailure)=\\\"errorCallback($event)\\\"></firebase-ui>\\r\\n        </ion-card-content>\\r\\n      </ion-card>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-grid>\\r\\n\";","export default \"<ion-card class=\\\"full-height\\\"\\r\\n          color=\\\"light\\\">\\r\\n  <!-- Fixed Header -->\\r\\n  <ion-card-header color=\\\"light\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <!--Back Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"closePopup()\\\">\\r\\n            <ion-icon name=\\\"arrow-back\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <!--Title-->\\r\\n        <ion-col>\\r\\n          <h2>{{ 'note-list.lbl-title' | translate }}</h2>\\r\\n        </ion-col>\\r\\n        <!--Potential future \\\"+\\\" Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Filters-->\\r\\n      <ion-row class=\\\"bordered background-white\\\">\\r\\n        <ion-col>\\r\\n          <ion-grid>\\r\\n            <!--Title-->\\r\\n            <!--ion-row>\\r\\n              <ion-col>\\r\\n                <h2>{{ 'note-list.lbl-filters' | translate }}</h2>\\r\\n              </ion-col>\\r\\n            </ion-row-->\\r\\n            <ion-row>\\r\\n              <!--Start Date label-->\\r\\n              <ion-col size=\\\"3\\\">\\r\\n                <ion-label>{{ 'note-list.lbl-start-date' | translate }}</ion-label>\\r\\n              </ion-col>\\r\\n              <!--Start Date Button-->\\r\\n              <ion-col>\\r\\n                <ion-button size=\\\"small\\\"\\r\\n                            class=\\\"no-margin-vertical\\\">{{ startDateText }}</ion-button>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <!--End Date label-->\\r\\n              <ion-col size=\\\"3\\\">\\r\\n                <ion-label>{{ 'note-list.lbl-end-date' | translate }}</ion-label>\\r\\n              </ion-col>\\r\\n              <!--End Date Button-->\\r\\n              <ion-col>\\r\\n                <ion-button size=\\\"small\\\"\\r\\n                            class=\\\"no-margin-vertical\\\">{{ endDateText }}</ion-button>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <!--Keyword label-->\\r\\n              <ion-col size=\\\"3\\\">\\r\\n                <ion-label>{{ 'note-list.lbl-keyword' | translate }}</ion-label>\\r\\n              </ion-col>\\r\\n              <!--Keyword textbox-->\\r\\n              <ion-col>\\r\\n                <ion-input class=\\\"no-margin-vertical bordered percent-width\\\"\\r\\n                           [(ngModel)]=\\\"keywordSearch\\\"\\r\\n                           (ionChange)=\\\"keywordChanged()\\\"></ion-input>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <!--Task Filters-->\\r\\n            <ion-row>\\r\\n              <ion-col size=\\\"3\\\">\\r\\n                <ion-label>{{ 'note-list.lbl-tasks' | translate }}</ion-label>\\r\\n              </ion-col>\\r\\n              <ion-col>\\r\\n                <ion-list class=\\\"max-height-fixed percent-width bordered\\\">\\r\\n                  <ion-item *ngFor=\\\"let taskFilter of taskFilters\\\"\\r\\n                            class=\\\"full-width\\\"\\r\\n                            lines=\\\"none\\\">\\r\\n                    <ion-label class=\\\"no-margin-vertical\\\">{{ taskFilter.Name }}</ion-label>\\r\\n                    <ion-checkbox slot=\\\"start\\\" \\r\\n                                  [(ngModel)]=\\\"taskFilter.isChecked\\\"\\r\\n                                  class=\\\"no-margin-vertical content-center\\\"\\r\\n                                  (ionChange)=\\\"checkboxChanged()\\\"></ion-checkbox>\\r\\n                  </ion-item>\\r\\n                </ion-list>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n          </ion-grid>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-header>\\r\\n    \\r\\n  <!-- Scrollable Body -->\\r\\n  <ion-card-content class=\\\"bordered scrollable full-height background-white\\\">\\r\\n    <!--History Card-->\\r\\n    <ion-grid *ngFor=\\\"let note of filteredNotes\\\"\\r\\n              class=\\\"bordered note-padding\\\">\\r\\n      <!--Line1-->\\r\\n      <ion-row>\\r\\n        <!--Task Name-->\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-label>{{ note.taskName }}</ion-label>\\r\\n        </ion-col>\\r\\n        <!--Date-->\\r\\n        <ion-col size=\\\"4\\\">\\r\\n          <ion-label>{{ note.dateText }}</ion-label>\\r\\n        </ion-col>\\r\\n        <!--Empty column-->\\r\\n        <ion-col size=\\\"1\\\"></ion-col>\\r\\n        <!--Task Result-->\\r\\n        <ion-col class=\\\"bordered\\\">\\r\\n          <ion-icon *ngIf=\\\"note.showCheckedBox\\\"\\r\\n                    name=\\\"checkbox\\\" \\r\\n                    class=\\\"zoom\\\"></ion-icon>\\r\\n          <ion-label *ngIf=\\\"note.showText\\\"\\r\\n                    style=\\\"margin:auto;\\\" \\r\\n                    class=\\\"font-small\\\">{{ note.result }}</ion-label>\\r\\n          <!--Task Skipped (Displayed if skipped)-->\\r\\n          <ion-icon *ngIf=\\\"note.showBrokenHeart\\\"\\r\\n                    class=\\\"content-center zoom\\\"\\r\\n                    name=\\\"close-outline\\\"></ion-icon>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Comment-->\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"10\\\"\\r\\n                 class=\\\"content-center-left bordered\\\"\\r\\n                 (click)=\\\"textClick(note)\\\" tappable>\\r\\n          <ion-text class=\\\"text-align-left\\\">{{ note.text }}</ion-text>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"1\\\"\\r\\n                 class=\\\"bordered\\\"\\r\\n                 (click)=\\\"btnDeleteCommentClick(note)\\\" tappable>\\r\\n          <ion-icon name=\\\"trash-outline\\\"></ion-icon>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Buttons-->\\r\\n      <ion-row *ngIf=\\\"false\\\"\\r\\n               class=\\\"bordered\\\">\\r\\n        <!--Edit-->\\r\\n        <ion-col>\\r\\n          <ion-button size=\\\"small\\\"\\r\\n                      color=\\\"dark\\\">{{ 'note-list.btn-edit' | translate }}</ion-button>\\r\\n        </ion-col>\\r\\n        <!--Delete-->\\r\\n        <ion-col>\\r\\n          <ion-button size=\\\"small\\\"\\r\\n                      color=\\\"danger\\\">{{ 'note-list.btn-delete' | translate }}</ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-content>\\r\\n</ion-card>\";","export default \"<ion-card class=\\\"full-height\\\">\\r\\n  <!-- Fixed Header -->\\r\\n  <ion-card-header>\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <!--Back Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"closePopup()\\\">\\r\\n            <ion-icon name=\\\"arrow-back\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <!--Title-->\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <h2>{{ 'privacy.lbl-title' | translate }}</h2>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-header>\\r\\n\\r\\n  <ion-card-content>\\r\\n    <ion-grid>\\r\\n      <!--Data What is collected-->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <h3>{{ 'privacy.lbl-question-what-collect' | translate }}</h3>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'privacy.lbl-answer-email' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'privacy.lbl-answer-tasks' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'privacy.lbl-answer-errors' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Data What is shared-->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <h3>{{ 'privacy.lbl-question-what-share' | translate }}</h3>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'privacy.lbl-answer-what-share' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Data Where-->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <h3>{{ 'privacy.lbl-question-where' | translate }}</h3>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'privacy.lbl-answer-where' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Data Protection-->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <h3>{{ 'privacy.lbl-question-protected' | translate }}</h3>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'privacy.lbl-answer-protected' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Data Access-->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <h3>{{ 'privacy.lbl-question-access' | translate }}</h3>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'privacy.lbl-answer-access' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Accept-->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <h3>{{ 'privacy.lbl-question-accept' | translate }}</h3>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'privacy.lbl-answer-accept' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Last Update-->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'privacy.lbl-last-update' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-content>\\r\\n</ion-card>\";","export default \"<ion-card>\\r\\n  <!--Title-->\\r\\n  <ion-card-header>\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <!--Back Button-->\\r\\n        <ion-col size=\\\"3\\\"\\r\\n                 class=\\\"content-center\\\">\\r\\n          <ion-button (click)=\\\"btnCancelClick()\\\">\\r\\n            <ion-icon name=\\\"arrow-back\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <!--Title-->\\r\\n        <ion-col size=\\\"6\\\"\\r\\n                 class=\\\"content-center\\\">\\r\\n          <h2 class=\\\"text-wrap text-center\\\">{{ 'send-feedback.lbl-title' | translate }}</h2>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-header>\\r\\n\\r\\n  <ion-card-content>\\r\\n    <ion-grid>\\r\\n      <!--Feedback Type-->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-segment (ionChange)=\\\"feedbackTypeChanged($event)\\\"\\r\\n                      value=\\\"feedback\\\">\\r\\n            <ion-segment-button value=\\\"feedback\\\">\\r\\n              <ion-label class=\\\"text-wrap\\\">{{ 'send-feedback.radio-feedback' | translate }}</ion-label>\\r\\n            </ion-segment-button>\\r\\n            <ion-segment-button value=\\\"bug\\\">\\r\\n              <ion-label class=\\\"text-wrap\\\">{{ 'send-feedback.radio-bug' | translate }}</ion-label>\\r\\n            </ion-segment-button>\\r\\n            <ion-segment-button value=\\\"support\\\">\\r\\n              <ion-label class=\\\"text-wrap\\\">{{ 'send-feedback.radio-support' | translate }}</ion-label>\\r\\n            </ion-segment-button>\\r\\n          </ion-segment>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Bugs-->\\r\\n      <ion-row [hidden]=\\\"!showBugsTab\\\" \\r\\n               class=\\\"grey-box padding-5\\\">\\r\\n        <ion-col>\\r\\n          <ion-grid>\\r\\n            <!--Bug explanation-->\\r\\n            <ion-row>\\r\\n              <ion-col>\\r\\n                <ion-label>{{ 'send-feedback.lbl-bug-explanation' | translate }}</ion-label>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <!--Bug report title-->\\r\\n            <ion-row>\\r\\n              <ion-col>\\r\\n                <ion-grid class=\\\"grey-box\\\">\\r\\n                  <!--Title-->\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-input placeholder=\\\"Enter your title here\\\"\\r\\n                                 [(ngModel)]=\\\"bugReport.Title\\\"\\r\\n                                 required=\\\"true\\\"\\r\\n                                 autofocus=\\\"true\\\"\\r\\n                                 maxlength=\\\"200\\\"></ion-input>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                  <!--Description-->\\r\\n                  <ion-row>\\r\\n                    <ion-col>\\r\\n                      <ion-input placeholder=\\\"Enter your description here\\\"\\r\\n                                 [(ngModel)]=\\\"bugReport.Description\\\"\\r\\n                                 maxlength=\\\"20000\\\"></ion-input>\\r\\n                    </ion-col>\\r\\n                  </ion-row>\\r\\n                </ion-grid>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <!--ion-row>\\r\\n              <ion-col class=\\\"content-center\\\">\\r\\n                <ion-button>{{ 'send-feedback.upload-screenshot' | translate }}</ion-button>\\r\\n              </ion-col>\\r\\n            </ion-row-->\\r\\n            <ion-row>\\r\\n              <ion-col class=\\\"content-center\\\">\\r\\n                <ion-button (click)=\\\"btnSendClick()\\\">{{ 'send-feedback.btn-send' | translate }}</ion-button>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n          </ion-grid>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Survey-->\\r\\n      <ion-row [hidden]=\\\"!showSurveyTab\\\"\\r\\n               class=\\\"grey-box padding-5\\\">\\r\\n        <ion-col>\\r\\n          <ion-grid>\\r\\n            <!--Survey explanation-->\\r\\n            <ion-row>\\r\\n              <ion-col>\\r\\n                <ion-label>{{ 'send-feedback.lbl-survey' | translate }}</ion-label>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <!--Survey link-->\\r\\n            <ion-row>\\r\\n              <ion-col class=\\\"content-center\\\">\\r\\n                <ion-button (click)=\\\"btnSurveyClick()\\\">{{ 'send-feedback.btn-survey' | translate }}</ion-button>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n          </ion-grid>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Support-->\\r\\n      <ion-row [hidden]=\\\"!showSupportTab\\\"\\r\\n               class=\\\"grey-box padding-5\\\">\\r\\n        <ion-col>\\r\\n          <ion-grid>\\r\\n            <!--Emails-->\\r\\n            <ion-row>\\r\\n              <ion-col>\\r\\n                <ion-label>{{ 'send-feedback.lbl-support' | translate }}</ion-label>\\r\\n                <!--ion-label>Click the button below to start a chat conversation for support! Thank you for your patience, support is not 24/7, but we will get back to you as soon as possible.</ion-label-->\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <!--Survey link-->\\r\\n            <ion-row>\\r\\n              <ion-col class=\\\"content-center\\\">\\r\\n                <ion-button (click)=\\\"btnSupportClick()\\\">{{ 'send-feedback.btn-support' | translate }}</ion-button>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n          </ion-grid>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-content>\\r\\n</ion-card>\";","export default \"<ion-menu contentId=\\\"main-content\\\" \\r\\n          side=\\\"start\\\">\\r\\n  <!--Header-->\\r\\n  <ion-header>\\r\\n    <ion-toolbar color=\\\"dark\\\">\\r\\n      <ion-grid>\\r\\n        <ion-row class=\\\"content-center\\\">\\r\\n          <ion-col size=\\\"3\\\">\\r\\n            <!--ion-img [src]=\\\"assets/img/round.png\\\"></ion-img-->\\r\\n          </ion-col>\\r\\n          <!--Title-->\\r\\n          <ion-col size=\\\"6\\\" class=\\\"content-center\\\">\\r\\n              <ion-title>\\r\\n                <ion-label color=\\\"light\\\">{{ 'menu.lbl-title' | translate }}</ion-label>\\r\\n              </ion-title>\\r\\n          </ion-col>\\r\\n          <!--Close menu button-->\\r\\n          <ion-col size=\\\"3\\\">\\r\\n            <ion-button (click)=\\\"btnCloseMenuClick()\\\"\\r\\n                        color=\\\"primary\\\">\\r\\n              <ion-icon name=\\\"close\\\"\\r\\n                        color=\\\"light\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-toolbar>\\r\\n  </ion-header>\\r\\n\\r\\n  <!--Body-->\\r\\n  <ion-content>\\r\\n    <ion-list>\\r\\n      <!--Reload from server-->\\r\\n      <ion-item [hidden]=\\\"!showRefresh || !showDevMode\\\"\\r\\n                (click)=\\\"btnReloadFromServerClick()\\\"\\r\\n                tappable\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-icon name=\\\"cloud-download-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-reload-from-server' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Send data to server-->\\r\\n      <ion-item [hidden]=\\\"!showRefresh || !showDevMode\\\"\\r\\n                (click)=\\\"btnSendDataToServerClick()\\\"\\r\\n                tappable\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-icon name=\\\"cloud-upload-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-send-to-server' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Resume event-->\\r\\n      <!--ion-item [hidden]=\\\"!showRefresh || !showDevMode\\\"\\r\\n                (click)=\\\"btnResumeClick()\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-icon name=\\\"cloud-download-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>Resume</ion-label>\\r\\n      </ion-item-->\\r\\n      <!--User Settings-->\\r\\n      <ion-item (click)=\\\"btnUserSettingsClick()\\\"\\r\\n                lines=\\\"none\\\"\\r\\n                tappable>\\r\\n        <ion-icon name=\\\"settings-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-user-settings' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Task Groups-->\\r\\n      <ion-item (click)=\\\"btnTaskGroupsClick()\\\"\\r\\n                lines=\\\"none\\\"\\r\\n                tappable>\\r\\n        <ion-icon name=\\\"layers-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-groups' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Notes-->\\r\\n      <ion-item (click)=\\\"btnNoteClick()\\\"\\r\\n                lines=\\\"none\\\"\\r\\n                tappable>\\r\\n        <ion-icon name=\\\"pencil-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-notes' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Achievements-->\\r\\n      <!--ion-item lines=\\\"none\\\">\\r\\n        <ion-icon name=\\\"trophy-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-achievements' | translate }}</ion-label>\\r\\n      </ion-item-->\\r\\n      <!--Select new tasks-->\\r\\n      <ion-item (click)=\\\"btnSelectNewTasksClick()\\\"\\r\\n                lines=\\\"none\\\"\\r\\n                tappable>\\r\\n        <ion-icon name=\\\"library-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-select-new-tasks' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Check for update-->\\r\\n      <ion-item *ngIf=\\\"showCheckForUpdateBtn\\\"\\r\\n                (click)=\\\"btnCheckForUpdateClick()\\\"\\r\\n                lines=\\\"none\\\"\\r\\n                tappable>\\r\\n        <ion-icon name=\\\"cloud-download-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-check-for-update' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Send Feedback-->\\r\\n      <ion-item (click)=\\\"btnBugReportClick()\\\"\\r\\n                lines=\\\"none\\\"\\r\\n                tappable>\\r\\n        <ion-icon name=\\\"chatbubble-ellipses-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-send-feedback' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--View changelog-->\\r\\n      <ion-item *ngIf=\\\"showViewChangelogBtn\\\"\\r\\n            (click)=\\\"btnChangeLogClick()\\\"\\r\\n            lines=\\\"none\\\"\\r\\n            tappable>\\r\\n        <ion-icon name=\\\"list-outline\\\" \\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-view-changelog' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Walkthrough-->\\r\\n      <ion-item (click)=\\\"btnWalkthroughClick()\\\"\\r\\n                lines=\\\"none\\\"\\r\\n                tappable>\\r\\n        <ion-icon name=\\\"school-outline\\\" \\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-walkthrough' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Privacy-->\\r\\n      <ion-item (click)=\\\"btnPrivacyClick()\\\"\\r\\n                lines=\\\"none\\\"\\r\\n                tappable>\\r\\n        <ion-icon name=\\\"cloud-upload-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-privacy' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Terms and conditions-->\\r\\n      <ion-item (click)=\\\"btnTermsClick()\\\"\\r\\n                lines=\\\"none\\\"\\r\\n                tappable>\\r\\n        <ion-icon name=\\\"document-text-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-terms-and-conditions' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Delete local database-->\\r\\n      <ion-item [hidden]=\\\"!showDevMode\\\"\\r\\n                (click)=\\\"btnResetLocalDatabase()\\\"\\r\\n                lines=\\\"none\\\"\\r\\n                tappable>\\r\\n        <ion-icon name=\\\"trash-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-reset-local-database' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Calendar-->\\r\\n      <!--ion-item *ngIf=\\\"showDevMode\\\"\\r\\n                (click)=\\\"btnCalendarClick()\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-icon name=\\\"calendar-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-calendar' | translate }}</ion-label>\\r\\n      </ion-item-->\\r\\n      <!--Show Unsynced Data-->\\r\\n      <ion-item *ngIf=\\\"showDevMode\\\"\\r\\n                (click)=\\\"btnShowUnsyncedData()\\\"\\r\\n                lines=\\\"none\\\"\\r\\n                tappable>\\r\\n        <ion-icon name=\\\"sync-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-show-unsynced-data' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Show Debug Logs-->\\r\\n      <ion-item [hidden]=\\\"!showDevMode\\\"\\r\\n                (click)=\\\"btnShowDebugLogs()\\\"\\r\\n                lines=\\\"none\\\"\\r\\n                tappable>\\r\\n        <ion-icon name=\\\"document-text-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-show-logs' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Road Map-->\\r\\n      <!--ion-item lines=\\\"none\\\">\\r\\n        <ion-icon name=\\\"map-outline\\\"\\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-road-map' | translate }}</ion-label>\\r\\n      </ion-item-->\\r\\n      <!--Logout-->\\r\\n      <ion-item (click)=\\\"btnLogoutClick()\\\"\\r\\n                lines=\\\"none\\\"\\r\\n                tappable>\\r\\n        <ion-icon name=\\\"exit-outline\\\" \\r\\n                  slot=\\\"start\\\"></ion-icon>\\r\\n        <ion-label>{{ 'menu.btn-logout' | translate }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Version-->\\r\\n      <ion-item class=\\\"content-center\\\" \\r\\n                lines=\\\"none\\\"\\r\\n                tappable>\\r\\n          <ion-label>{{ 'menu.lbl-version' | translate }} : {{ appVersionText }}</ion-label>\\r\\n      </ion-item>\\r\\n      <!--Files To Transfer-->\\r\\n      <ion-item *ngIf=\\\"showDevMode\\\"\\r\\n                class=\\\"content-center\\\"\\r\\n                lines=\\\"none\\\"\\r\\n                tappable>\\r\\n        <ion-label>Dev mode</ion-label>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </ion-content>\\r\\n</ion-menu>\";","export default \"\\r\\n<ion-grid>\\r\\n  <ion-row>\\r\\n    <ion-col>\\r\\n      <ion-text>{{ 'skips-popover.msg-top' | translate: {x: daysInARow} }}</ion-text>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!--Skip-->\\r\\n  <ion-row>\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnYesClick()\\\"\\r\\n                  color=\\\"primary\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"cancel-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'skips-popover.btn-yes' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!--Postpone-->\\r\\n  <ion-row>\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnPostponeClick()\\\"\\r\\n                  color=\\\"primary\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"arrow-redo-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'skips-popover.btn-postpone' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!--Delete-->\\r\\n  <ion-row>\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnDeleteClick()\\\"\\r\\n                  color=\\\"danger\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"trash-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'skips-popover.btn-delete' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n  <!--Enable notifications-->\\r\\n  <!--ion-row [hidden]=\\\"currentTask.NotificationId > 0\\\">\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnEnableNotificationsClick()\\\"\\r\\n                  color=\\\"dark\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"notifications-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'skips-popover.btn-enable-notifications' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row-->\\r\\n  <!--Cancel (Do nothing)-->\\r\\n  <ion-row>\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnCancelClick()\\\"\\r\\n                  color=\\\"dark\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"cancel-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'skips-popover.btn-cancel' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-grid>\\r\\n\";","export default \"<ion-card class=\\\"full-height\\\"\\r\\n          color=\\\"light\\\">\\r\\n  <!-- Fixed Header -->\\r\\n  <ion-card-header>\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <!--Back Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"closePopup()\\\">\\r\\n            <ion-icon name=\\\"arrow-back\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <!--Title-->\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <ion-label color=\\\"dark\\\">\\r\\n            <ion-title>{{ 'create-task.lbl-title' | translate }}</ion-title>\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n        <!--Save Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"btnSaveClick()\\\"\\r\\n                      color=\\\"success\\\">\\r\\n            <ion-icon name=\\\"save-outline\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-header>\\r\\n\\r\\n  <!-- Scrollable Body -->\\r\\n  <ion-card-content>\\r\\n    <ion-list>\\r\\n      <!--Name-->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label>{{ 'create-task.lbl-task-name' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-input fullWidth \\r\\n                         fieldSize=\\\"large\\\" \\r\\n                         [(ngModel)]=\\\"currentTask.Name\\\" \\r\\n                         maxlength=\\\"200\\\"\\r\\n                         required=\\\"true\\\"\\r\\n                         #taskName>\\r\\n              </ion-input>              \\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!-- Scheduling -->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label>{{ 'create-task.lbl-schedule' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Recurring vs Once-->\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-segment (ionChange)=\\\"recurringChanged($event, null)\\\"\\r\\n                           [(ngModel)]=\\\"recurringValue\\\">\\r\\n                <ion-segment-button value=\\\"Recurring\\\">\\r\\n                  <ion-label class=\\\"text-wrap\\\">{{ 'create-task.radio-recurring' | translate }}</ion-label>\\r\\n                </ion-segment-button>\\r\\n                <ion-segment-button value=\\\"Once\\\">\\r\\n                  <ion-label class=\\\"text-wrap\\\">{{ 'create-task.radio-once' | translate }}</ion-label>\\r\\n                </ion-segment-button>\\r\\n              </ion-segment>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Single Date vs Until Done-->\\r\\n          <ion-row [hidden]=\\\"!showSingleDay\\\">\\r\\n            <ion-col class=\\\"grey-box\\\">\\r\\n              <ion-radio-group (ionChange)=\\\"singleDateChanged($event)\\\"\\r\\n                               value=\\\"UntilDone\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"text-wrap\\\">{{ 'create-task.radio-until-done' | translate }}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"  value=\\\"UntilDone\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"text-wrap\\\">{{ 'create-task.radio-chosen-day' | translate }}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\" value=\\\"ChosenDayOnly\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-radio-group>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Assigned Date-->\\r\\n          <ion-row [hidden]=\\\"!showAssignedDate\\\"\\r\\n                   class=\\\"grey-box\\\">\\r\\n            <ion-col>\\r\\n              <ion-grid>\\r\\n                <!--Title + Date Value-->\\r\\n                <ion-row>\\r\\n                  <ion-col>\\r\\n                    <ng-container class=\\\"content-center\\\">\\r\\n                      <ion-label>{{ 'create-task.lbl-task-date' | translate }} : {{ currentAssignedDateString }}</ion-label>\\r\\n                    </ng-container>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n                <!--Edit date button-->\\r\\n                <ion-row [hidden]=\\\"!showAssignedDate\\\">\\r\\n                  <ion-col class=\\\"content-center\\\">\\r\\n                    <ion-button (click)=\\\"btnAssignedDateClick()\\\">                \\r\\n                      <div class=\\\"content-center-evenly full-size\\\">\\r\\n                        <ion-icon name=\\\"create-outline\\\"\\r\\n                                  color=\\\"light\\\"></ion-icon>\\r\\n                        <ion-label class=\\\"color-white\\\">{{ 'edit-task.btn-edit-group' | translate }}</ion-label>\\r\\n                      </div>\\r\\n                    </ion-button>\\r\\n                    <!--Set value to tomorrow-->\\r\\n                    <ion-button [hidden]=\\\"!showSetToTomorrow\\\"\\r\\n                                (click)=\\\"btnSetToTomorrow()\\\">{{ 'edit-task.btn-set-to-tomorrow' | translate }}</ion-button>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!-- Required Days -->\\r\\n          <ion-row [hidden]=\\\"!showRequiredDays\\\"\\r\\n                   class=\\\"grey-box\\\">\\r\\n            <ion-col>\\r\\n              <ion-grid>\\r\\n                <ion-row>\\r\\n                  <ion-col>\\r\\n                    <ion-label>{{ 'create-task.lbl-required-days' | translate }}</ion-label>\\r\\n                  </ion-col>\\r\\n                </ion-row> \\r\\n                <ion-row [hidden]=\\\"!showRequiredDays\\\" \\r\\n                          class=\\\"margin-bottom\\\">\\r\\n                  <ion-col *ngFor=\\\"let day of daysOfWeek\\\" \\r\\n                            class=\\\"column\\\">\\r\\n                    <ion-label class=\\\"no-margin-vertical\\\">{{ day | formatDayOfWeekAbbrPipe }}</ion-label>\\r\\n                    <ion-checkbox (ionChange)=\\\"cbDayOfWeek($event, day)\\\" \\r\\n                                  [checked]=\\\"true\\\"\\r\\n                                  class=\\\"no-margin\\\"></ion-checkbox>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!-- Every x week -->\\r\\n          <!--ion-row [hidden]=\\\"!showRequiredDays\\\"\\r\\n                   class=\\\"grey-box\\\">\\r\\n            <ion-col>\\r\\n              <ion-grid>\\r\\n                <ion-row>\\r\\n                  <ion-col size=\\\"2\\\"></ion-col>\\r\\n                  <ion-col>\\r\\n                    <ion-label>Every </ion-label>\\r\\n                  </ion-col>\\r\\n                  <ion-col>\\r\\n                    <ion-button>1</ion-button>\\r\\n                  </ion-col>\\r\\n                  <ion-col>\\r\\n                    <ion-button>Week</ion-button>\\r\\n                  </ion-col>\\r\\n                  <ion-col size=\\\"2\\\"></ion-col>\\r\\n                </ion-row> \\r\\n              </ion-grid>\\r\\n            </ion-col>\\r\\n          </ion-row-->\\r\\n          <!--Start Date-->\\r\\n          <!--ion-row [hidden]=\\\"showAssignedDate\\\"\\r\\n                   class=\\\"grey-box\\\">\\r\\n            <ion-col>\\r\\n              <ion-grid>\\r\\n                <ion-row>\\r\\n                  <Date Value>\\r\\n                  <ion-col size=\\\"9\\\">\\r\\n                    <ion-label>{{ 'create-task.lbl-task-start-date' | translate }} : {{ currentAssignedDateString }}</ion-label>\\r\\n                  </ion-col>\\r\\n                  <Edit Button>\\r\\n                  <ion-col class=\\\"content-center\\\">\\r\\n                    <ion-button (click)=\\\"btnAssignedDateClick()\\\">                \\r\\n                      <ion-icon name=\\\"create-outline\\\"\\r\\n                                color=\\\"light\\\"></ion-icon>\\r\\n                    </ion-button>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n            </ion-col>\\r\\n          </ion-row-->\\r\\n          <!--Keep appearing if skipped-->\\r\\n          <!--ion-row [hidden]=\\\"showAssignedDate\\\"\\r\\n                   class=\\\"grey-box\\\">\\r\\n            <ion-col size=\\\"9\\\">\\r\\n              <ion-label>Keep appearing if skipped</ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col>\\r\\n              <ion-toggle></ion-toggle>\\r\\n            </ion-col>\\r\\n          </ion-row-->\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!-- Result Type -->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label>{{ 'create-task.lbl-result-type' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"2\\\"></ion-col>\\r\\n            <ion-col>\\r\\n              <ion-label>{{ selectedResultTypeCaption }}</ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"2\\\">\\r\\n              <ion-button (click)=\\\"selectResultType()\\\">\\r\\n                <ion-icon name=\\\"create-outline\\\"\\r\\n                          color=\\\"light\\\"\\r\\n                          size=\\\"small\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!--Group-->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col class=\\\"content-center\\\">\\r\\n              <ion-label>{{ 'create-task.lbl-group' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Current Group-->\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"2\\\"></ion-col>\\r\\n            <ion-col>\\r\\n              <ion-label *ngIf=\\\"selectedGroup != null\\\"\\r\\n                         class=\\\"text-wrap\\\">{{ selectedGroup.Name }}</ion-label>\\r\\n            </ion-col>\\r\\n            <!--Edit Group-->\\r\\n            <ion-col size=\\\"2\\\">\\r\\n              <ion-button (click)=\\\"selectGroup()\\\">\\r\\n                <ion-icon name=\\\"create-outline\\\"\\r\\n                          color=\\\"light\\\"\\r\\n                          size=\\\"small\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!-- Position -->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col class=\\\"content-center\\\">\\r\\n              <ion-label>{{ 'create-task.lbl-position' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--First-->\\r\\n          <ion-row *ngIf=\\\"selectedAfterTask == null\\\">\\r\\n            <ion-col size=\\\"2\\\"></ion-col>\\r\\n            <ion-col>\\r\\n              <ion-label>{{ 'edit-task.lbl-first' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n            <!--Edit Button-->\\r\\n            <ion-col size=\\\"2\\\">\\r\\n              <ion-button (click)=\\\"selectPosition()\\\">\\r\\n                <ion-icon name=\\\"create-outline\\\"\\r\\n                          color=\\\"light\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--After First-->\\r\\n          <ion-row *ngIf=\\\"selectedAfterTask != null\\\">\\r\\n            <ion-col size=\\\"2\\\"></ion-col>\\r\\n            <ion-col size=\\\"8\\\">\\r\\n              <ion-label class=\\\"text-wrap\\\">{{ 'edit-task.lbl-after' | translate }} : {{ selectedAfterTask.Name }}</ion-label>\\r\\n            </ion-col>\\r\\n            <!--Edit Button-->\\r\\n            <ion-col size=\\\"2\\\">\\r\\n              <ion-button (click)=\\\"selectPosition()\\\">\\r\\n                <ion-icon name=\\\"create-outline\\\"\\r\\n                          color=\\\"light\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!--Notifications-->\\r\\n      <ion-item lines=\\\"none\\\"\\r\\n                class=\\\"black-box\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label>{{ 'user-settings.lbl-notifications' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Inactivity Notification-->\\r\\n          <ion-row>\\r\\n            <!--Description-->\\r\\n            <ion-col size=\\\"9\\\">\\r\\n              <ion-text class=\\\"small-font margin-left\\\">{{ 'user-settings.lbl-inactivity-reminder-description' | translate }}</ion-text>\\r\\n            </ion-col>\\r\\n            <!--Toggle-->\\r\\n            <ion-col size=\\\"3\\\">\\r\\n              <ion-toggle [(ngModel)]=\\\"notificationEnabled\\\"\\r\\n                          class=\\\"hidden-overflow\\\">\\r\\n              </ion-toggle>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Hour-->\\r\\n          <ion-row [hidden]=\\\"!notificationEnabled\\\">\\r\\n            <ion-col>\\r\\n              <ion-button (click)=\\\"btnNotificationEnterTimeClick()\\\">{{ notificationTimeValue }}</ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </ion-card-content>\\r\\n</ion-card>\";","export default \"<ion-card class=\\\"full-height\\\"\\r\\n          color=\\\"light\\\">\\r\\n  <!-- Fixed Header -->\\r\\n  <ion-card-header>\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <!--Back Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"closePopup()\\\">\\r\\n            <ion-icon name=\\\"arrow-back\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <!--Title-->\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <ion-label color=\\\"dark\\\">\\r\\n            <ion-title>\\r\\n              {{ 'edit-task.lbl-title' | translate }}\\r\\n            </ion-title>\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n        <!--Save Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"btnSaveClick()\\\"\\r\\n                      color=\\\"success\\\">\\r\\n            <ion-icon name=\\\"save-outline\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-header>\\r\\n\\r\\n  <!-- Scrollable Body -->\\r\\n  <ion-card-content>\\r\\n    <ion-list>\\r\\n      <!--Task Name-->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label>{{ 'edit-task.lbl-task-name' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-input fullWidth \\r\\n                         fieldSize=\\\"large\\\" \\r\\n                         [(ngModel)]=\\\"currentTask.Name\\\" \\r\\n                         maxlength=\\\"200\\\"\\r\\n                         required=\\\"true\\\">\\r\\n              </ion-input>              \\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!-- Scheduling -->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label>{{ 'edit-task.lbl-schedule' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Recurring vs Once-->\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-segment value=\\\"{{recurringValue}}\\\"\\r\\n                           (ionChange)=\\\"recurringChanged($event)\\\">\\r\\n                <ion-segment-button value=\\\"Recurring\\\">\\r\\n                  <ion-label class=\\\"text-wrap\\\">{{ 'create-task.radio-recurring' | translate }}</ion-label>\\r\\n                </ion-segment-button>\\r\\n                <ion-segment-button value=\\\"Once\\\">\\r\\n                  <ion-label class=\\\"text-wrap\\\">{{ 'create-task.radio-once' | translate }}</ion-label>\\r\\n                </ion-segment-button>\\r\\n              </ion-segment>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Single Date vs Until Done-->\\r\\n          <ion-row [hidden]=\\\"!showSingleDay\\\">\\r\\n            <ion-col class=\\\"grey-box\\\">\\r\\n              <ion-radio-group (ionChange)=\\\"singleDateChanged($event)\\\"\\r\\n                               [(ngModel)]=\\\"untilDoneCurrentValue\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"text-wrap\\\">{{ 'create-task.radio-until-done' | translate }}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"  value=\\\"UntilDone\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"text-wrap\\\">{{ 'create-task.radio-chosen-day' | translate }}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\" value=\\\"ChosenDayOnly\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-radio-group>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Assigned Date-->\\r\\n          <ion-row [hidden]=\\\"!showAssignedDate\\\"\\r\\n                   class=\\\"grey-box\\\">\\r\\n            <ion-col>\\r\\n              <ion-grid>\\r\\n                <!--Title + Date Value-->\\r\\n                <ion-row>\\r\\n                  <ion-col>\\r\\n                    <ng-container class=\\\"content-center\\\">\\r\\n                      <ion-label>{{ 'create-task.lbl-task-date' | translate }} : {{ currentAssignedDateString }}</ion-label>\\r\\n                    </ng-container>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n                <!--Edit date button-->\\r\\n                <ion-row [hidden]=\\\"!showAssignedDate\\\">\\r\\n                  <ion-col class=\\\"content-center\\\">\\r\\n                    <ion-button (click)=\\\"btnAssignedDateClick()\\\">                \\r\\n                      <div class=\\\"content-center-evenly full-size\\\">\\r\\n                        <ion-icon name=\\\"create-outline\\\"\\r\\n                                  color=\\\"light\\\"></ion-icon>\\r\\n                        <ion-label class=\\\"color-white\\\">{{ 'edit-task.btn-edit-group' | translate }}</ion-label>\\r\\n                      </div>\\r\\n                    </ion-button>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!-- Required Days -->\\r\\n          <ion-row [hidden]=\\\"!showRequiredDays\\\"\\r\\n                   class=\\\"grey-box\\\">\\r\\n            <ion-col>\\r\\n              <ion-grid>\\r\\n                <ion-row>\\r\\n                  <ion-col>\\r\\n                    <ion-label>{{ 'edit-task.lbl-required-days' | translate }}</ion-label>\\r\\n                  </ion-col>\\r\\n                </ion-row> \\r\\n                <ion-row [hidden]=\\\"!showRequiredDays\\\" \\r\\n                          class=\\\"margin-bottom\\\">\\r\\n                  <ion-col *ngFor=\\\"let day of daysOfWeek\\\" \\r\\n                            class=\\\"column\\\">\\r\\n                    <ion-label class=\\\"no-margin-vertical\\\">{{ day | formatDayOfWeekAbbrPipe }}</ion-label>\\r\\n                    <ion-checkbox (ionChange)=\\\"cbDayOfWeek($event, day)\\\" \\r\\n                                  [checked]=\\\"getCbDayOfWeekValue(day)\\\"\\r\\n                                  class=\\\"no-margin\\\"></ion-checkbox>\\r\\n                  </ion-col>\\r\\n                </ion-row>\\r\\n              </ion-grid>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!-- Result Type -->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label>{{ 'edit-task.lbl-result-type' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"2\\\"></ion-col>\\r\\n            <ion-col>\\r\\n              <ion-label>{{ selectedResultTypeCaption }}</ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"2\\\">\\r\\n              <ion-button (click)=\\\"selectResultType()\\\">\\r\\n                <ion-icon name=\\\"create-outline\\\"\\r\\n                          color=\\\"light\\\"\\r\\n                          size=\\\"small\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!--Group-->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col class=\\\"content-center\\\">\\r\\n              <ion-label>{{ 'create-task.lbl-group' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Current Group-->\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"2\\\"></ion-col>\\r\\n            <ion-col>\\r\\n              <ion-label *ngIf=\\\"selectedGroup != null\\\"\\r\\n                         class=\\\"text-wrap\\\">{{ selectedGroup.Name }}</ion-label>\\r\\n            </ion-col>\\r\\n            <!--Edit Group-->\\r\\n            <ion-col size=\\\"2\\\">\\r\\n              <ion-button (click)=\\\"selectGroup()\\\">\\r\\n                <ion-icon name=\\\"create-outline\\\"\\r\\n                          color=\\\"light\\\"\\r\\n                          size=\\\"small\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!-- Position -->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col class=\\\"content-center\\\">\\r\\n              <ion-label>{{ 'create-task.lbl-position' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--First-->\\r\\n          <ion-row *ngIf=\\\"selectedAfterTask == null\\\">\\r\\n            <ion-col size=\\\"2\\\"></ion-col>\\r\\n            <ion-col>\\r\\n              <ion-label>{{ 'edit-task.lbl-first' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n            <!--Edit Button-->\\r\\n            <ion-col size=\\\"2\\\">\\r\\n              <ion-button (click)=\\\"selectPosition()\\\">\\r\\n                <ion-icon name=\\\"create-outline\\\"\\r\\n                          color=\\\"light\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--After First-->\\r\\n          <ion-row *ngIf=\\\"selectedAfterTask != null\\\">\\r\\n            <ion-col size=\\\"2\\\"></ion-col>\\r\\n            <ion-col size=\\\"8\\\">\\r\\n              <ion-label class=\\\"text-wrap\\\">{{ 'edit-task.lbl-after' | translate }} : {{ selectedAfterTask.Name }}</ion-label>\\r\\n            </ion-col>\\r\\n            <!--Edit Button-->\\r\\n            <ion-col size=\\\"2\\\">\\r\\n              <ion-button (click)=\\\"selectPosition()\\\">\\r\\n                <ion-icon name=\\\"create-outline\\\"\\r\\n                          color=\\\"light\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!--Notifications-->\\r\\n      <ion-item lines=\\\"none\\\"\\r\\n                class=\\\"black-box\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label>{{ 'user-settings.lbl-notifications' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Inactivity Notification-->\\r\\n          <ion-row>\\r\\n            <!--Description-->\\r\\n            <ion-col size=\\\"9\\\">\\r\\n              <ion-text class=\\\"small-font margin-left\\\">{{ 'user-settings.lbl-inactivity-reminder-description' | translate }}</ion-text>\\r\\n            </ion-col>\\r\\n            <!--Toggle-->\\r\\n            <ion-col size=\\\"3\\\">\\r\\n              <ion-toggle [(ngModel)]=\\\"notificationEnabled\\\"\\r\\n                          class=\\\"hidden-overflow\\\">\\r\\n              </ion-toggle>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Hour-->\\r\\n          <ion-row [hidden]=\\\"!notificationEnabled\\\">\\r\\n            <ion-col>\\r\\n              <ion-button (click)=\\\"btnNotificationEnterTimeClick()\\\">{{ notificationTimeValue }}</ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!-- Delete Button -->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-button (click)=\\\"btnDeleteClick()\\\"\\r\\n                          color=\\\"danger\\\">\\r\\n                <div class=\\\"content-center-evenly full-size\\\">\\r\\n                  <ion-icon name=\\\"trash-outline\\\"\\r\\n                            color=\\\"light\\\"></ion-icon>\\r\\n                  <ion-label class=\\\"color-white\\\">{{ 'edit-task.btn-delete' | translate }}</ion-label>\\r\\n                </div>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </ion-card-content>\\r\\n</ion-card>\";","export default \"\\r\\n<ion-grid>\\r\\n  <!--Skip All-->\\r\\n  <ion-row [hidden]=\\\"!skipAllBtnShown\\\">\\r\\n    <ion-col class=\\\"content-center\\\">\\r\\n      <ion-button (click)=\\\"btnSkipAllClick()\\\"\\r\\n                  color=\\\"primary\\\"\\r\\n                  size=\\\"small\\\"\\r\\n                  class=\\\"flex-item\\\">\\r\\n        <div class=\\\"content-center-evenly full-size\\\">\\r\\n          <ion-icon name=\\\"close-outline\\\"\\r\\n                    class=\\\"color-white\\\"></ion-icon>\\r\\n          <ion-label class=\\\"color-white\\\">{{ 'group-popover.btn-skip-all' | translate }}</ion-label>\\r\\n        </div>\\r\\n      </ion-button>\\r\\n    </ion-col>\\r\\n  </ion-row>\\r\\n</ion-grid>\\r\\n\";","export default \"<!--Fixed Header-->\\r\\n<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <!--Menu-->\\r\\n        <ion-col size=\\\"3\\\"\\r\\n                 id=\\\"stepMenu\\\">\\r\\n          <ion-menu-button autoHide=\\\"false\\\" color=\\\"dark\\\"></ion-menu-button>\\r\\n        </ion-col>\\r\\n        <!--Previous Day Button-->\\r\\n        <ion-col size=\\\"1\\\"\\r\\n                 id=\\\"stepChangeDate\\\">\\r\\n          <ion-button (click)=\\\"loadPreviousDay()\\\" \\r\\n                      class=\\\"unzoom\\\"\\r\\n                      color=\\\"light\\\">\\r\\n            <ion-icon name=\\\"arrow-back-outline\\\" color=\\\"dark\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <!--Title-->\\r\\n        <ion-col size=\\\"4\\\"\\r\\n                 (click)=\\\"btnCurrentDateClick()\\\"\\r\\n                 id=\\\"stepSelectDate\\\"\\r\\n                 tappable>\\r\\n          <ion-title class=\\\"text-center\\\">\\r\\n            <ion-label color=\\\"light\\\">{{ currentDateTitle }}</ion-label>\\r\\n          </ion-title>\\r\\n        </ion-col>\\r\\n        <!--Next Day Button-->\\r\\n        <ion-col size=\\\"1\\\">\\r\\n          <ion-button (click)=\\\"loadNextDay()\\\" \\r\\n                      class=\\\"unzoom\\\"\\r\\n                      color=\\\"light\\\"> \\r\\n            <ion-icon name=\\\"arrow-forward-outline\\\" color=\\\"dark\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <!--Add Task Button-->\\r\\n        <ion-col size=\\\"3\\\"\\r\\n                 id=\\\"stepNewTask\\\">\\r\\n          <ion-button class=\\\"add-task-button\\\" \\r\\n                      (click)=\\\"addTaskButtonClick()\\\" \\r\\n                      color=\\\"dark\\\">+</ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Progress Bar Text-->\\r\\n      <ion-row [hidden]=\\\"showSettings\\\">\\r\\n        <ion-col class=\\\"no-padding\\\">\\r\\n          <ion-label class=\\\"font-small\\\" color=\\\"light\\\">{{ taskService.currentProgressText }}</ion-label>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Progress Bar-->\\r\\n      <ion-row [hidden]=\\\"showSettings\\\"\\r\\n               class=\\\"margin-bottom-5\\\">\\r\\n        <!--Sync Icon-->\\r\\n        <ion-col size=\\\"1\\\">\\r\\n          <ion-icon name=\\\"repeat-outline\\\"\\r\\n                    [ngClass]=\\\"colorString\\\"\\r\\n                    [hidden]=\\\"!devMode\\\"></ion-icon>\\r\\n        </ion-col>\\r\\n        <!--Progress Bar-->\\r\\n        <ion-col>\\r\\n          <ion-progress-bar [value]=\\\"taskService.currentProgressValue\\\"\\r\\n                            color=\\\"light\\\"></ion-progress-bar>\\r\\n        </ion-col>\\r\\n        <!--Popover-->\\r\\n        <ion-col size=\\\"1\\\" id=\\\"stepPopoverMenu\\\">\\r\\n          <ion-icon name=\\\"ellipsis-vertical-outline\\\"\\r\\n                    color=\\\"dark\\\"\\r\\n                    (click)=\\\"popoverMenuClick($event)\\\"\\r\\n                    tappable></ion-icon>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<!--Scrollable Body-->\\r\\n<ion-content color=\\\"medium\\\">\\r\\n  <!--Group List-->\\r\\n  <app-group-card *ngFor=\\\"let group of taskService.allGroups\\\"\\r\\n                  [currentGroup]=\\\"group\\\"></app-group-card>\\r\\n</ion-content>\\r\\n\\r\\n<!--PRIORITIZE VS EXECUTE (Experiment)-->\\r\\n<ion-footer>\\r\\n  <ion-segment [(ngModel)]=\\\"currentPrioritizeVsExecute\\\"\\r\\n               (ionChange)=\\\"prioritize($event)\\\"\\r\\n               id=\\\"stepPrioritizeExecute\\\">\\r\\n    <ion-segment-button value=\\\"Prioritize\\\">\\r\\n      <ion-grid class=\\\"content-center\\\">\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-icon name=\\\"swap-vertical-outline\\\" color=\\\"primary\\\" class=\\\"font-large margin-5\\\"></ion-icon>\\r\\n          </ion-col>\\r\\n          <ion-col>\\r\\n            <ion-label color=\\\"primary\\\" class=\\\"text-wrap font-large\\\">Prioritize</ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-segment-button>\\r\\n    <ion-segment-button value=\\\"Execute\\\" class=\\\"content-center\\\">\\r\\n      <ion-grid class=\\\"content-center\\\">\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-icon name=\\\"checkbox-outline\\\" color=\\\"success\\\" class=\\\"font-large margin-5\\\"></ion-icon>\\r\\n          </ion-col>\\r\\n          <ion-col>\\r\\n            <ion-label color=\\\"success\\\" class=\\\"text-wrap font-large\\\">Execute</ion-label>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </ion-segment-button>\\r\\n  </ion-segment>\\r\\n</ion-footer>\";","export default \"<ion-card (click)=\\\"cardClick()\\\" tappable>\\r\\n  <ion-grid>\\r\\n    <ion-row> \\r\\n      <!-- CheckBox to select task -->\\r\\n      <ion-col size=\\\"2\\\" class=\\\"content-center\\\">\\r\\n        <ion-checkbox [ngModel]=\\\"taskSelected\\\"\\r\\n                      (ionChange)=\\\"checkChanged()\\\"></ion-checkbox>\\r\\n      </ion-col>\\r\\n      <!-- Task Name -->\\r\\n      <ion-col class=\\\"content-center\\\"\\r\\n               size=\\\"10\\\">       \\r\\n        <h3 class=\\\"text-center\\\">{{ currentTask.Name }}</h3>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row> \\r\\n      <!-- Description -->\\r\\n      <ion-col class=\\\"content-center\\\"\\r\\n               size=\\\"10\\\"\\r\\n               offset=\\\"2\\\"\\r\\n               [hidden]=\\\"!showDescription\\\">       \\r\\n        <ion-text>{{ currentTask.Description }}</ion-text>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-card>\";","export default \"<ion-card color=\\\"light\\\"\\r\\n          class=\\\"full-height\\\">\\r\\n  <!-- Fixed Header -->\\r\\n  <ion-card-header>\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <!--Back Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"closePopup()\\\">\\r\\n            <ion-icon name=\\\"arrow-back\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <!--Title-->\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <h2>{{ 'task-selection.lbl-title' | translate }}</h2>\\r\\n        </ion-col>\\r\\n        <!--Save Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"btnSaveClick()\\\"\\r\\n                      color=\\\"success\\\">\\r\\n            <ion-icon name=\\\"save-outline\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row class=\\\"padding-5\\\">\\r\\n        <ion-col>\\r\\n          <ion-text>\\r\\n            {{ 'task-selection.lbl-sub-title-msg' | translate }}\\r\\n          </ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-header>\\r\\n\\r\\n  <!-- Body -->\\r\\n  <ion-card-content>\\r\\n    <!--Task List-->\\r\\n    <ion-grid>\\r\\n      <ion-row class=\\\"grey-box background-white\\\">\\r\\n        <ion-col>\\r\\n          <ion-grid>\\r\\n            <ion-row>\\r\\n              <ion-col class=\\\"content-center\\\">\\r\\n                <h2>Daily tasks</h2>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <ion-col>\\r\\n                <ion-list class=\\\"max-width\\\">\\r\\n                  <ng-container *ngFor=\\\"let task of selectableTasksDaily\\\">\\r\\n                    <app-task-selection-card [currentTask]=\\\"task\\\"\\r\\n                                             (checkChangedEvent)=\\\"taskSelected($event)\\\"></app-task-selection-card>\\r\\n                  </ng-container>\\r\\n                </ion-list>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n          </ion-grid>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row class=\\\"grey-box background-white\\\">\\r\\n        <ion-col>\\r\\n          <ion-grid>\\r\\n            <ion-row>\\r\\n              <ion-col class=\\\"content-center\\\">\\r\\n                <h2>Special tasks</h2>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n            <ion-row>\\r\\n              <ion-col>\\r\\n                <ion-list class=\\\"max-width\\\">\\r\\n                  <ng-container *ngFor=\\\"let task of selectableTasksSpecial\\\">\\r\\n                    <app-task-selection-card [currentTask]=\\\"task\\\"\\r\\n                                             (checkChangedEvent)=\\\"taskSelected($event)\\\"></app-task-selection-card>\\r\\n                  </ng-container>\\r\\n                </ion-list>\\r\\n              </ion-col>\\r\\n            </ion-row>\\r\\n          </ion-grid>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-content>\\r\\n</ion-card>\";","export default \"<ion-card class=\\\"full-height\\\">\\r\\n  <!-- Fixed Header -->\\r\\n  <ion-card-header>\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <!--Back Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"closePopup()\\\">\\r\\n            <ion-icon name=\\\"arrow-back\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <!--Title-->\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <h2>{{ 'terms.lbl-title' | translate }}</h2>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-header>\\r\\n\\r\\n  <ion-card-content>\\r\\n    <ion-grid>\\r\\n      <!--Intellectual Property-->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <h3>{{ 'terms.lbl-intellectual-property-title' | translate }}</h3>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'terms.lbl-intellectual-property-txt' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Fees-->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <h3>{{ 'terms.lbl-fees-title' | translate }}</h3>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'terms.lbl-fees-txt' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Third Parties-->\\r\\n      <!--ion-row>\\r\\n        <ion-col>\\r\\n          <h3>{{ 'terms.lbl-third-party-title' | translate }}</h3>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'terms.lbl-third-party-text' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row-->\\r\\n      <!--Data Usage-->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <h3>{{ 'terms.lbl-data-usage-title' | translate }}</h3>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'terms.lbl-data-usage-txt' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Updates-->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <h3>{{ 'terms.lbl-updates-title' | translate }}</h3>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'terms.lbl-updates-txt' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Changes to these terms and conditions-->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <h3>{{ 'terms.lbl-changes-title' | translate }}</h3>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'terms.lbl-changes-txt' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <!--Contact Us-->\\r\\n      <!--ion-row>\\r\\n        <ion-col>\\r\\n          <h3>Contact Us</h3>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>If you have any questions or suggestions about my Terms and Conditions, do not hesitate to contact me at [App contact information].</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row-->\\r\\n      <!--Last Update-->\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <ion-text>{{ 'terms.lbl-last-update' | translate }}</ion-text>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-content>\\r\\n</ion-card>\";","export default \"<ion-card class=\\\"full-height\\\"\\r\\n          color=\\\"light\\\">\\r\\n  <!-- Fixed Header -->\\r\\n  <ion-card-header>\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <!--Back Button-->\\r\\n        <ion-col size=\\\"3\\\">\\r\\n          <ion-button (click)=\\\"closePopup()\\\">\\r\\n            <ion-icon name=\\\"arrow-back\\\"\\r\\n                      color=\\\"light\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n        <!--Title-->\\r\\n        <ion-col size=\\\"6\\\">\\r\\n          <ion-label color=\\\"dark\\\">\\r\\n            <ion-title>{{ 'user-settings.lbl-title' | translate }}</ion-title>\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-header>\\r\\n\\r\\n  <!-- Scrollable Body -->\\r\\n  <ion-card-content>\\r\\n    <ion-list>\\r\\n      <!-- Language -->\\r\\n      <!-- TEMPORARILY REMOVED -->\\r\\n      <!--ion-item lines=\\\"none\\\"\\r\\n                class=\\\"black-box\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <h2>{{ 'menu.lbl-language' | translate }}</h2>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col class=\\\"content-center\\\">\\r\\n              <ion-select [(ngModel)]=\\\"currentLanguage\\\"\\r\\n                          (ionChange)=\\\"languageChanged($event)\\\"\\r\\n                          class=\\\"dropdown\\\">\\r\\n                <ion-select-option [value]=\\\"0\\\">{{ 'menu.select-english' | translate }}</ion-select-option>\\r\\n                <ion-select-option [value]=\\\"1\\\">{{ 'menu.select-french' | translate }}</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>     \\r\\n      </ion-item-->\\r\\n      <!--Privacy-->\\r\\n      <ion-item lines=\\\"none\\\"\\r\\n                class=\\\"black-box\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <h2>{{ 'menu.lbl-privacy' | translate }}</h2>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Choose Privacy-->\\r\\n          <ion-row>\\r\\n            <ion-col class=\\\"grey-box\\\">\\r\\n              <ion-radio-group (ionChange)=\\\"privacyChanged($event)\\\"\\r\\n                               [(ngModel)]=\\\"syncCurrentValue\\\"\\r\\n                               class=\\\"hidden-overflow\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"text-wrap small-font\\\">{{ 'user-settings.privacy-no-sync' | translate }}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"  value=\\\"NoSync\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"text-wrap small-font\\\">{{ 'user-settings.privacy-sync' | translate }}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Sync\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-radio-group>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Download my data-->\\r\\n          <ion-row class=\\\"grey-box\\\">\\r\\n            <ion-col size=\\\"9\\\"\\r\\n                     class=\\\"align-left\\\">\\r\\n              <ion-label class=\\\"text-wrap small-font padding-5 align-left\\\">{{ 'user-settings.download-data-btn' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"3\\\">\\r\\n              <ion-button (click)=\\\"btnDownloadMyDataClick()\\\"\\r\\n                          color=\\\"dark\\\">\\r\\n                <ion-icon name=\\\"cloud-download-outline\\\"\\r\\n                          color=\\\"light\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Delete my data-->\\r\\n          <ion-row class=\\\"grey-box\\\">\\r\\n            <ion-col size=\\\"9\\\">\\r\\n              <ion-label class=\\\"text-wrap small-font padding-5\\\">{{ 'user-settings.delete-my-data' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"3\\\">\\r\\n              <ion-button (click)=\\\"btnDeleteMyDataClick()\\\"\\r\\n                          color=\\\"danger\\\">\\r\\n                <ion-icon name=\\\"trash-outline\\\"\\r\\n                          color=\\\"light\\\"></ion-icon>\\r\\n              </ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!--Auto skip after 2 days, wait for feature to be requested-->\\r\\n      <!--ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"9\\\">\\r\\n              <ion-label class=\\\"text-wrap small-font\\\">{{ 'user-settings.auto-skip-after-2-days' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"3\\\">\\r\\n              <ion-toggle [(ngModel)]=\\\"autoSkipEnabled\\\"\\r\\n                          (ionChange)=\\\"autoSkipChanged($event)\\\"\\r\\n                          class=\\\"hidden-overflow\\\">\\r\\n              </ion-toggle>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item-->\\r\\n      <!--Choose End of day time-->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <h2>{{ 'menu.label-end-of-day' | translate }}</h2>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col size=\\\"3\\\"></ion-col>\\r\\n            <ion-col size=\\\"6\\\">\\r\\n              <ion-button (click)=\\\"btnEnterTimeClick()\\\"\\r\\n                          color=\\\"primary\\\">{{ endOfDayTime }}</ion-button>\\r\\n            </ion-col>\\r\\n            <ion-col size=\\\"3\\\">\\r\\n              <ion-button (click)=\\\"btnHelpClick()\\\">?</ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!--Keep vertical-->\\r\\n      <ion-item class=\\\"black-box\\\"\\r\\n                lines=\\\"none\\\">\\r\\n        <ion-grid>\\r\\n          <!--Title-->\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-label>{{ 'user-settings.title-keep-portrait' | translate }}</ion-label>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <!--Toggle-->\\r\\n          <ion-row>\\r\\n            <!--Description-->\\r\\n            <ion-col size=\\\"9\\\">\\r\\n              <ion-text class=\\\"small-font margin-left\\\">{{ 'user-settings.lbl-keep-portrait' | translate }}</ion-text>\\r\\n            </ion-col>\\r\\n            <!--Toggle-->\\r\\n            <ion-col size=\\\"3\\\">\\r\\n              <ion-toggle [(ngModel)]=\\\"keepPortraitEnabled\\\"\\r\\n                          (ionChange)=\\\"keepPortraitChanged($event)\\\"\\r\\n                          class=\\\"hidden-overflow\\\">\\r\\n              </ion-toggle>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </ion-card-content>\\r\\n</ion-card>\\r\\n\";","export default \"<ion-card color=\\\"light\\\">\\r\\n  <ion-card-header>\\r\\n    <ion-grid>\\r\\n      <ion-row>\\r\\n        <ion-col>\\r\\n          <!--Title-->\\r\\n          <h2>{{ 'welcome.lbl-title' | translate }}</h2>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-card-header>\\r\\n\\r\\n  <!-- Scrollable Body -->\\r\\n  <ion-card-content>\\r\\n    <ion-list>\\r\\n      <!--Choose Language-->\\r\\n      <!-- TEMPORARILY REMOVED -->\\r\\n      <!--ion-item lines=\\\"none\\\"\\r\\n                class=\\\"black-box\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <h2>{{ 'welcome.lbl-choose-language' | translate }}</h2>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col class=\\\"content-center\\\">\\r\\n              <ion-select [(ngModel)]=\\\"currentLanguage\\\"\\r\\n                          (ionChange)=\\\"languageChanged($event)\\\"\\r\\n                          class=\\\"dropdown\\\">\\r\\n                <ion-select-option [value]=\\\"0\\\">{{ 'menu.select-english' | translate }}</ion-select-option>\\r\\n                <ion-select-option [value]=\\\"1\\\">{{ 'menu.select-french' | translate }}</ion-select-option>\\r\\n              </ion-select>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item-->\\r\\n      <!--Choose Privacy-->\\r\\n      <ion-item lines=\\\"none\\\"\\r\\n                class=\\\"black-box\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <h2>{{ 'welcome.lbl-choose-privacy' | translate }}</h2>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n          <ion-row>\\r\\n            <ion-col class=\\\"grey-box\\\">\\r\\n              <ion-radio-group (ionChange)=\\\"privacyChanged($event)\\\"\\r\\n                              [(ngModel)]=\\\"syncCurrentValue\\\">\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"text-wrap\\\">{{ 'user-settings.privacy-no-sync' | translate }}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\"  value=\\\"NoSync\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n                <ion-item lines=\\\"none\\\">\\r\\n                  <ion-label class=\\\"text-wrap\\\">{{ 'user-settings.privacy-sync' | translate }}</ion-label>\\r\\n                  <ion-radio slot=\\\"start\\\" value=\\\"Sync\\\"></ion-radio>\\r\\n                </ion-item>\\r\\n              </ion-radio-group>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n      <!--Next button-->\\r\\n      <ion-item lines=\\\"none\\\"\\r\\n                color=\\\"light\\\">\\r\\n        <ion-grid>\\r\\n          <ion-row>\\r\\n            <ion-col>\\r\\n              <ion-button (click)=\\\"btnNextClick()\\\">{{ 'welcome.btn-next' | translate }}</ion-button>\\r\\n            </ion-col>\\r\\n          </ion-row>\\r\\n        </ion-grid>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n  </ion-card-content>\\r\\n</ion-card>\";","var map = {\n\t\"./af\": 32139,\n\t\"./af.js\": 32139,\n\t\"./ar\": 22600,\n\t\"./ar-dz\": 81001,\n\t\"./ar-dz.js\": 81001,\n\t\"./ar-kw\": 99842,\n\t\"./ar-kw.js\": 99842,\n\t\"./ar-ly\": 9826,\n\t\"./ar-ly.js\": 9826,\n\t\"./ar-ma\": 15452,\n\t\"./ar-ma.js\": 15452,\n\t\"./ar-sa\": 11802,\n\t\"./ar-sa.js\": 11802,\n\t\"./ar-tn\": 4094,\n\t\"./ar-tn.js\": 4094,\n\t\"./ar.js\": 22600,\n\t\"./az\": 96375,\n\t\"./az.js\": 96375,\n\t\"./be\": 2086,\n\t\"./be.js\": 2086,\n\t\"./bg\": 85236,\n\t\"./bg.js\": 85236,\n\t\"./bm\": 81704,\n\t\"./bm.js\": 81704,\n\t\"./bn\": 94506,\n\t\"./bn-bd\": 34466,\n\t\"./bn-bd.js\": 34466,\n\t\"./bn.js\": 94506,\n\t\"./bo\": 47891,\n\t\"./bo.js\": 47891,\n\t\"./br\": 93348,\n\t\"./br.js\": 93348,\n\t\"./bs\": 84848,\n\t\"./bs.js\": 84848,\n\t\"./ca\": 35928,\n\t\"./ca.js\": 35928,\n\t\"./cs\": 31839,\n\t\"./cs.js\": 31839,\n\t\"./cv\": 59151,\n\t\"./cv.js\": 59151,\n\t\"./cy\": 35761,\n\t\"./cy.js\": 35761,\n\t\"./da\": 56686,\n\t\"./da.js\": 56686,\n\t\"./de\": 85177,\n\t\"./de-at\": 2311,\n\t\"./de-at.js\": 2311,\n\t\"./de-ch\": 54407,\n\t\"./de-ch.js\": 54407,\n\t\"./de.js\": 85177,\n\t\"./dv\": 79729,\n\t\"./dv.js\": 79729,\n\t\"./el\": 60430,\n\t\"./el.js\": 60430,\n\t\"./en-au\": 28430,\n\t\"./en-au.js\": 28430,\n\t\"./en-ca\": 61139,\n\t\"./en-ca.js\": 61139,\n\t\"./en-gb\": 56747,\n\t\"./en-gb.js\": 56747,\n\t\"./en-ie\": 79466,\n\t\"./en-ie.js\": 79466,\n\t\"./en-il\": 52121,\n\t\"./en-il.js\": 52121,\n\t\"./en-in\": 41167,\n\t\"./en-in.js\": 41167,\n\t\"./en-nz\": 62030,\n\t\"./en-nz.js\": 62030,\n\t\"./en-sg\": 43646,\n\t\"./en-sg.js\": 43646,\n\t\"./eo\": 73126,\n\t\"./eo.js\": 73126,\n\t\"./es\": 38819,\n\t\"./es-do\": 69293,\n\t\"./es-do.js\": 69293,\n\t\"./es-mx\": 65304,\n\t\"./es-mx.js\": 65304,\n\t\"./es-us\": 66068,\n\t\"./es-us.js\": 66068,\n\t\"./es.js\": 38819,\n\t\"./et\": 23291,\n\t\"./et.js\": 23291,\n\t\"./eu\": 1400,\n\t\"./eu.js\": 1400,\n\t\"./fa\": 70043,\n\t\"./fa.js\": 70043,\n\t\"./fi\": 16138,\n\t\"./fi.js\": 16138,\n\t\"./fil\": 11466,\n\t\"./fil.js\": 11466,\n\t\"./fo\": 76803,\n\t\"./fo.js\": 76803,\n\t\"./fr\": 65523,\n\t\"./fr-ca\": 697,\n\t\"./fr-ca.js\": 697,\n\t\"./fr-ch\": 69001,\n\t\"./fr-ch.js\": 69001,\n\t\"./fr.js\": 65523,\n\t\"./fy\": 21116,\n\t\"./fy.js\": 21116,\n\t\"./ga\": 66151,\n\t\"./ga.js\": 66151,\n\t\"./gd\": 93094,\n\t\"./gd.js\": 93094,\n\t\"./gl\": 11279,\n\t\"./gl.js\": 11279,\n\t\"./gom-deva\": 64458,\n\t\"./gom-deva.js\": 64458,\n\t\"./gom-latn\": 66320,\n\t\"./gom-latn.js\": 66320,\n\t\"./gu\": 78658,\n\t\"./gu.js\": 78658,\n\t\"./he\": 52153,\n\t\"./he.js\": 52153,\n\t\"./hi\": 98732,\n\t\"./hi.js\": 98732,\n\t\"./hr\": 84960,\n\t\"./hr.js\": 84960,\n\t\"./hu\": 76339,\n\t\"./hu.js\": 76339,\n\t\"./hy-am\": 11862,\n\t\"./hy-am.js\": 11862,\n\t\"./id\": 71068,\n\t\"./id.js\": 71068,\n\t\"./is\": 61260,\n\t\"./is.js\": 61260,\n\t\"./it\": 1007,\n\t\"./it-ch\": 78063,\n\t\"./it-ch.js\": 78063,\n\t\"./it.js\": 1007,\n\t\"./ja\": 6854,\n\t\"./ja.js\": 6854,\n\t\"./jv\": 92390,\n\t\"./jv.js\": 92390,\n\t\"./ka\": 35958,\n\t\"./ka.js\": 35958,\n\t\"./kk\": 67216,\n\t\"./kk.js\": 67216,\n\t\"./km\": 61061,\n\t\"./km.js\": 61061,\n\t\"./kn\": 24060,\n\t\"./kn.js\": 24060,\n\t\"./ko\": 55216,\n\t\"./ko.js\": 55216,\n\t\"./ku\": 50894,\n\t\"./ku.js\": 50894,\n\t\"./ky\": 609,\n\t\"./ky.js\": 609,\n\t\"./lb\": 3591,\n\t\"./lb.js\": 3591,\n\t\"./lo\": 38381,\n\t\"./lo.js\": 38381,\n\t\"./lt\": 56118,\n\t\"./lt.js\": 56118,\n\t\"./lv\": 67889,\n\t\"./lv.js\": 67889,\n\t\"./me\": 94274,\n\t\"./me.js\": 94274,\n\t\"./mi\": 39226,\n\t\"./mi.js\": 39226,\n\t\"./mk\": 528,\n\t\"./mk.js\": 528,\n\t\"./ml\": 27938,\n\t\"./ml.js\": 27938,\n\t\"./mn\": 35456,\n\t\"./mn.js\": 35456,\n\t\"./mr\": 94393,\n\t\"./mr.js\": 94393,\n\t\"./ms\": 93647,\n\t\"./ms-my\": 33049,\n\t\"./ms-my.js\": 33049,\n\t\"./ms.js\": 93647,\n\t\"./mt\": 26097,\n\t\"./mt.js\": 26097,\n\t\"./my\": 66277,\n\t\"./my.js\": 66277,\n\t\"./nb\": 67245,\n\t\"./nb.js\": 67245,\n\t\"./ne\": 3988,\n\t\"./ne.js\": 3988,\n\t\"./nl\": 42557,\n\t\"./nl-be\": 20478,\n\t\"./nl-be.js\": 20478,\n\t\"./nl.js\": 42557,\n\t\"./nn\": 9046,\n\t\"./nn.js\": 9046,\n\t\"./oc-lnc\": 83131,\n\t\"./oc-lnc.js\": 83131,\n\t\"./pa-in\": 51731,\n\t\"./pa-in.js\": 51731,\n\t\"./pl\": 8409,\n\t\"./pl.js\": 8409,\n\t\"./pt\": 41178,\n\t\"./pt-br\": 56558,\n\t\"./pt-br.js\": 56558,\n\t\"./pt.js\": 41178,\n\t\"./ro\": 84138,\n\t\"./ro.js\": 84138,\n\t\"./ru\": 73380,\n\t\"./ru.js\": 73380,\n\t\"./sd\": 42889,\n\t\"./sd.js\": 42889,\n\t\"./se\": 22774,\n\t\"./se.js\": 22774,\n\t\"./si\": 53776,\n\t\"./si.js\": 53776,\n\t\"./sk\": 9597,\n\t\"./sk.js\": 9597,\n\t\"./sl\": 93871,\n\t\"./sl.js\": 93871,\n\t\"./sq\": 44228,\n\t\"./sq.js\": 44228,\n\t\"./sr\": 40774,\n\t\"./sr-cyrl\": 61928,\n\t\"./sr-cyrl.js\": 61928,\n\t\"./sr.js\": 40774,\n\t\"./ss\": 83176,\n\t\"./ss.js\": 83176,\n\t\"./sv\": 52422,\n\t\"./sv.js\": 52422,\n\t\"./sw\": 71621,\n\t\"./sw.js\": 71621,\n\t\"./ta\": 5731,\n\t\"./ta.js\": 5731,\n\t\"./te\": 18025,\n\t\"./te.js\": 18025,\n\t\"./tet\": 53934,\n\t\"./tet.js\": 53934,\n\t\"./tg\": 99958,\n\t\"./tg.js\": 99958,\n\t\"./th\": 84251,\n\t\"./th.js\": 84251,\n\t\"./tk\": 65494,\n\t\"./tk.js\": 65494,\n\t\"./tl-ph\": 38568,\n\t\"./tl-ph.js\": 38568,\n\t\"./tlh\": 73158,\n\t\"./tlh.js\": 73158,\n\t\"./tr\": 49574,\n\t\"./tr.js\": 49574,\n\t\"./tzl\": 64311,\n\t\"./tzl.js\": 64311,\n\t\"./tzm\": 99990,\n\t\"./tzm-latn\": 42380,\n\t\"./tzm-latn.js\": 42380,\n\t\"./tzm.js\": 99990,\n\t\"./ug-cn\": 52356,\n\t\"./ug-cn.js\": 52356,\n\t\"./uk\": 54934,\n\t\"./uk.js\": 54934,\n\t\"./ur\": 84515,\n\t\"./ur.js\": 84515,\n\t\"./uz\": 40058,\n\t\"./uz-latn\": 41875,\n\t\"./uz-latn.js\": 41875,\n\t\"./uz.js\": 40058,\n\t\"./vi\": 13325,\n\t\"./vi.js\": 13325,\n\t\"./x-pseudo\": 39208,\n\t\"./x-pseudo.js\": 39208,\n\t\"./yo\": 18742,\n\t\"./yo.js\": 18742,\n\t\"./zh-cn\": 42378,\n\t\"./zh-cn.js\": 42378,\n\t\"./zh-hk\": 21074,\n\t\"./zh-hk.js\": 21074,\n\t\"./zh-mo\": 74671,\n\t\"./zh-mo.js\": 74671,\n\t\"./zh-tw\": 20259,\n\t\"./zh-tw.js\": 20259\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;"],"names":[],"sourceRoot":"webpack:///"}